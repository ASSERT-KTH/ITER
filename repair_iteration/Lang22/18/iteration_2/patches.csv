bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
2	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
3	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
5	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
6	[BUG]  [BUGGY]  long  t&=0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  long  t&=0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	long  t&=0;	  int    t&=0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
7	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v/2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
10	[BUG]  [BUGGY]  t&=1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t&=1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t&=1;	  t&=2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
11	[BUG]  [BUGGY]  t&=0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t&=0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t&=0;	  t&=2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
12	[BUG]  [BUGGY]  t&=3;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t&=3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t&=3;	  t&=2;    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
13	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
15	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  4;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  4;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
16	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  3;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
17	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
18	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  4;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
19	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
20	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31);	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
21	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  Integer  t  =  new  Integer(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(0);	  Integer    t    =    new    Integer(u);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
26	[BUG]  [BUGGY]  Integer  t  =  new  Integer(k);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(k);	  Integer    t    =    new    Integer(u);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
27	[BUG]  [BUGGY]  Integer  t  =  new  Integer(v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(v);	  Integer    t    =    new    Integer(u);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
28	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(u  +  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u  +  1);	  Integer    t    =    new    Integer(u);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
29	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
30	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
31	[BUG]  [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >=  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    >=    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
32	[BUG]  [BUGGY]  int  t  =  (v  >>  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >>  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >>  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    >=    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
33	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
34	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
35	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
36	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
37	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  int  v  =(u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =(u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =(u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
40	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  k);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  k);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1,  k);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
41	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
42	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2;	  int    t    =    ((    u&1)!=    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)!=    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  int  t  =  ((  u&1)  >>  1)?  0  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  >>  1)?  0  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  >>  1)?  0  :  -(v&2)/  2;	  int    t    =    ((    u&1)!=    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
46	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
47	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
48	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  3;	  int    t    =    ((    u&1)    ==    1)?    1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
49	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  4;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  4;	  int    t    =    ((    u&1)    ==    1)?    1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
50	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B2*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B2*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/*B2*/;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  k);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
53	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
54	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  hashCode);	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
55	[BUG]  [BUGGY]  int  u  =((  u&1)!=  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)!=  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)!=  1)?  1  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
56	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
57	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
58	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  /(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  /(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  /(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
59	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
60	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0*/;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0*/;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
61	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u,  k);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(u,  k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u,  k);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
62	[BUG]  [BUGGY]  float  t  =(float)Math.rint(u,  v);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  float  t  =(float)Math.rint(u,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	float  t  =(float)Math.rint(u,  v);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
63	[BUG]  [BUGGY]  char  t  =(char)Math.rint(u,  v);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t  =(char)Math.rint(u,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t  =(char)Math.rint(u,  v);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
64	[BUG]  [BUGGY]  t  =(int)Math.rint(u,  k);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t  =(int)Math.rint(u,  k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t  =(int)Math.rint(u,  k);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
65	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
66	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  4;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
67	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  3;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
68	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&1)/  2  *  B3;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
69	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&1)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
70	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
71	[BUG]  [BUGGY]  int  t  =  (u  <  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  <  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  <  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
72	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
73	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&1)/  2;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
74	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
75	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
76	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
77	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -1  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -1  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -1  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
78	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
79	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  -1  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  -1  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  -1  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
80	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
81	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
82	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
83	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
84	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
85	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
86	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
87	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
88	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
89	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
90	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
91	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
93	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
94	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
95	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom0);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denom0);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
96	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a2;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a2;	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
97	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u,  k);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(u,  k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u,  k);	  Integer    t    =    new    Integer(u,    v);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
98	[BUG]  [BUGGY]  Integer  t  =  new  Integer(k,  v);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(k,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(k,  v);	  Integer    t    =    new    Integer(u,    v);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
99	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u,  v  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(u,  v  +  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u,  v  +  1);	  Integer    t    =    new    Integer(u,    v);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
100	[BUG]  [BUGGY]  Integer  t  =  new  Integer(v,  u);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(v,  u);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(v,  u);	  Integer    t    =    new    Integer(u,    v);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
101	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -1  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
102	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  1  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  1  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
103	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
104	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
105	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
106	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
107	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
108	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  31  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
109	[BUG]  [BUGGY]  long  t&=2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  long  t&=2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	long  t&=2;	  int    t&=2;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
110	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&1)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
111	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&1)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&1)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&1)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
112	[BUG]  [BUGGY]  t/=1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t/=1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t/=1;	  t/=2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
113	[BUG]  [BUGGY]  t/=3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t/=3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t/=3;	  t/=2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
114	[BUG]  [BUGGY]  t/=4;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t/=4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t/=4;	  t/=2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
115	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
116	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  4;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
117	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
118	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
119	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
120	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  -  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  -  1;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
121	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator;	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
122	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator;	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
123	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
124	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
125	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3;	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
126	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
127	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
128	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
129	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
130	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
131	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  4;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  4;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
132	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  k;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  k;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  k;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
133	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
134	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
135	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    a1    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
136	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
137	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
138	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
139	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
140	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
141	[BUG]  [BUGGY]  int  t  =(int)Math.floor(u,  k);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.floor(u,  k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.floor(u,  k);	  int    t    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
142	[BUG]  [BUGGY]  float  t  =(float)Math.floor(u,  v);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  float  t  =(float)Math.floor(u,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	float  t  =(float)Math.floor(u,  v);	  int    t    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
143	[BUG]  [BUGGY]  t  =(int)Math.floor(u,  k);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t  =(int)Math.floor(u,  k);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t  =(int)Math.floor(u,  k);	  int    t    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
144	[BUG]  [BUGGY]  char  t  =(char)Math.floor(u,  v);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t  =(char)Math.floor(u,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t  =(char)Math.floor(u,  v);	  int    t    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
145	[BUG]  [BUGGY]  int  t&=3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t&=3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t&=3;	  int    t&=1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
146	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
147	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    k    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
148	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
149	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
150	[BUG]  [BUGGY]  float  t  =(float)Math.rint(u);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  float  t  =(float)Math.rint(u);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	float  t  =(float)Math.rint(u);	  int    t    =(int)Math.rint(u);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
151	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u  +  1,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(u  +  1,  v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u  +  1,  v);	  int    t    =(int)Math.rint(u);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
152	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&2)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
153	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
154	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    a1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
155	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
156	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  +  1;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
157	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&1)/*B3;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/*B3;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
158	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/  2.0;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/*B3;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
159	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
160	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
161	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
162	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  k  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  k  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  k  :  -(v&2)/*B3*/;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
163	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  0  :  -(v&2)/*B3*/;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
164	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
165	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -1  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -1  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
166	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(u,  v  -  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u,  v  -  1);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
167	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u,  v  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(u,  v  +  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u,  v  +  1);	  int    t    =(int)Math.rint(u,    v);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
168	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v/2)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v/2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
169	[BUG]  [BUGGY]  t/=2  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t/=2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t/=2  +  1;	  t/=2;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
170	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
171	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v%2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v%2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v%2)/  2;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
172	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
173	[BUG]  [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&1)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&1)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >=  1)?  u  :  -(v&1)/  2;	  int    t    =    (v    >=    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
174	[BUG]  [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >=  1)?  u  :  -(v&2)/  2;	  int    t    =    (v    >=    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
175	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
176	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
177	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  31*/;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
178	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32*/;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
179	[BUG]  [BUGGY]  float  t&=2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  float  t&=2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	float  t&=2;	  int    t&=2;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
180	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
181	[BUG]  [BUGGY]  int  t  =(int)Math.floor(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.floor(u,  v  -  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.floor(u,  v  -  1);	  int    t    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
182	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  31*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
183	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
184	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
185	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  32;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
186	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
187	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&2)/  2;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
188	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/*B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/*B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&1)/*B3;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
189	[BUG]  [BUGGY]  int  t  =  (v  <  <  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  <  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  <  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
190	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
191	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  0,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  0,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  0,  denominator;	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
192	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  a1);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
193	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
194	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /  2;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
195	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  -1  :  -(v&2)/*B3*/;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
196	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  -1  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (u  ==  1)?  -1  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  -1  :  -(v&2)/  2;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
197	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  -(v&2)/  1;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
198	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
199	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4  *  B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  4  *  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
200	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  31*/;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
201	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31*/;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
202	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&1)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
203	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
204	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  32;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
205	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  4;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  4;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
206	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
207	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
208	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
209	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  +  1;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/  +  1;	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
210	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  0,  denominator);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
211	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
212	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
213	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  31;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
214	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
215	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
216	[BUG]  [BUGGY]  float  t&=0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  float  t&=0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	float  t&=0;	  int    t&=0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
217	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
218	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
219	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  32);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  32);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  32);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
220	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    a1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
221	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(u  +  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u  +  1);	  int    t    =(int)Math.rint(u);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
222	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
223	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2.0*/;	  int    t    =    ((    u&1)    ==    1)?    1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
224	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2.0*/;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
225	[BUG]  [BUGGY]  int  t  =(v  ==  1)?  31  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(v  ==  1)?  31  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(v  ==  1)?  31  :  -(v&2)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
226	[BUG]  [BUGGY]  int  t  =  (v  >>  1)?  u  :  -(v&1)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >>  1)?  u  :  -(v&1)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >>  1)?  u  :  -(v&1)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
227	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2.0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
228	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -1  :  -(v/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
229	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  -1  :  -(v&2)/*B3*/;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
230	[BUG]  [BUGGY]  t  =  (v  ==  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  t  =  (v  ==  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t  =  (v  ==  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (u    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
231	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    1    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
232	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  k*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
233	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
234	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
235	[BUG]  [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  v&1)  ==  1)?  -1  :  -(v&1)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&1)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
236	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&1)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -(v&1)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
237	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
238	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&1)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(v&1)/*B3*/;	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
239	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
240	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
241	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  <  <  B3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  <  <  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  <  <  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
242	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
243	[BUG]  [BUGGY]  char  t&=1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t&=1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t&=1;	  int    t&=1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
244	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
245	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  <  <  B3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  <  <  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  <  <  B3;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
246	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -1  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    -1    :    -1    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
247	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/  2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  31  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
248	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a2  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a2  :  -(v&2)/  2.0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a2  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    a1    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
249	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  k;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  k;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  k;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
250	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
251	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3*/;	  int    t    =    (v    <    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
252	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    a1    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
253	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
254	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0);	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
255	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
256	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  -  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  -  1;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
257	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
258	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  /(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -1    /(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
259	[BUG]  [BUGGY]  int  t  =  (v  >  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  >  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (v    >=    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
260	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/  2);	  int    t    =    ((    u&1)!=    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
261	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -1  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -1  -(v&2)/*B3*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -1  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    31    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
262	[BUG]  [BUGGY]  char  t&=2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t&=2;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t&=2;	  int    t&=2;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
263	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  k*/;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
264	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
265	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2);	  int    t    =    ((    u&1)    ==    1)?    31    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
266	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  +  1;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  +  1;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/    2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
267	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  Integer  t  =  new  Integer(u,  v  -  1);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u,  v  -  1);	  Integer    t    =    new    Integer(u,    v);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
268	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
269	[BUG]  [BUGGY]  char  t&=0;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t&=0;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t&=0;	  int    t&=0;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
270	[BUG]  [BUGGY]  int  t  =(int)Math.rint(v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =(int)Math.rint(v);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(v);	  int    t    =(int)Math.rint(u);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
271	[BUG]  [BUGGY]  char  t  =(char)Math.rint(u);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  char  t  =(char)Math.rint(u);  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	char  t  =(char)Math.rint(u);	  int    t    =(int)Math.rint(u);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
272	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  <  <  B3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  <  <  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  <  <  B3;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
273	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&1)/  2  *  B3;	  int    t    =    (v    ==    1)?    u    :    -(v&1)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
274	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v2/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v2/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/  :  -(v2/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
275	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;  [BUGGY]      int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
276	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  k*/;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
277	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  32*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }        [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  32*/;  [BUGGY]        do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  32*/;	  int    t    =    ((    u&1)    ==    1)?    -1    -(v&2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
