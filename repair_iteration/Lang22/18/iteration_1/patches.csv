bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -1  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
2	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/  :  -(v/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2.0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2.0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)!=  1)?  0  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (u  ==  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (u  ==  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
16	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  k  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
23	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  /(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  t/=2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  t/=2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t/=2;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =(int)Math.rint(u);  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  int  t  =(int)Math.rint(u,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =(int)Math.rint(u,  v);  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.rint(u,  v);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  int  t  =(int)Math.floor(u,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =(int)Math.floor(u,  v);  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =(int)Math.floor(u,  v);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  1  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(u/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  k  :  -(u/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
45	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/  :  -(v/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(v/2)/*B3*/  :  -(v/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
48	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(u/2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
54	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
55	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&2)/  2;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
56	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/  2  *  B3;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
57	[BUG]  [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  ==  1)?  u  :  -(v&1)/*B3;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
58	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(u/2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
61	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  Integer  t  =  new  Integer(u);  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
63	[BUG]  [BUGGY]  int  t&=1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t&=1;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t&=1;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  Integer  t  =  new  Integer(u,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  Integer  t  =  new  Integer(u,  v);  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	Integer  t  =  new  Integer(u,  v);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  int  t&=2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t&=2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t&=2;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    -1    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
67	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(v&1)/*B3*/  :  -(v/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -1  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/    :    -(v/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2.0;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2.0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  <  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  <  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  (v  >=  1)?  u  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  (v  >=  1)?  u  :  -(v&2)/*B3*/;	  int    t    =    (v    ==    1)?    u    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  a1  :  -(v&2)/  2;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
76	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  31  :  -(v&2)/*B3*/;	  int    t    =    ((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  v  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  int  t&=0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t&=0;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t&=0;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  t&=2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  t&=2;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	t&=2;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	      int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
81	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
84	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  0  :  -(v&2)/  2  *  B3;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3*/;  [BUGGY]      do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  t  =  ((  u&1)  ==  1)?  -1  :  -(v&2)/  2  *  B3*/;	  int    t    =    ((    u&1)    ==    1)?    v    :    -(u/2)/    2    *    B3*/;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
88	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {    while  ((t&1)==0)  {  //  while  t  is  even..  t/=2;  //  cast  out  twos  }  if  (t>0)  {  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	603	603	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
