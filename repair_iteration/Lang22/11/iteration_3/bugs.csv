bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  null?  this  :  gcd.longValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd.longValue();  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd.longValue();	  return    null?    this    :    gcd.intValue();    	non-compiled	[CE]  not  a  statement	17	None	replace
2	[BUG]  [BUGGY]  return  null?  this  :  gcd.doubleValue();  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd.doubleValue();  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd.doubleValue();	  return    null?    this    :    gcd.intValue();    	non-compiled	[CE]  not  a  statement	17	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.equals(numerator));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  gcd.equals(numerator));	  throw    new    IllegalStateException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	14	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.equals(denominator));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.equals(denominator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  gcd.equals(denominator));	  throw    new    IllegalStateException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	14	None	replace
5	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
6	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
7	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
8	[BUG]  [BUGGY]  float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
9	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	40	None	replace
10	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	30	None	replace
11	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
13	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
14	[BUG]  [BUGGY]  return  gcd?  numerator  :  this;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd?  numerator  :  this;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  numerator  :  this;	  return    gcd?    this    :    numerator;    	non-compiled	[CE]  not  a  statement	8	None	replace
15	[BUG]  [BUGGY]  return  gcd.intValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd.intValue();  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd.intValue();	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
16	[BUG]  [BUGGY]  return  gcd  >  1?  gcd  :  gcd;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  >  1?  gcd  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  >  1?  gcd  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
17	[BUG]  [BUGGY]  return  gcd.intValue;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd.intValue;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd.intValue;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
18	[BUG]  [BUGGY]  return  gcd  <  1?  this  :  gcd;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  <  1?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  <  1?  this  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
19	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
20	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
21	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd,  denominator);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
22	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
23	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  denominator);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
24	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  toProperString.equals(gcd): " ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  toProperString.equals(gcd): " ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " "  +  toProperString.equals(gcd): " ");	  throw    new    IllegalArgumentException(   "   ".equals(gcd):   "   ");    	non-compiled	[CE]  not  a  statement	29	None	replace
25	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator): " ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator): " ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator): " ");	  throw    new    IllegalArgumentException(   "   ".equals(gcd):   "   ");    	non-compiled	[CE]  not  a  statement	29	None	replace
26	[BUG]  [BUGGY]  return  numerator  /  gcd;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator  /  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator  /  gcd;	  return    numerator    /    denominator;    	non-compiled	[CE]  not  a  statement	44	None	replace
27	[BUG]  [BUGGY]  return  numerator  *  denominator;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator  *  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator  *  denominator;	  return    numerator    /    denominator;    	non-compiled	[CE]  not  a  statement	44	None	replace
28	[BUG]  [BUGGY]  return  denominator  /  numerator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  denominator  /  numerator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  denominator  /  numerator;	  return    numerator    /    denominator;    	non-compiled	[CE]  not  a  statement	44	None	replace
29	[BUG]  [BUGGY]  return  gcd  /  denominator;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  /  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  /  denominator;	  return    numerator    /    denominator;    	non-compiled	[CE]  not  a  statement	44	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value. ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value. ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value. ");	  throw    new    IllegalArgumentException(   "Failed    to    reduce    a    numeric    value   ");    	non-compiled	[CE]  not  a  statement	42	None	replace
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ",  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ",  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ",  gcd);	  throw    new    IllegalArgumentException(   "Failed    to    reduce    a    numeric    value   ");    	non-compiled	[CE]  not  a  statement	42	None	replace
32	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	46	None	replace
33	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	46	None	replace
34	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	46	None	replace
35	[BUG]  [BUGGY]  return  gcd?  numerator  :  gcd  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd?  numerator  :  gcd  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  numerator  :  gcd  +  1;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
36	[BUG]  [BUGGY]  return  gcd?  this  :  numerator  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd?  this  :  numerator  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  this  :  numerator  +  1;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
37	[BUG]  [BUGGY]  return  null?  this  :  gcd,  denominator  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd,  denominator  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  denominator  +  1;	  return    null?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
38	[BUG]  [BUGGY]  return  null?  this  :  gcd  +  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd  +  2;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd  +  2;	  return    null?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
39	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
40	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
41	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	39	None	replace
42	[BUG]  [BUGGY]  return  equals(Gcd)?  this  :  gcd;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(Gcd)?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(Gcd)?  this  :  gcd;	  return    equals(Gcd)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	37	None	replace
43	[BUG]  [BUGGY]  return  equals(gcd)?  this  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(gcd)?  this  :  ZERO;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(gcd)?  this  :  ZERO;	  return    equals(Gcd)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	37	None	replace
44	[BUG]  [BUGGY]  return  equals(Gcd)?  this  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(Gcd)?  this  :  0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(Gcd)?  this  :  0;	  return    equals(Gcd)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	37	None	replace
45	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
46	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
47	[BUG]  [BUGGY]  return  null?  this  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  0;	  return    null?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	34	None	replace
48	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator));	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	11	None	replace
49	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	11	None	replace
50	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
51	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
52	[BUG]  [BUGGY]  return  deser?  this  :  numerator;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  deser?  this  :  numerator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  deser?  this  :  numerator;	  return    numerator?    this    :    deser;    	non-compiled	[CE]  not  a  statement	36	None	replace
53	[BUG]  [BUGGY]  return  null?  this  :  gcd,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  denominator);	  return    null?    this    :    gcd,    denominator;    	non-compiled	[CE]  not  a  statement	38	None	replace
54	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(gcd));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(gcd));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( " ".equals(gcd));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	15	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(numerator));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( " ".equals(numerator));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	15	None	replace
56	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	15	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(numerator));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " "  +  gcd.equals(numerator));	  throw    new    IllegalArgumentException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	4	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " "  +  gcd.equals(denominator));	  throw    new    IllegalArgumentException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	4	None	replace
59	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	33	None	replace
60	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	33	None	replace
61	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	33	None	replace
62	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	33	None	replace
63	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	31	None	replace
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd,  denominator);	  throw    new    IllegalArgumentException(   "Fraction    is    less    than    1:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	6	None	replace
65	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);	  throw    new    IllegalArgumentException(   "Fraction    is    less    than    1:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	6	None	replace
66	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  denominator);	  throw    new    IllegalStateException(   "Failed    to    reduce    denominator:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	47	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  numerator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd,  numerator);	  throw    new    IllegalStateException(   "Failed    to    reduce    denominator:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	47	None	replace
68	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);	  throw    new    IllegalStateException(   "Failed    to    reduce    denominator:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	47	None	replace
69	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
70	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
71	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
72	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	28	None	replace
73	[BUG]  [BUGGY]  return  gcd?  this  :  denominator;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd?  this  :  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  this  :  denominator;	  return    denominator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	49	None	replace
74	[BUG]  [BUGGY]  return  equals(ZERO)?  this  :  gcd;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(ZERO)?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(ZERO)?  this  :  gcd;	  return    denominator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	49	None	replace
75	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
76	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
77	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
78	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd,  denominator);	  throw    new    IllegalArgumentException(   "Failed    to    reduce    a    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
79	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);	  throw    new    IllegalArgumentException(   "Failed    to    reduce    a    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  denominator);	  throw    new    IllegalArgumentException(   "Failed    to    reduce    a    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
81	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(gcd));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(gcd));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(gcd));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
82	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(numerator));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(numerator));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
83	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( " ",  gcd);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  gcd);	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
85	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  gcd: ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  gcd: ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  gcd: ");	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
86	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
87	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ",  gcd);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ",  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ",  gcd);	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
88	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString.equals(numerator));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString.equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  toProperString.equals(numerator));	  throw    new    IllegalStateException(   "   ".equals(numerator));    	non-compiled	[CE]  not  a  statement	16	None	replace
89	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
90	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  2);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  2);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
91	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  gcd);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	24	None	replace
92	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	24	None	replace
93	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	24	None	replace
94	[BUG]  [BUGGY]  return  equals(gcd)?  this  :  gcd;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(gcd)?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(gcd)?  this  :  gcd;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
95	[BUG]  [BUGGY]  return  equals(0)?  this  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(0)?  this  :  0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(0)?  this  :  0;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
96	[BUG]  [BUGGY]  return  numerator?  this  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  0;	  return    numerator?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	35	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  denominator: ");	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
98	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	24	None	replace
99	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	28	None	replace
100	[BUG]  [BUGGY]  return  null?  this  :  gcd  /  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd  /  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd  /  1;	  return    null?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	18	None	replace
101	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
102	[BUG]  [BUGGY]  return  this?  numerator  :  gcd  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  this?  numerator  :  gcd  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  this?  numerator  :  gcd  +  1;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
103	[BUG]  [BUGGY]  return  numerator?  this  :  gcd  +  2;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  gcd  +  2;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  gcd  +  2;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
104	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	30	None	replace
105	[BUG]  [BUGGY]  return  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  0;	  return    ZERO;    	non-compiled	[CE]  not  a  statement	43	None	replace
106	[BUG]  [BUGGY]  return  0.0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  0.0;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  0.0;	  return    ZERO;    	non-compiled	[CE]  not  a  statement	43	None	replace
107	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
108	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
109	[BUG]  [BUGGY]  return  null?  this  :  gcd,  0,  denominator;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd,  0,  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  0,  denominator;	  return    null?    this    :    gcd,    denominator;    	non-compiled	[CE]  not  a  statement	38	None	replace
110	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(gcd));	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	11	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value:  ' "  +  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value:  ' "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value:  ' "  +  gcd);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
112	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + "  of   "  +  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + "  of   "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + "  of   "  +  denominator);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
113	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  3);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  3);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  3);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator    +    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
114	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd): " ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd): " ");  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " ").equals(gcd): " ");	  throw    new    IllegalArgumentException(   "   ".equals(gcd):   "   ");    	non-compiled	[CE]  not  a  statement	29	None	replace
115	[BUG]  [BUGGY]  return  null?  this  :  ONE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  ONE;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  ONE;	  return    null?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	34	None	replace
116	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
117	[BUG]  [BUGGY]  return  gcd  ==  0?  this  :  gcd;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  ==  0?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  ==  0?  this  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
118	[BUG]  [BUGGY]  return  gcd  ==  1?  this  :  gcd;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  ==  1?  this  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  ==  1?  this  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
119	[BUG]  [BUGGY]  return  gcd  >  0?  gcd  :  gcd;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  >  0?  gcd  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  >  0?  gcd  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
120	[BUG]  [BUGGY]  return  gcd  ==  0?  numer  :  gcd;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  ==  0?  numer  :  gcd;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  ==  0?  numer  :  gcd;	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
121	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  gcd);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( " "  +  gcd);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	5	None	replace
122	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.toString());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  gcd.toString());  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  gcd.toString());	  throw    new    IllegalStateException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	14	None	replace
123	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	46	None	replace
124	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    gcd);    	non-compiled	[CE]  not  a  statement	10	None	replace
125	[BUG]  [BUGGY]  return  equals(gcd?  this  :  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(gcd?  this  :  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(gcd?  this  :  denominator);	  return    denominator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	49	None	replace
126	[BUG]  [BUGGY]  return  equals(THIS)?  this  :  THIS;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(THIS)?  this  :  THIS;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(THIS)?  this  :  THIS;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
127	[BUG]  [BUGGY]  return  equals(GENERAL)?  this  :  GENERAL;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(GENERAL)?  this  :  GENERAL;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(GENERAL)?  this  :  GENERAL;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
128	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(gcd));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(gcd));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(gcd));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	15	None	replace
129	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " ").equals(gcd));	  throw    new    IllegalArgumentException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	4	None	replace
130	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
131	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
132	[BUG]  [BUGGY]  return  numerator?  this  :  denominator  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  denominator  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  denominator  +  1;	  return    numerator?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	1	None	replace
133	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	41	None	replace
134	[BUG]  [BUGGY]  return  equals(Gcd)?  this  :  ONE;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(Gcd)?  this  :  ONE;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(Gcd)?  this  :  ONE;	  return    equals(Gcd)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	37	None	replace
135	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ").equals(numerator));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " ").equals(numerator));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " ").equals(numerator));	  throw    new    IllegalStateException(   "   ".equals(numerator));    	non-compiled	[CE]  not  a  statement	16	None	replace
136	[BUG]  [BUGGY]  return  gcd?  this  :  ZERO;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd?  this  :  ZERO;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  this  :  ZERO;	  return    gcd?    this    :    numerator;    	non-compiled	[CE]  not  a  statement	8	None	replace
137	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString  + "  multiplier  is  less  than  1: "  +  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString  + "  multiplier  is  less  than  1: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  toProperString  + "  multiplier  is  less  than  1: "  +  denominator);	  throw    new    IllegalStateException(   "   ".equals(numerator));    	non-compiled	[CE]  not  a  statement	16	None	replace
138	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.toString());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  gcd.toString());  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " "  +  gcd.toString());	  throw    new    IllegalArgumentException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	4	None	replace
139	[BUG]  [BUGGY]  return  equals(1  -  gcd)?  this  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(1  -  gcd)?  this  :  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(1  -  gcd)?  this  :  1;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
140	[BUG]  [BUGGY]  return  equals(numerator)?  this  :  numerator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  equals(numerator)?  this  :  numerator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(numerator)?  this  :  numerator;	  return    equals(ZERO)?    this    :    ZERO;    	non-compiled	[CE]  not  a  statement	21	None	replace
141	[BUG]  [BUGGY]  return  null?  this  :  gcd.intValue()  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd.intValue()  +  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd.intValue()  +  1;	  return    null?    this    :    gcd.intValue();    	non-compiled	[CE]  not  a  statement	17	None	replace
142	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + ",  denominator: "  +  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + ",  denominator: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd  + ",  denominator: "  +  denominator);	  throw    new    IllegalArgumentException(   "Missing    numeric    value:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	22	None	replace
144	[BUG]  [BUGGY]  return  denominator?  this  :  numerator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  denominator?  this  :  numerator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  denominator?  this  :  numerator;	  return    numerator?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	1	None	replace
145	[BUG]  [BUGGY]  return  this?  numerator  :  denominator;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  this?  numerator  :  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  this?  numerator  :  denominator;	  return    numerator?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	1	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  denominator);	  throw    new    IllegalArgumentException(   "Fraction    is    less    than    1:   "    +    gcd);    	non-compiled	[CE]  not  a  statement	6	None	replace
147	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	40	None	replace
148	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
149	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	24	None	replace
150	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	30	None	replace
151	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  -  1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  -  1));  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  -  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	30	None	replace
152	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
153	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    pos    =    greaterCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
154	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString  + ", ".equals(gcd));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  toProperString  + ", ".equals(gcd));  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " "  +  toProperString  + ", ".equals(gcd));	  throw    new    IllegalStateException(   "   ".equals(gcd));    	non-compiled	[CE]  not  a  statement	14	None	replace
155	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  ZERO: "  +  denominator);	  throw    new    IllegalStateException(   "Failed    to    reduce    ZERO:   ");    	non-compiled	[CE]  not  a  statement	48	None	replace
156	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
157	[BUG]  [BUGGY]  return  gcd  ==  denominator?  this  :  Fraction.getFraction(numerator,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  gcd  ==  denominator?  this  :  Fraction.getFraction(numerator,  denominator);  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd  ==  denominator?  this  :  Fraction.getFraction(numerator,  denominator);	  return    gcd;    	non-compiled	[CE]  not  a  statement	20	None	replace
158	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
159	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd): " ";  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(gcd): " ";  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " ").equals(gcd): " ";	  throw    new    IllegalArgumentException(   "   ".equals(gcd):   "   ");    	non-compiled	[CE]  not  a  statement	29	None	replace
160	[BUG]  [BUGGY]  return  null?  this  :  gcd,  denominator,  pos;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd,  denominator,  pos;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  denominator,  pos;	  return    null?    this    :    gcd,    denominator;    	non-compiled	[CE]  not  a  statement	38	None	replace
161	[BUG]  [BUGGY]  return  null?  this  :  gcd,  denominator,  hashCode;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  null?  this  :  gcd,  denominator,  hashCode;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  denominator,  hashCode;	  return    null?    this    :    gcd,    denominator;    	non-compiled	[CE]  not  a  statement	38	None	replace
162	[BUG]  [BUGGY]  return  numerator?  this  :  gcd  /  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  gcd  /  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  gcd  /  1;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
163	[BUG]  [BUGGY]  return  numerator?  this  :  gcd  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  gcd  -  1;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  gcd  -  1;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
164	[BUG]  [BUGGY]  return  numerator?  this  :  gcd  +  denominator;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {      [BUGGY]  return  numerator?  this  :  gcd  +  denominator;  [BUGGY]      }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  gcd  +  denominator;	  return    numerator?    this    :    gcd    +    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
