bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  numerator?  this  :  denominator;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator?  this  :  denominator;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  denominator;	  return    numerator?    this    :    numer;    	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	3	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(gcd));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(gcd));  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " ".equals(gcd));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Fraction  is  less  than  1: "  +  gcd);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
7	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
8	[BUG]  [BUGGY]  return  gcd?  this  :  numerator;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  gcd?  this  :  numerator;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd?  this  :  numerator;	  return    numerator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	8	None	replace
9	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
10	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd);	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
11	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator));	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
12	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
13	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
14	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(gcd));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalStateException( " ".equals(gcd));  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " ".equals(gcd));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
15	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(numerator));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalStateException( " ".equals(numerator));  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( " ".equals(numerator));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
17	[BUG]  [BUGGY]  return  null?  this  :  gcd.intValue();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  null?  this  :  gcd.intValue();  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd.intValue();	  return    null?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	11	None	replace
18	[BUG]  [BUGGY]  return  null?  this  :  gcd  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  null?  this  :  gcd  +  1;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd  +  1;	  return    null?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  return  numerator?  this  :  numerator;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator?  this  :  numerator;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  numerator;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  return  gcd;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  gcd;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  gcd;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  return  equals(ZERO)?  this  :  ZERO;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  equals(ZERO)?  this  :  ZERO;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(ZERO)?  this  :  ZERO;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Missing  numeric  value: "  +  gcd);	  return    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
23	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value: "  +  gcd);	  return    null;    	non-compiled	[CE]  not  a  statement	10	None	replace
24	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);	      int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
25	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  gcd);	      int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
26	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
27	[BUG]  [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greaterCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    pos    =    greaterCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
28	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(gcd): " ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(gcd): " ");  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( " ".equals(gcd): " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
30	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1));	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	3	None	replace
31	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator));	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
32	[BUG]  [BUGGY]  return  numerator?  this  :  gcd  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator?  this  :  gcd  +  1;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  gcd  +  1;	  return    numerator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
34	[BUG]  [BUGGY]  return  null?  this  :  ZERO;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  null?  this  :  ZERO;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  ZERO;	  return    null?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  return  numerator?  this  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator?  this  :  ZERO;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  ZERO;	  return    numerator?    this    :    numer;    	non-compiled	[CE]  not  a  statement	9	None	replace
36	[BUG]  [BUGGY]  return  numerator?  this  :  deser;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator?  this  :  deser;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator?  this  :  deser;	  return    numerator?    this    :    numer;    	non-compiled	[CE]  not  a  statement	9	None	replace
37	[BUG]  [BUGGY]  return  equals(Gcd)?  this  :  ZERO;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  equals(Gcd)?  this  :  ZERO;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  equals(Gcd)?  this  :  ZERO;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
38	[BUG]  [BUGGY]  return  null?  this  :  gcd,  denominator;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  null?  this  :  gcd,  denominator;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  null?  this  :  gcd,  denominator;	  return    null?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(denominator));	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	3	None	replace
40	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	3	None	replace
41	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ");  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalArgumentException( "Failed  to  reduce  a  numeric  value ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
43	[BUG]  [BUGGY]  return  ZERO;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  ZERO;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  ZERO;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
44	[BUG]  [BUGGY]  return  numerator  /  denominator;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  numerator  /  denominator;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  numerator  /  denominator;	  return    numerator;    	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
46	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	      int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
47	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  denominator: "  +  gcd);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	throw  new  IllegalStateException( "Failed  to  reduce  ZERO: ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
49	[BUG]  [BUGGY]  return  denominator?  this  :  gcd;  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {    [BUGGY]  return  denominator?  this  :  gcd;  [BUGGY]    }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	480	480	2	replace	return  denominator?  this  :  gcd;	  return    numerator?    this    :    gcd;    	non-compiled	[CE]  not  a  statement	8	None	replace
