bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
2	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
3	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B2*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
6	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
7	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  u  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	  ((    t&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  while((  t&1)  ==  1)  {  t/=1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1)  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&1)  ==  1)  {  t/=1;	  while((    u&1)    ==    1)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
10	[BUG]  [BUGGY]  while((  u&1)!=  1)  {  t/=2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  1)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)!=  1)  {  t/=2;	  while((    u&1)    ==    1)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
11	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  while(t  <  1)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  1)  {	  while(t    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
13	[BUG]  [BUGGY]  while(t  <  2  &&  u  <  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  &&  u  <  2)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  2  &&  u  <  2)  {	  while(t    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
14	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  t);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
15	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
16	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
17	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  p  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    gcd    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
18	[BUG]  [BUGGY]  while((  u&1)!=  0)  {  t/=2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)!=  0)  {  t/=2;	  while((    t&1)!=    0)    {    t/=2;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
19	[BUG]  [BUGGY]  while((  t&1)  ==  1)  {  t/=3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1)  {  t/=3;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&1)  ==  1)  {  t/=3;	  while((    t&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
20	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3;	  int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
22	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
23	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
24	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
26	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
27	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
28	[BUG]  [BUGGY]  while((  u&1)  ==  0)  {  t/=1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)  ==  0)  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)  ==  0)  {  t/=1;	  while((    t&1)    ==    0)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
29	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/);	  int    twos    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
30	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  t  =((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	  t    =((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
32	[BUG]  [BUGGY]  while((  u&1)!=  0)  {  t/=1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  0)  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)!=  0)  {  t/=1;	  while((    t&1)!=    0)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  while((  t&1)  ==  1))  {  t/=1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  1))  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&1)  ==  1))  {  t/=1;	  while((    u&1)    ==    1))    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
34	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
37	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
38	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
39	[BUG]  [BUGGY]  while(t  <  2  &&  t  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  &&  t  <  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  2  &&  t  <  0)  {	  while(t    <    2    ||    t    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
40	[BUG]  [BUGGY]  while(t  <  2  ||  t  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  >  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  2  ||  t  >  0)  {	  while(t    <    2    ||    t    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
41	[BUG]  [BUGGY]  while(t  <  1  ||  t  <  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  1  ||  t  <  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  1  ||  t  <  0)  {	  while(t    <    2    ||    t    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
42	[BUG]  [BUGGY]  while(t  <  0  ||  t  <  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  0  ||  t  <  2)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  0  ||  t  <  2)  {	  while(t    <    2    ||    t    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
43	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
44	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
45	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  numerator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
46	[BUG]  [BUGGY]  while((  u&2)  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&2)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&2)  ==  0)  {	  while((    t&2)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  while((  t&0)  ==  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&0)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&0)  ==  0)  {	  while((    t&2)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  u  :  -(t&2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(t&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
49	[BUG]  [BUGGY]  ((  t&1)!=  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)!=  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)!=  1)?  v  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(t&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
50	[BUG]  [BUGGY]  while((  u&1)!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)!=  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)!=  0)  {	  while((    u&1)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  while((  t&2)!=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)!=  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&2)!=  0)  {	  while((    t&1)!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  while(t  >=  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >=  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  >=  1)  {	  while(t    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  while(t  ==  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  ==  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  ==  1)  {	  while(t    <    =    1)    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  while(t  <  2  ||  t  >=  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  >=  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  2  ||  t  >=  0)  {	  while(t    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
56	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
57	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
58	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode);	  int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
59	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
61	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
62	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  a2  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
63	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&2)  ==  1)?  t  :  -(u/2)/*B3*/);	  ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
64	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&2)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	  ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
65	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
66	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  t);	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
67	[BUG]  [BUGGY]  while((  u&1)  ==  0)  {  t/=3;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)  ==  0)  {  t/=3;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)  ==  0)  {  t/=3;	  while((    t&1)    ==    0)    {    t/=3;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
68	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
69	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
70	[BUG]  [BUGGY]  while(t!=  1  &&  u  <  2)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t!=  1  &&  u  <  2)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t!=  1  &&  u  <  2)  {	  while(t!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
71	[BUG]  [BUGGY]  while(t!=  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t!=  31)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t!=  31)  {	  while(t!=    2)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
72	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
73	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
75	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v);	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
76	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  b  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
77	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  gcd  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
78	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
79	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;	  int    twos    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
80	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	  t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
81	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	  t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
82	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
83	[BUG]  [BUGGY]  while(t  <  =  2  ||  t  <  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  =  2  ||  t  <  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  =  2  ||  t  <  0)  {	  while(t    <    2    ||    t    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
84	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  b  :  -(t&2)/*B3*/);	  ((    t&1)    ==    1)?    t    :    -(t&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
85	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  b  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
86	[BUG]  [BUGGY]  while((  t&2)  ==  0)  {  t/=2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)  ==  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&2)  ==  0)  {  t/=2;	  while((    t&1)    ==    0)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
88	[BUG]  [BUGGY]  while(t  >  0)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  >  0)  {	  while(t    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
89	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
90	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  -  1);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  -  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
91	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator;	  int    u    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
92	[BUG]  [BUGGY]  while(t  >=  2)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  >=  2)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  >=  2)  {	  while(t    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
94	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(a1&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
95	[BUG]  [BUGGY]  while((  t&3)  ==  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&3)  ==  0)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&3)  ==  0)  {	  while((    t&2)    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
96	[BUG]  [BUGGY]  while((  t&2)!=  0)  {  t/=2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&2)!=  0)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&2)!=  0)  {  t/=2;	  while((    t&1)!=    0)    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
97	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  v  :  -(a1&2)/*B3*/,  denominator);	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  t    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
99	[BUG]  [BUGGY]  ((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  v&1)  ==  1)?  t  :  -(u/2)/*B3*/);	  ((    t&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
101	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&3)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&3)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  t  :  -(t&3)/*B3*/);	  ((    t&1)    ==    1)?    t    :    -(t&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
102	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  v  :  -(t&2)/*B3*/,  denominator);	  ((    t&1)    ==    1)?    v    :    -(t&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
103	[BUG]  [BUGGY]  t  =((  u&1)  ==  1)?  -(v  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&1)  ==  1)?  -(v  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&1)  ==  1)?  -(v  -(u/2)/*B3*/);	  t    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
104	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&1)  ==  1)?  a1  :  -(u/2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
106	[BUG]  [BUGGY]  while((  t&1)!=  1)  {  t/=2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)!=  1)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&1)!=  1)  {  t/=2;	  while((    t&1)!=    0)    {    t/=2;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
107	[BUG]  [BUGGY]  while((  u&1)  ==  1)||(v  >=  31))  {  t/=1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  u&1)  ==  1)||(v  >=  31))  {  t/=1;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  u&1)  ==  1)||(v  >=  31))  {  t/=1;	  while((    u&1)    ==    1))    {    t/=1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
108	[BUG]  [BUGGY]  t  =((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  t  =((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	t  =((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);	  t    =((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
109	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(v&  2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
110	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
111	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  0  :  -(v  -  1)/*B3*/;	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
112	[BUG]  [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
113	[BUG]  [BUGGY]  while((  t&1)  ==  31)  {  t/=2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while((  t&1)  ==  31)  {  t/=2;  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while((  t&1)  ==  31)  {  t/=2;	  while((    t&1)    ==    1)    {    t/=2;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
114	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/;	  int    u    =((    u&1)    ==    1)?    a1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
115	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  a1  :  -(u/2)/*B2*/;	  int    twos    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
116	[BUG]  [BUGGY]  ((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  u&2)  ==  1)?  b  :  -(u/2)/*B3*/);	  ((    u&2)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
117	[BUG]  [BUGGY]  while(t!=  2  &&  t!=  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t!=  2  &&  t!=  1)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t!=  2  &&  t!=  1)  {	  while(t!=    1)    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
118	[BUG]  [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
119	[BUG]  [BUGGY]  while(t  <  2  ||  t  >  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  while(t  <  2  ||  t  >  31)  {  [BUGGY]      t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	while(t  <  2  ||  t  >  31)  {	  while(t    <    2)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
120	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
121	[BUG]  [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  ((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	((  t&1)  ==  1)?  t  :  -(t&2)/*B3*/,  denominator);	  ((    u&1)    ==    1)?    t    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
122	[BUG]  [BUGGY]  int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  twos  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	  int    twos    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
123	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
124	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&  2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    do  {        [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&  2)/*B3*/,  denominator);  [BUGGY]      while  ((t&1)==0)  {  //  while  t  is  even..    t/=2;  //  cast  out  twos      }  t/=2;  //  cast  out  twos  }  if  (t>0)  {  u  =  -t;  }  else  {  v  =  t;  }  t  =  (v  -  u)/2;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	609	611	2	replace	int  u  =((  u&1)  ==  1)?  -(v&  2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
