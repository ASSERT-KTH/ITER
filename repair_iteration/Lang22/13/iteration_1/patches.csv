bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u=-u;  [CE]  while  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-u;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	u=-u;	  if(u    <    0)    {    u=-u;    }    	non-compiled	[CE]  while  expected	11	None	replace
2	[BUG]  [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [CE]  while  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  u  >  0)  {  u=-u;  }	  if(u    <    0)    {    u=-u;    }    	non-compiled	[CE]  while  expected	11	None	replace
3	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1);  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.floor(u  +  1);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  while  expected	16	None	replace
4	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.ceil(u);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  int  v=(int)Math.floor(u  +  1,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u  +  1,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.floor(u  +  1,  v);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.min(u,  v  +  1);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  int  u  =  Math.max(u,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.max(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.max(u,  v);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(u,  v  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.min(u,  v  -  1);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  int  v  =  Math.abs(u  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.abs(u  +  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
10	[BUG]  [BUGGY]  int  v  =  Math.min(u,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.min(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.min(u,  v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
11	[BUG]  [BUGGY]  int  v  =  Math.max(10.0,  u);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.max(10.0,  u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.max(10.0,  u);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
12	[BUG]  [BUGGY]  int  v  =  Math.ceil(u);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.ceil(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.ceil(u);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  u=-v;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  u=-v;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	u=-v;	  if(u    >    0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  if(u  <  0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  int  u  =(int)Math.abs(v);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.abs(v);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  int  u  =(int)Math.rint(u);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.rint(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.rint(u);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  float  u  =(float)Math.abs(u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =(float)Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  u  =(float)Math.abs(u);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0  ||  v  >  1)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
20	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  1)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
21	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  31)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
22	[BUG]  [BUGGY]  if(u  <  1)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  1)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  1)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.ceil(u,  v  +  1);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  float  v=(float)Math.ceil(u,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.ceil(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  v=(float)Math.ceil(u,  v);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  v  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.ceil(u,  v  -  1);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
26	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.floor(u,  v);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.floor(u  +  1);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.ceil(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.ceil(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  int  v=-u;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=-u;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=-u;	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0  ||  v  >  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0  ||  v  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  >  0  ||  v  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  int  v=(int)Math.floor(u,  v  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u,  v  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.floor(u,  v  +  1);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  int  v=(int)Math.log(u,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.log(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.log(u,  v);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  31)  {  u=-u;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  1)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  (u  <  =  0  ||  v  >  0)?  greatestCommonDivisor(u,  v):  -u;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  (u  <  =  0  ||  v  >  0)?  greatestCommonDivisor(u,  v):  -u;  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	(u  <  =  0  ||  v  >  0)?  greatestCommonDivisor(u,  v):  -u;	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
38	[BUG]  [BUGGY]  while(u  <  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  while(u  <  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	while(u  <  1)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  while(u  <  1)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  while(u  <  1)  {  if(u>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	while(u  <  1)  {  if(u>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  if(u  <  =  0  ||  u  >  0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  u  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0  ||  u  >  0)  {  u=-u;  }	  if(u    <    =    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  int  v=(int)Math.rint(u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.rint(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.rint(u);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  int  v=(int)Math.abs(u  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.abs(u  +  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.abs(u  +  1);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  int  u  =  Math.abs(v);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.abs(v);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  int  u  =  Math.max(10.0,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.max(10.0,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.max(10.0,  v);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  float  v=(float)Math.abs(u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  v=(float)Math.abs(u);	      int    v=(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(u  <  1)  {  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  1)  {  if(v>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  1)  {  if(v>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  ==  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
49	[BUG]  [BUGGY]  if(u  >=  0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >=  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  >=  0)  {  u=-v;  }	  if(u    >    0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
50	[BUG]  [BUGGY]  float  v  =  Math.abs(u);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v  =  Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  v  =  Math.abs(u);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  int  v  =  Math.abs(u  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(u  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.abs(u  -  1);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  if(u  >  0)  {  if(u>0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  if(u>0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  >  0)  {  if(u>0)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  31)  {  if(u>1)  {  u=-u;  }	  if(u    <    0    ||    v    >    1)    {    if(u>0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  if(u  <  0)  {  v=-v;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0)  {  v=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0)  {  v=-v;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
55	[BUG]  [BUGGY]  if(u>0)  {  v=-1;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u>0)  {  v=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u>0)  {  v=-1;  }	  if(u>0)    {    v=-v;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  (u  <  0  ||  v  >  0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  (u  <  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	(u  <  0  ||  v  >  0)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  if(u  >  0)  {  u=-1;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  >  0)  {  u=-1;  }	  if(u    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  >  0)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  31)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  31)  {  u=-u;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  0)  {  u=-1;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  float  u  =  Math.abs(u);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =  Math.abs(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  u  =  Math.abs(u);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
62	[BUG]  [BUGGY]  int  u  =  Math.min(v,  u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(v,  u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.min(v,  u);	      int    u    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  int  v=(int)Math.ceil(u,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.ceil(u,  0);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.ceil(u,  0);	      int    v=(int)Math.ceil(u,    v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
64	[BUG]  [BUGGY]  float  v=(float)Math.floor(u,  v);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.floor(u,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  v=(float)Math.floor(u,  v);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  float  v=(float)Math.floor(u);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  v=(float)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  v=(float)Math.floor(u);	      int    v=(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.floor(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.floor(v);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  float  u  =(float)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	float  u  =(float)Math.floor(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  if(u  ==  0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  ==  0)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  ==  0)  {  u=-u;  }	  if(u    <    =    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  if(u  <  =  0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0)  {  u=-v;  }	  if(u    <    =    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  Integer  v=(int)Math.abs(u);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  Integer  v=(int)Math.abs(u);  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	Integer  v=(int)Math.abs(u);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  int  v=(int)Math.floor(u,  v  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v=(int)Math.floor(u,  v  -  1);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v=(int)Math.floor(u,  v  -  1);	      int    v=(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  int  v  =  Math.abs(v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  v  =  Math.abs(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  v  =  Math.abs(v);	      int    v    =    Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
73	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  char  u  =(char)Math.floor(u);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	char  u  =(char)Math.floor(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
74	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0  ||  v  >  1)  {  u=-u;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0  ||  v  >  1)  {  u=-u;  }	  if(u    <    =    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =  Math.min(10.0,  v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =  Math.min(10.0,  v);	      int    u    =    Math.min(u,    v);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  if(u  <  =  0)  {  if(u>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  =  0)  {  if(u>0)  {  u=-v;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  =  0)  {  if(u>0)  {  u=-v;  }	  if(u    <    1)    {    if(u>0)    {    u=-v;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
77	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  if(u  <  0  ||  v  >  0)  {  u=-1;  }  [BUGGY]    if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	if(u  <  0  ||  v  >  0)  {  u=-1;  }	  if(u    <    0    ||    v    >    0)    {    u=-u;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  int  u  =(int)Math.rint(v);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  greatestCommonDivisor(int  u,  int  v)  {    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }        [BUGGY]  int  u  =(int)Math.rint(v);  [BUGGY]    if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative    //  B1.  [Find  power  of  2]  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	591	593	2	replace	int  u  =(int)Math.rint(v);	      int    u    =(int)Math.abs(u);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
