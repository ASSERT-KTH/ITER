bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
33	[BUG] [BUGGY] if (k==31) { [FE] AssertionFailedError [CONTEXT]    if (u>0) { u=-u; } // make u negative if (v>0) { v=-v; } // make v negative  int k=0; while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even... u/=2; v/=2; k++; // cast out twos. } [BUGGY] if (k==31) { [BUGGY] throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u&1)==1) ? v : -(u/2)/*B3*/;   do {   [CLASS] Fraction [METHOD] greatestCommonDivisor [RETURN_TYPE] int  int u int v [VARIABLES] Fraction FOUR_FIFTHS ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO f String str toProperString toString boolean long numeratorValue serialVersionUID int a1 a2 denom denom0 denom1 denom2 denominator gcd hashCode i k numer numer0 numer1 numer2 numerator pos power sign t u v whole wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	598	598	2	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    if (u>0) { u=-u; } // make u negative if (v>0) { v=-v; } // make v negative  int k=0; while ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even... u/=2; v/=2; k++; // cast out twos. } [BUGGY] [BUGGY] if (k==31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u&1)==1) ? v : -(u/2)/*B3*/;   do {   [CLASS] Fraction [METHOD] greatestCommonDivisor [RETURN_TYPE] int  int u int v [VARIABLES] Fraction FOUR_FIFTHS ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO f String str toProperString toString boolean long numeratorValue serialVersionUID int a1 a2 denom denom0 denom1 denom2 denominator gcd hashCode i k numer numer0 numer1 numer2 numerator pos power sign t u v whole wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	598	598	2	add	
