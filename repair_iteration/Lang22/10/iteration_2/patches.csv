bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  pos  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  pos  =  greatestCommonDivisor(Math.abs(denominator));	  int    pos    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	30	None	replace
2	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
3	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
4	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
5	[BUG]  [BUGGY]  if(gcd  >=  0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  >=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
6	[BUG]  [BUGGY]  if(gcd!=  0  &&  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  &&  gcd  <  denominator)  {	  if(gcd!=    0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
7	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  not  a  statement	34	None	replace
8	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	7	None	replace
9	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
11	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
12	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
13	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  &&  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
14	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	15	None	replace
15	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	26	None	replace
16	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	26	None	replace
17	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	29	None	replace
18	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	29	None	replace
19	[BUG]  [BUGGY]  if(gcd!=  numerator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  numerator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  numerator)  {	  if(gcd!=    denominator)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
20	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
21	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
22	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator!=  gcd)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator!=  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  denominator!=  gcd)  {	  if(gcd    ==    0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
23	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  &&  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
24	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  <  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0    ||    gcd    <    denominator)    {    	non-compiled	[CE]  not  a  statement	12	None	replace
25	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  gcd  =  greatestCommonDivisor(Math.abs(denominator));	  int    gcd    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	17	None	replace
26	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
27	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
28	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);	  float    gcd    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  double  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  double  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	double  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	  float    gcd    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  >  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0  ||  gcd  >  denominator)  {	  if(gcd    >=    0)    {    	non-compiled	[CE]  not  a  statement	27	None	replace
31	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
32	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
33	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
34	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  ||  gcd!=  denominator)  {	  if(gcd    ==    0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
35	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  denominator  ==  gcd)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
36	[BUG]  [BUGGY]  double  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  double  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	double  gcd  =  greatestCommonDivisor(Math.abs(numerator));	  float    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	36	None	replace
37	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
38	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
39	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	4	None	replace
40	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  >=  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  >=  0  ||  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
42	[BUG]  [BUGGY]  if(gcd!=  0  ||  denominator  ==  gcd)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  ||  denominator  ==  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  ||  denominator  ==  gcd)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
43	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
44	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	23	None	replace
45	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	23	None	replace
46	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  0.0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd!=  0.0)  {	  if(gcd    ==    0.0    ||    gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
47	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  0.0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  ==  0.0)  {	  if(gcd    ==    0.0    ||    gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
48	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
49	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
50	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
51	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  numerator  ||  gcd  ==  denominator)  {	  if(gcd    ==    numerator)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
52	[BUG]  [BUGGY]  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  numerator  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  numerator  ||  gcd!=  denominator)  {	  if(gcd    ==    numerator)    {    	non-compiled	[CE]  not  a  statement	19	None	replace
53	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
54	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
55	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  *  1),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
56	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  2),  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  2),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  2),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
58	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
59	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
60	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
61	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  &&  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
62	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
63	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	33	None	replace
64	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
65	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	  float    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	36	None	replace
66	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
67	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	23	None	replace
68	[BUG]  [BUGGY]  if(gcd  ==  0.0  &&  gcd  >=  denominator)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0.0  &&  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  &&  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
69	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	7	None	replace
70	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator));	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	4	None	replace
71	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
73	[BUG]  [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
74	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
75	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	26	None	replace
77	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >  0.0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  >  0.0)  {	  if(gcd    ==    0.0    ||    gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
78	[BUG]  [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  0.0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0.0  ||  gcd  ==  0.0)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0.0  ||  gcd  ==  0.0)  {	  if(gcd    ==    0.0    ||    gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
79	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	15	None	replace
80	[BUG]  [BUGGY]  if(gcd!=  0  &&  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd!=  0  &&  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  &&  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
81	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	6	None	replace
82	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
83	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
84	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
85	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
86	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  pos);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	14	None	replace
87	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(denominator));	  int    a1    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	15	None	replace
88	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd!=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0    ||    gcd!=    denominator)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
89	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
90	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
91	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  1);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
92	[BUG]  [BUGGY]  if(gcd  <  0  ||  gcd  >=  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
93	[BUG]  [BUGGY]  if(gcd  ==  0  ||  denominator  >=  gcd)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  0  ||  denominator  >=  gcd)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  denominator  >=  gcd)  {	  if(gcd    ==    0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	21	None	replace
94	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
95	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	22	None	replace
96	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >=  denominator)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >=  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
97	[BUG]  [BUGGY]  if(gcd  <  0.0  ||  gcd  >  denominator)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  <  0.0  ||  gcd  >  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  <  0.0  ||  gcd  >  denominator)  {	  if(gcd    ==    0.0    ||    gcd    >=    denominator)    {    	non-compiled	[CE]  not  a  statement	28	None	replace
98	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	30	None	replace
99	[BUG]  [BUGGY]  if(gcd  ==  a1  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  if(gcd  ==  a1  ||  gcd  ==  denominator)  {  [BUGGY]      return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  a1  ||  gcd  ==  denominator)  {	  if(gcd!=    0    ||    gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
100	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	17	None	replace
101	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
102	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    gcd    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
103	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	6	None	replace
104	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  /  1),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
105	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  -  1),  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator    +    1),    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
106	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);      [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    a1    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	13	None	replace
