bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
2	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
3	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
4	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator));	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
5	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
6	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
7	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
8	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  gcd  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
9	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
10	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
11	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd!=  denominator)  {	  if(gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
12	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd  <  denominator)  {	  if(gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
13	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
14	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
15	[BUG]  [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  a1  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  a1  =  greatestCommonDivisor(Math.abs(numerator));	      int    a1    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	4	None	replace
16	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(denominator));	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	10	None	replace
18	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  gcd!=  denominator)  {	  if(gcd!=    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
19	[BUG]  [BUGGY]  if(gcd  ==  numerator)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  numerator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  numerator)  {	  if(gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  gcd  ==  denominator)  {	  if(gcd    ==    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  >=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
24	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	10	None	replace
25	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
26	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
27	[BUG]  [BUGGY]  if(gcd  >=  0)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  >=  0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  >=  0)  {	  if(gcd!=    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
28	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  >=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd  >=  denominator)  {	  if(gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	2	None	replace
30	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(denominator));	      int    pos    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	5	None	replace
31	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  ==  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  ||  gcd  ==  denominator)  {	  if(gcd!=    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  0  ||  gcd  <  denominator)  {	  if(gcd!=    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
33	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator);	      int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	1	None	replace
34	[BUG]  [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0  ||  gcd  <  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0  ||  gcd  <  denominator)  {	  if(gcd    ==    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
35	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  not  a  statement	9	None	replace
36	[BUG]  [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  float  gcd  =  greatestCommonDivisor(Math.abs(numerator));  [BUGGY]    if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	float  gcd  =  greatestCommonDivisor(Math.abs(numerator));	      int    gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	10	None	replace
37	[BUG]  [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  0.0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd  ==  0.0  ||  gcd  ==  0.0)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd  ==  0.0  ||  gcd  ==  0.0)  {	  if(gcd    ==    0.0)    {    	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  if(gcd!=  denominator)  {  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);    [BUGGY]  if(gcd!=  denominator)  {  [BUGGY]    return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	479	479	2	replace	if(gcd!=  denominator)  {	  if(gcd    ==    denominator)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
