bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(u>0)  {  v=-v;  }  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(u>0)  {  v=-v;  }	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
2	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
3	[BUG]  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(u>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  }	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(u>0  ||  v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(u>0  ||  v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	  	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
6	[BUG]  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    if(u  <  =  0  ||  v  >  0)  {  throw  new  ArithmeticException( " ");  }		non-compiled	[CE]  illegal  start  of  type	28	None	add
7	[BUG]  [BUGGY]    int  v  =  Math.abs(u);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    int  v  =  Math.abs(u);  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    int  v  =  Math.abs(u);		non-compiled	[CE]  illegal  start  of  type	28	None	add
8	[BUG]  [BUGGY]    int  v=(int)Math.abs(u);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    int  v=(int)Math.abs(u);  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    int  v=(int)Math.abs(u);		non-compiled	[CE]  illegal  start  of  type	28	None	add
9	[BUG]  [BUGGY]    int  v=(int)Math.rint(u);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    int  v=(int)Math.rint(u);  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    int  v=(int)Math.rint(u);		non-compiled	[CE]  illegal  start  of  type	28	None	add
10	[BUG]  [BUGGY]    int  v  =  Math.abs(u  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    int  v  =  Math.abs(u  +  1);  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    int  v  =  Math.abs(u  +  1);		non-compiled	[CE]  illegal  start  of  type	28	None	add
11	[BUG]  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  return  0;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  return  0;  }  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    if(u  <  =  0  ||  v  >  0)  {  return  0;  }		non-compiled	[CE]  illegal  start  of  type	28	None	add
12	[BUG]  [BUGGY]    int  v=(int)Math.floor(u);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    int  v=(int)Math.floor(u);  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    int  v=(int)Math.floor(u);		non-compiled	[CE]  illegal  start  of  type	28	None	add
13	[BUG]  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  u=-u;  }  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    if(u  <  =  0  ||  v  >  0)  {  u=-u;  }		non-compiled	[CE]  illegal  start  of  type	28	None	add
14	[BUG]  [BUGGY]  if(v>0)  {  u=-v;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(v>0)  {  u=-v;  }  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(v>0)  {  u=-v;  }	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
15	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  v=-v;  }  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(u  <  =  0  ||  v  >  0)  {  v=-v;  }	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]  if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	if(v>0)  {  u=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;	if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]  int  k=0;  	non-compiled	[CE]  illegal  start  of  type	27	None	replace
17	[BUG]  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  return  1;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  [BUGGY]    if(u  <  =  0  ||  v  >  0)  {  return  1;  }  [BUGGY]  if  (v>0)  {  v=-v;  }  //  make  v  negative  //  B1.  [Find  power  of  2]    int  k=0;  int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	592	594	2	replace	    if(u  <  =  0  ||  v  >  0)  {  return  1;  }		non-compiled	[CE]  illegal  start  of  type	28	None	add
