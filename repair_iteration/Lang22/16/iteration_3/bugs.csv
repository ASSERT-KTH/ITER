bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  4  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  3  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
6	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
7	[BUG]  [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
8	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  power);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
11	[BUG]  [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  31)  {  u/=2;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
12	[BUG]  [BUGGY]  if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(t  ==  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
13	[BUG]  [BUGGY]  if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(t  <  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
14	[BUG]  [BUGGY]  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	u/=2;  v/=2;  k++;	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
15	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  numerator;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
16	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  hashCode;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
17	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator  +  1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
18	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
19	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
20	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
21	[BUG]  [BUGGY]  while(u  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >  31)  {  u/=2;  v/=2;  k++;	  while(u    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
22	[BUG]  [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  >=  31)  {  u/=2;  v/=2;  k++;	  while(t    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
23	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  4  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  4  +  1;	  int    u    =(int)Math.rint((    u&1)%    4;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
24	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
25	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
26	[BUG]  [BUGGY]  int  u  =  Math.min(k,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(k,  v);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
27	[BUG]  [BUGGY]  int  u  =  Math.max(v,  k);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.max(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.max(v,  k);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
28	[BUG]  [BUGGY]  while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
29	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  2)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  2)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  2)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
30	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
31	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  u);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  u);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
32	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
33	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)//2  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)//2  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)//2  +  1);	  int    u    =(int)Math.rint((    u&1)/2    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
34	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  2.0  +  1);	  int    u    =(int)Math.rint((    u&1)/2    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
35	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  >  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
36	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    <    31    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
37	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  <  31)  {  while(v  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  }	  while(v    <    31    &&    u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
38	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	float  u  =(float)Math.floor(u);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  double  u  =(double)Math.floor(v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  double  u  =(double)Math.floor(v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	double  u  =(double)Math.floor(v);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
40	[BUG]  [BUGGY]  float  u  =(float)Math.log(v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.log(v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	float  u  =(float)Math.log(v);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
41	[BUG]  [BUGGY]  while(u  <  31  &&  k  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  k  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  k  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    k    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
42	[BUG]  [BUGGY]  while(u  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    k    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
43	[BUG]  [BUGGY]  while(v  <  31  &&  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    k    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
44	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  0)  {  u/=2;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
45	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
46	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.ceil(u);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
48	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.ceil(u,  v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.ceil(v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	float  u  =(float)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.ceil(v  +  1);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
52	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  0)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
54	[BUG]  [BUGGY]  while(u  <  31  &&  v  >  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  >  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
55	[BUG]  [BUGGY]  while(u  <  31  ||  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
56	[BUG]  [BUGGY]  while(u  <  32  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
57	[BUG]  [BUGGY]  while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  ||  u  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
58	[BUG]  [BUGGY]  while(u  <  32  ||  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  ||  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  ||  v  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
59	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
62	[BUG]  [BUGGY]  while(t  <  0)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  0)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  0)  {  u/=1;  v/=2;  k++;	  while(t    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  while(t  <  k)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  k)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  k)  {  u/=1;  v/=2;  k++;	  while(t    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
64	[BUG]  [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  =  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  =  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  c  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
66	[BUG]  [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
67	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(v,  k  +  1);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
68	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
69	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
70	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
71	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -1  -(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
72	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
73	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
74	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(10.0,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(10.0,  v);	  int    u    =    Math.min(10.0,    k);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
75	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  k  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(10.0,  k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(10.0,  k  -  1);	  int    u    =    Math.min(10.0,    k);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
76	[BUG]  [BUGGY]  int  u  =  Math.min(10.0,  k  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(10.0,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(10.0,  k  +  1);	  int    u    =    Math.min(10.0,    k);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
77	[BUG]  [BUGGY]  int  u  =  Math.min(1,  k  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(1,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(1,  k  +  1);	  int    u    =    Math.min(1,    k);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
78	[BUG]  [BUGGY]  int  u  =  Math.min(1,  k  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(1,  k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(1,  k  -  1);	  int    u    =    Math.min(1,    k);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
79	[BUG]  [BUGGY]  int  u  =  Math.min(1,  k,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(1,  k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(1,  k,  v);	  int    u    =    Math.min(1,    k);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
80	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k,  u);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k,  u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(v,  k,  u);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
81	[BUG]  [BUGGY]  int  u  =  Math.min(u,  v,  k);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(u,  v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(u,  v,  k);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
82	[BUG]  [BUGGY]  int  u  =  Math.min(u,  k,  v  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(u,  k,  v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(u,  k,  v  +  1);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
83	[BUG]  [BUGGY]  while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
84	[BUG]  [BUGGY]  while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  ==  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
85	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  4);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
86	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2.0);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  2.0);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
87	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  3);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
88	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k  +  1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)!=  1)?  -1  :  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
90	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
91	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  k);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
92	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
93	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
94	[BUG]  [BUGGY]  while(v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31)  {  u/=1;  v/=2;  k++;	  while(v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
95	[BUG]  [BUGGY]  while(v  <  31  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  >  0  &&  k  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
96	[BUG]  [BUGGY]  while(v  <  31  &&  k  >=  0  &&  v  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  k  >=  0  &&  v  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  k  >=  0  &&  v  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
97	[BUG]  [BUGGY]  while(v  <  31  ||  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  ||  v  >=  0  &&  k  <  31)  {	  while(v    <    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
98	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  k  +  1);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
99	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(v  +  2);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(u  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
101	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
102	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  32)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
103	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
104	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  numerator);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
105	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  desnom);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
106	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(v/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
107	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
108	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
109	[BUG]  [BUGGY]  int  u  =  Math.min(0,  k  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(0,  k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(0,  k  -  1);	  int    u    =    Math.min(0,    k);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
110	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  power);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
111	[BUG]  [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  0)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  0)  {  u/=2;  v/=2;	  while(v    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
112	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  u)  {  u/=2;  v/=2;  k++;	  while(k    <    u)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
113	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B4*/,  denominator);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
114	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
115	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  denominator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
116	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  numerator);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
117	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  hashCode);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
118	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
119	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
120	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  denom);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
121	[BUG]  [BUGGY]  while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  *  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
122	[BUG]  [BUGGY]  while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  *  u  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
123	[BUG]  [BUGGY]  while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  *  k)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
124	[BUG]  [BUGGY]  while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  *  v  >  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    *    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
125	[BUG]  [BUGGY]  while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  ||  u  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
126	[BUG]  [BUGGY]  while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  ||  v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
127	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  >  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
128	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  +  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  +  power);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
129	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  -  power);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  -  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  -  power);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
130	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  <  <  power);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  <  <  power);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  3  <  <  power);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
131	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
132	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
133	[BUG]  [BUGGY]  while(t  <  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  1)  {  u/=2;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
134	[BUG]  [BUGGY]  while(v  <  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  1)  {  u/=2;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
135	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  u)  {  u/=2;  v/=2;	  while(k    <    u)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
136	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
137	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
138	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  u)  {  u/=2;  v/=2;  }	  while(k    <    u)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
139	[BUG]  [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  0)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  <  0)  {  u/=2;  v/=2;  }	  while(k    <    u)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
140	[BUG]  [BUGGY]  while(u  <  32  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  &&  v  >  0  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
141	[BUG]  [BUGGY]  while(u  <  32  &&  v  >=  2  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  &&  v  >=  2  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  &&  v  >=  2  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
142	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  3;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
143	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  =  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
144	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  =  2)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
145	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
146	[BUG]  [BUGGY]  while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
147	[BUG]  [BUGGY]  while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  u  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
148	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  =  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
149	[BUG]  [BUGGY]  int  u  =(int)Math.log(u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.log(u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.log(u);	  int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
150	[BUG]  [BUGGY]  while(t  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  32)  {  u/=2;  v/=2;  k++;	  while(t    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
151	[BUG]  [BUGGY]  while(t  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  0)  {  u/=2;  v/=2;  k++;	  while(t    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
152	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(v  /  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
153	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(u  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(u  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
154	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  -  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(v  -  2);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
155	[BUG]  [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
156	[BUG]  [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
157	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
158	[BUG]  [BUGGY]  while(u  <  32  ||  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  32  ||  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  32  ||  v  >=  0  &&  k  <  31)  {	  while(u    <    31    ||    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
159	[BUG]  [BUGGY]  while(u  <  31  &&  v!=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v!=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v!=  0  &&  k  <  31)  {	  while(u    <    31    ||    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
160	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
161	[BUG]  [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  <  =  0)  {  u/=2;  v/=2;  k++;	  while(k    <    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
162	[BUG]  [BUGGY]  while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
163	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
164	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(v  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	float  u  =(float)Math.floor(v  -  1);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
165	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  float  u  =(float)Math.floor(v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	float  u  =(float)Math.floor(v  +  1);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
166	[BUG]  [BUGGY]  int  u  =  Math.min(1,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(1,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(1,  v);	  int    u    =    Math.min(1,    k);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
167	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3  +  1;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
168	[BUG]  [BUGGY]  while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  31  &&  v  >=  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
169	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31  &&  v  >  0  &&  k  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
170	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1;	  int    u    =(int)Math.rint((    u&1)%    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
171	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  1;	  int    u    =(int)Math.rint((    u&1)%    2    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
172	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  3  +  1;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  3  +  1;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
173	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  k)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
174	[BUG]  [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  k)  {  u/=1;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
175	[BUG]  [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  =  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  =  k)  {  u/=2;  v/=2;  }	  while(v    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
176	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
177	[BUG]  [BUGGY]  while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  u  <  31)  {  u/=2;  v/=2;  k++;	  while(v    <    31    &&    u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
178	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;	  while(v    <    31    &&    u    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
179	[BUG]  [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31)  {  u/=1;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
180	[BUG]  [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
181	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/2  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/2  *  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/2  *  1);	  int    u    =(int)Math.rint((    u&1)/2    +    1);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
182	[BUG]  [BUGGY]  while(v  >  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >  31)  {  u/=2;  v/=2;  k++;	  while(v    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
183	[BUG]  [BUGGY]  while(v  >=  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  31)  {  u/=1;  v/=2;  k++;	  while(v    >=    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
184	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/;	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
185	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
186	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
187	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&2)/  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&2)/  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&2)/  2);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
188	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&0)/  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&0)/  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&0)/  1);	  int    u    =(int)Math.rint((    u&1)/    1);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
189	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  k)  {  u/=2;  v/=2;	  while(v    <    k)    {    u/=2;    v/=2;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
190	[BUG]  [BUGGY]  while(u  >  k)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  k)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >  k)  {  u/=2;  v/=2;  }	  while(u    <    k)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
191	[BUG]  [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31)  {  u/=2;  v/=2;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  >=  31)  {  u/=2;  v/=2;  }	  while(k    <    31)    {    u/=2;    v/=2;    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
192	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v  +  1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
193	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  31);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
194	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
195	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(v  +  3);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
196	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(v  *  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(v  *  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
197	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
198	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
199	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
200	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/,  2);	  int    v    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
201	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  1);	  int    u    =(int)Math.rint((    u&1)%    3);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
202	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
203	[BUG]  [BUGGY]  int  u  =  Math.min(hashCode,  k);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(hashCode,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(hashCode,  k);	  int    u    =    Math.min(k,    u);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
204	[BUG]  [BUGGY]  int  u  =  Math.min(k,  u,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(k,  u,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(k,  u,  v);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
205	[BUG]  [BUGGY]  int  u  =  Math.min(0,  k,  v);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(0,  k,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(0,  k,  v);	  int    u    =    Math.min(u,    k,    v);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
206	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
207	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  v  +  1);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
208	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
209	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
210	[BUG]  [BUGGY]  while(u  <  31  &&  k  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  k  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  k  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    k    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
211	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
212	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  <  32)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
213	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  31);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
214	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  v  +  1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
215	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
216	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
217	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  2  -  1);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
218	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  <  31)  {  while(v  >=  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
219	[BUG]  [BUGGY]  if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  >=  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
220	[BUG]  [BUGGY]  if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  >  31)  {  while(v  <  31)  {  u/=2;  v/=2;  k++;  }	  if(u    <    31)    {    while(v    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
221	[BUG]  [BUGGY]  while(u  >  31  &&  v  <  31  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31  &&  v  <  31  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >  31  &&  v  <  31  &&  k  <  31)  {	  while(u    <    31    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
222	[BUG]  [BUGGY]  while(v  ==  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  ==  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  ==  31)  {  u/=2;  v/=2;  k++;	  while(k    ==    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
223	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v,  k);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(v,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.ceil(v,  k);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
224	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  31);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
225	[BUG]  [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  u)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  u)  {  u/=2;  v/=2;  k++;  }	  while(k    <    u)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
226	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  *  2  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
227	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
228	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
229	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  <  =  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
230	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  a1);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
231	[BUG]  [BUGGY]  while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  >=  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
232	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
233	[BUG]  [BUGGY]  while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  >=  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    &&    v    >=    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
234	[BUG]  [BUGGY]  while(k  <  1)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  1)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  <  1)  {  u/=1;  v/=2;  k++;	  while(k    <    1)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
235	[BUG]  [BUGGY]  int  u  =  Math.min(v,  k  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =  Math.min(v,  k  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =  Math.min(v,  k  -  1);	  int    u    =    Math.min(v,    k);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
236	[BUG]  [BUGGY]  while(u  >=  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
237	[BUG]  [BUGGY]  while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
238	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
239	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B5*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B4*/;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
240	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B1*/;	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B2*/;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
241	[BUG]  [BUGGY]  while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >=  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
242	[BUG]  [BUGGY]  while(v  <  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
243	[BUG]  [BUGGY]  while(u  >  31  &&  v  >=  1  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  >  31  &&  v  >=  1  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  >  31  &&  v  >=  1  &&  k  <  31)  {	  while(u    <    31    &&    v    >=    1    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
244	[BUG]  [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  k)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  k)  {  u/=1;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
245	[BUG]  [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  k)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  k)  {  u/=2;  v/=2;  k++;	  while(v    <    k)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
246	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
247	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
248	[BUG]  [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  >=  0)  {  u/=2;  v/=2;  k++;	  while(k    <    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
249	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  8);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  8);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
250	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  4);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  4);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
251	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  negative);	  int    v    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
252	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  a1);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
253	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  1);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
254	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B4*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
255	[BUG]  [BUGGY]  while(v  <  31  &&  u  <  31)  {  u/=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  &&  u  <  31)  {  u/=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  &&  u  <  31)  {  u/=1;  v/=2;  k++;	  while(u    <    31    &&    v    <    31)    {    u/=1;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
256	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.floor(u);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	char  u  =(char)Math.floor(u);	  int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
257	[BUG]  [BUGGY]  int  u  =(int)Math.floor(hashCode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.floor(hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.floor(hashCode);	  int    u    =(int)Math.floor(u);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
258	[BUG]  [BUGGY]  while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  >=  31  &&  v  >=  0  &&  u  <  31)  {	  while(u    >=    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
259	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  *  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)/  2  *  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)/  2  *  denominator);	  int    u    =(int)Math.rint((    u&1)/    2);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
260	[BUG]  [BUGGY]  while(t  <  31)  {  u=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(t  <  31)  {  u=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  <  31)  {  u=1;  v/=2;  k++;	  while(t    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
261	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
262	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(v&1)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  b  :  -(v&1)/*B3*/;	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
263	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    b    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
264	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  16);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  16);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  16);	  int    u    =(int)Math.rint((    u&1)%    2    <    <    power);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
265	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator,  v);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
266	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  a1);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
267	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
268	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.ceil(v  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.ceil(v  -  1);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
269	[BUG]  [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	char  u  =(char)Math.rint((  u&1)%  3;	  int    u    =(int)Math.rint((    u&1)%    3;    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
270	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
271	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
272	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(a1&2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
273	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  denominator);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
274	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  deser);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  deser);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  deser);	  int    v    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    denom);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
275	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)*  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)*  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)*  2);	  int    u    =(int)Math.rint((    u&1)+    2);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
276	[BUG]  [BUGGY]  int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  v  =((  u&1)  ==  1)?  1  -(u/2)/*B3*/);	  int    v    =((    u&1)    ==    1)?    -1    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
277	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  2);	  int    k    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
278	[BUG]  [BUGGY]  while(v  <  31  ||  u  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  u  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  ||  u  >=  0  &&  k  <  31)  {	  while(u    <    31    ||    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
279	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
280	[BUG]  [BUGGY]  while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31  ||  k  >  0)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
281	[BUG]  [BUGGY]  while(u  <  31  ||  v  >  1)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31  ||  v  >  1)  {  u/=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  ||  v  >  1)  {  u/=2;  v/=2;  k++;	  while(u    <    31    ||    v    >    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
282	[BUG]  [BUGGY]  while(v  <  31)  {  u=1;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u=1;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31)  {  u=1;  v/=2;  k++;	  while(v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
283	[BUG]  [BUGGY]  while(v  <  31)  {  u=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  31)  {  u=2;  v/=2;  k++;  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  31)  {  u=2;  v/=2;  k++;	  while(v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
284	[BUG]  [BUGGY]  if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  <  31  ||  v  <  31)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    ||    v    <    31)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
285	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
286	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
287	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  <  31)  {  while(v  <  32)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    &&    v    <    32)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
288	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&1)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
289	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  1  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
290	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
291	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    0    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
292	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  /(u/2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    v    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
293	[BUG]  [BUGGY]  while(u  <  31)  {  u=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(u  <  31)  {  u=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31)  {  u=2;  v/=2;  k++;  }	  while(u    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
294	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  k);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  k);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/,  k);	  int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    k);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
295	[BUG]  [BUGGY]  if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	if(u  <  31)  {  while(v  <  =  0)  {  u/=2;  v/=2;  k++;  }	  while(u    <    31    &&    v    <    =    0)    {    u/=2;    v/=2;    k++;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
296	[BUG]  [BUGGY]  while(v  <  32  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  <  32  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  <  32  &&  v  >=  0  &&  k  <  31)  {	  while(u    <    32    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
297	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  2  <  <  power  +  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  2  <  <  power  +  1);	  int    u    =(int)Math.rint((    u&1)%    2    +    1);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
298	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/,  denominator);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
299	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  v&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	  int    k    =((    u&1)    ==    1)?    -1    :    -(v&2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
300	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	  int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
301	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  32);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  32);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  32);	  int    k    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/,    hashCode);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
302	[BUG]  [BUGGY]  while(v  >=  31  &&  u  >  31  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(v  >=  31  &&  u  >  31  &&  k  <  31)  {  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(v  >=  31  &&  u  >  31  &&  k  <  31)  {	  while(u    >    31    &&    v    >=    0    &&    k    <    31)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
303	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.floor(v  -  1);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	char  u  =(char)Math.floor(v  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
304	[BUG]  [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  v&1)  ==  1)?  0  :  -(v&1)/*B3*/;	  int    k    =((    u&1)    ==    1)?    0    :    -(v&1)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
305	[BUG]  [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  char  u  =(char)Math.rint((  u&1)%  3);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	char  u  =(char)Math.rint((  u&1)%  3);	  int    u    =(int)Math.rint((    u&1)%    3);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
306	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  hashCode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  hashCode);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  hashCode);	  int    k    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/,    denominator);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
307	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u&1)%  24);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  u  =(int)Math.rint((  u&1)%  24);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  u  =(int)Math.rint((  u&1)%  24);	  int    u    =(int)Math.rint((    u&1)%    4);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
308	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  v);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  v);  [BUGGY]      while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	int  k  =((  u&1)  ==  1)?  -(v&1)/*B3*/,  v);	  int    k    =((    u&1)    ==    1)?    -(u/2)/*B3*/,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
309	[BUG]  [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;      [BUGGY]  while(k  <  31)  {  u/=1;  v/=2;  k++;  }  [BUGGY]      u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  <  31)  {  u/=1;  v/=2;  k++;  }	  while(k    <    31)    {    u/=2;    v/=2;    k++;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
