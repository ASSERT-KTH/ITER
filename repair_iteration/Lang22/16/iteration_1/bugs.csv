bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
2	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
3	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;		non-compiled	[CE]  illegal  start  of  type	32	None	add
4	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
5	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/;		non-compiled	[CE]  illegal  start  of  type	32	None	add
6	[BUG]  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
7	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  k)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
8	[BUG]  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  <  31)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
9	[BUG]  [BUGGY]  while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  >  0)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  while(u  <  31  &&  v  >=  0  &&  k  <  31)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  31  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  31  &&  v  >=  0  &&  k  <  31)  {	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(u  <  k)  {  u/=2;  v/=2;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(u  <  k)  {  u/=2;  v/=2;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
12	[BUG]  [BUGGY]    int  u  =(int)Math.floor(v);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =(int)Math.floor(v);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =(int)Math.floor(v);		non-compiled	[CE]  illegal  start  of  type	32	None	add
13	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u&1)%  2);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =(int)Math.rint((  u&1)%  2);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =(int)Math.rint((  u&1)%  2);		non-compiled	[CE]  illegal  start  of  type	32	None	add
14	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u&1)%  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =(int)Math.rint((  u&1)%  2;  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =(int)Math.rint((  u&1)%  2;		non-compiled	[CE]  illegal  start  of  type	32	None	add
15	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u&1)+  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =(int)Math.rint((  u&1)+  1);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =(int)Math.rint((  u&1)+  1);		non-compiled	[CE]  illegal  start  of  type	32	None	add
16	[BUG]  [BUGGY]    int  u  =  Math.min(u,  k);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =  Math.min(u,  k);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =  Math.min(u,  k);		non-compiled	[CE]  illegal  start  of  type	32	None	add
17	[BUG]  [BUGGY]    int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
18	[BUG]  [BUGGY]    int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  v  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
19	[BUG]  [BUGGY]    int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  v  =((  u&1)  ==  1)?  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
20	[BUG]  [BUGGY]    int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]    int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...    u/=2;  v/=2;  k++;  //  cast  out  twos.    }  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	    int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/);		non-compiled	[CE]  illegal  start  of  type	32	None	add
21	[BUG]  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(k  <  31)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(k  <  31)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
22	[BUG]  [BUGGY]  while(t  ==  31)  {  u/=2;  v/=2;  k++;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative  int  k=0;  [BUGGY]  while(t  ==  31)  {  u/=2;  v/=2;  k++;  [BUGGY]  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;    [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	595	597	2	replace	while(t  ==  31)  {  u/=2;  v/=2;  k++;	while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
