bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  numerator  ||  denominator  ==  0)  {	  if(numerator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
2	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator!=  0)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(numerator  ==  0  ||  denominator!=  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  denominator!=  0)  {	  if(numerator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
3	[BUG]  [BUGGY]  if(denominator  ==  0  ||  numerator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(denominator  ==  0  ||  numerator  ==  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  ==  0  ||  numerator  ==  0)  {	  if(numerator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
4	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  '.class'  expected	6	None	replace
5	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  +  1);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(numerator  +  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  +  1);	      int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  '.class'  expected	8	None	replace
6	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(denominator  -  1);	      int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  ')'  expected	8	None	replace
7	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  ')'  expected	7	None	replace
8	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  ')'  expected	7	None	replace
9	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(numerator  -  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  -  1);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  ')'  expected	1	None	replace
10	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  *  denominator);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  ')'  expected	1	None	replace
11	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos);	      int    numerator    =    greaterCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  ')'  expected	3	None	replace
12	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator);	      int    numerator    =    greaterCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  ')'  expected	3	None	replace
13	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1);	      int    numerator    =    greaterCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  ')'  expected	2	None	replace
14	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator);	      int    numerator    =    greaterCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  ')'  expected	2	None	replace
15	[BUG]  [BUGGY]  int  numerator  =  getNumber();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  getNumber();  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getNumber();	      int    numerator    =    getNumerator();    	non-compiled	[CE]  ')'  expected	9	None	replace
16	[BUG]  [BUGGY]  int  numerator  =  getDenominator();  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  getDenominator();  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getDenominator();	      int    numerator    =    getNumerator();    	non-compiled	[CE]  ')'  expected	9	None	replace
17	[BUG]  [BUGGY]  int  numerator  =  getMean();  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  getMean();  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getMean();	      int    numerator    =    getNumerator();    	non-compiled	[CE]  ')'  expected	9	None	replace
18	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  -  1);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  ')'  expected	4	None	replace
19	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [CE]  '.class'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  +  1);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
20	[BUG]  [BUGGY]  int  numerator  =  Math.max(numerator,  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.max(numerator,  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.max(numerator,  denominator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
21	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  numerator)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(numerator  ==  0  ||  denominator  ==  numerator)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  denominator  ==  numerator)  {	  if(denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	10	None	replace
22	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  -  1);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  -  1);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  -  1);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  '.class'  expected	6	None	replace
23	[BUG]  [BUGGY]  if(denominator  ==  0  ||  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(denominator  ==  0  ||  denominator  ==  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  ==  0  ||  denominator  ==  0)  {	  if(denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	10	None	replace
24	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  '.class'  expected	7	None	replace
25	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator);  [CE]  '.class'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  0,  denominator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
26	[BUG]  [BUGGY]  if(numerator  ==  0  &&  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(numerator  ==  0  &&  denominator  ==  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  &&  denominator  ==  0)  {	  if(numerator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
27	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  /  denominator);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  '.class'  expected	1	None	replace
28	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	      int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator);    	non-compiled	[CE]  '.class'  expected	6	None	replace
29	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  denominator);  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.abs(numerator  -  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  -  denominator);	      int    numerator    =    Math.abs(numerator);    	non-compiled	[CE]  '.class'  expected	1	None	replace
30	[BUG]  [BUGGY]  if(numerator  <  0  ||  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  if(numerator  <  0  ||  denominator  ==  0)  {  [BUGGY]    return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  <  0  ||  denominator  ==  0)  {	  if(numerator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	5	None	replace
31	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  denominator);  [CE]  '.class'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  denominator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  *  denominator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
32	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  numerator);  [CE]  '.class'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  Fraction  reduce()  {    [BUGGY]  int  numerator  =  Math.min(denominator,  numerator);  [BUGGY]    if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(denominator,  numerator);	      int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	4	None	replace
