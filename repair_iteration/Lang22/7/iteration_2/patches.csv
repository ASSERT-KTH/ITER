bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  denominator,  pos);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	14	None	replace
2	[BUG]  [BUGGY]  int  numerator  =  getMean()  -  1;  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  getMean()  -  1;  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getMean()  -  1;	  int    numerator    =    getMean();    	non-compiled	[CE]  '.class'  expected	17	None	replace
3	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
4	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
5	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  ZERO);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  ZERO);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  ZERO);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
6	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	11	None	replace
7	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  0);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  0);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  0);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	11	None	replace
8	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  1);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator),  denominator,  1);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	11	None	replace
9	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  1);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  *  1);	  int    numerator    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  '.class'  expected	19	None	replace
10	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  1);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  '.class'  expected	13	None	replace
11	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  1  -  denominator);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  '.class'  expected	13	None	replace
12	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  ZERO);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  ZERO);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  *  ZERO);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  '.class'  expected	10	None	replace
13	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  +  1);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  *  denominator  +  1);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  '.class'  expected	10	None	replace
14	[BUG]  [BUGGY]  if(numerator!=  0  ||  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator!=  0  ||  denominator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator!=  0  ||  denominator  ==  0)  {	  if(numerator    <    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	30	None	replace
15	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  -  1);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  0,  denominator  -  1);	  int    numerator    =    Math.min(numerator,    0,    denominator);    	non-compiled	[CE]  '.class'  expected	25	None	replace
16	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  +  1);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  0,  denominator  +  1);	  int    numerator    =    Math.min(numerator,    0,    denominator);    	non-compiled	[CE]  '.class'  expected	25	None	replace
17	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  *  denominator);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  0,  denominator  *  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  0,  denominator  *  denominator);	  int    numerator    =    Math.min(numerator,    0,    denominator);    	non-compiled	[CE]  '.class'  expected	25	None	replace
18	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  /  1);	  int    numerator    =    Math.abs(denominator    -    1);    	non-compiled	[CE]  '.class'  expected	6	None	replace
19	[BUG]  [BUGGY]  int  numerator  =  Math.max(numerator,  denominator  -  1);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.max(numerator,  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.max(numerator,  denominator  -  1);	  int    numerator    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	20	None	replace
20	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  numerator);  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  numerator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  numerator);	  int    numerator    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	20	None	replace
21	[BUG]  [BUGGY]  int  numerator  =  Math.max(numerator,  denominator  *  denominator);  [CE]  '.class'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.max(numerator,  denominator  *  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.max(numerator,  denominator  *  denominator);	  int    numerator    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  '.class'  expected	20	None	replace
22	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	4	None	replace
23	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	4	None	replace
24	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  hashCode);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	4	None	replace
25	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  *  1);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  *  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  *  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	22	None	replace
26	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
27	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  toProperString);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
28	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
29	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);	  int    numerator    =    Math.abs(numerator    /    denominator);    	non-compiled	[CE]  '.class'  expected	27	None	replace
30	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  +  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  /  denominator  +  1);	  int    numerator    =    Math.abs(numerator    /    denominator);    	non-compiled	[CE]  '.class'  expected	27	None	replace
31	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  '.class'  expected	28	None	replace
32	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  '.class'  expected	28	None	replace
33	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  '.class'  expected	28	None	replace
34	[BUG]  [BUGGY]  int  numerator  =  getNumber()  -  1;  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  getNumber()  -  1;  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getNumber()  -  1;	  int    numerator    =    getNumber();    	non-compiled	[CE]  '.class'  expected	15	None	replace
35	[BUG]  [BUGGY]  if(numerator  ==  numerator  &&  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  numerator  &&  denominator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  numerator  &&  denominator  ==  0)  {	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	1	None	replace
36	[BUG]  [BUGGY]  if(numerator  ==  denominator  ||  numerator  ==  0)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  denominator  ||  numerator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  denominator  ||  numerator  ==  0)  {	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	1	None	replace
37	[BUG]  [BUGGY]  if(numerator  ==  numerator  ||  denominator!=  0)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  numerator  ||  denominator!=  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  numerator  ||  denominator!=  0)  {	  if(numerator    ==    numerator    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	1	None	replace
38	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	8	None	replace
39	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  '.class'  expected	7	None	replace
40	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  '.class'  expected	7	None	replace
41	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  ZERO);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  ZERO);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  *  ZERO);	  int    numerator    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  '.class'  expected	31	None	replace
42	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  /  denominator);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  /  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  /  denominator);	  int    numerator    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  '.class'  expected	31	None	replace
43	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  denominator);  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  -  denominator);	  int    numerator    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  '.class'  expected	31	None	replace
44	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  1);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  *  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  '.class'  expected	9	None	replace
45	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  denominator);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(denominator,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(denominator,  denominator);	  int    numerator    =    Math.min(denominator,    numerator);    	non-compiled	[CE]  '.class'  expected	32	None	replace
46	[BUG]  [BUGGY]  if(numerator  ==  0  ||  numerator  ==  0)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  ||  numerator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  numerator  ==  0)  {	  if(denominator    ==    0    ||    numerator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
47	[BUG]  [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  numerator)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  numerator  ||  denominator  ==  numerator)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  numerator  ||  denominator  ==  numerator)  {	  if(numerator    ==    0    ||    denominator    ==    numerator)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
48	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator!=  numerator)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  ||  denominator!=  numerator)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  denominator!=  numerator)  {	  if(numerator    ==    0    ||    denominator    ==    numerator)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
49	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  -  1,  denominator);	  int    numerator    =    Math.abs(numerator    -    denominator);    	non-compiled	[CE]  '.class'  expected	29	None	replace
50	[BUG]  [BUGGY]  if(denominator  ==  0  &&  numerator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(denominator  ==  0  &&  numerator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  ==  0  &&  numerator  ==  0)  {	  if(numerator    ==    0    &&    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	26	None	replace
51	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  /  1);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  /  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  /  1);	  int    numerator    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  '.class'  expected	19	None	replace
52	[BUG]  [BUGGY]  int  numerator  =  getNull();  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  getNull();  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getNull();	  int    numerator    =    getMean();    	non-compiled	[CE]  '.class'  expected	17	None	replace
53	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  deserator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  deserator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  deserator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  '.class'  expected	4	None	replace
54	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1,  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  -  1,  denominator);	  int    numerator    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  '.class'  expected	31	None	replace
55	[BUG]  [BUGGY]  if(denominator  <  0  ||  numerator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(denominator  <  0  ||  numerator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  <  0  ||  numerator  ==  0)  {	  if(numerator    <    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	30	None	replace
56	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  ZERO);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  ZERO);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  ZERO);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
57	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  +  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
58	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  denominator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator  -  1,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator  -  1,  denominator);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  '.class'  expected	9	None	replace
59	[BUG]  [BUGGY]  if(numerator  ==  0  &&  denominator  ==  numerator)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  &&  denominator  ==  numerator)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  &&  denominator  ==  numerator)  {	  if(numerator    ==    0    ||    denominator    ==    numerator)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
60	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0.0)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  0.0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  denominator  ==  0.0)  {	  if(numerator    ==    0    ||    denominator    ==    numerator)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
61	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  2);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  2);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)+  2);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  '.class'  expected	13	None	replace
62	[BUG]  [BUGGY]  if(numerator  ==  0  &&  denominator!=  0)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  &&  denominator!=  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  &&  denominator!=  0)  {	  if(numerator    ==    0    ||    denominator!=    0)    {    	non-compiled	[CE]  '.class'  expected	2	None	replace
63	[BUG]  [BUGGY]  if(denominator  ==  0  ||  numerator!=  0)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(denominator  ==  0  ||  numerator!=  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  ==  0  ||  numerator!=  0)  {	  if(numerator    ==    0    ||    denominator!=    0)    {    	non-compiled	[CE]  '.class'  expected	2	None	replace
64	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	22	None	replace
65	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	22	None	replace
66	[BUG]  [BUGGY]  if(denominator  ==  0  &&  denominator  ==  0)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(denominator  ==  0  &&  denominator  ==  0)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(denominator  ==  0  &&  denominator  ==  0)  {	  if(denominator    ==    0    ||    denominator    ==    0)    {    	non-compiled	[CE]  '.class'  expected	23	None	replace
67	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  1);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  1);	  int    numerator    =    Math.min(numerator,    0,    denominator);    	non-compiled	[CE]  '.class'  expected	25	None	replace
68	[BUG]  [BUGGY]  int  numerator  =  getNumber()  +  1;  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  getNumber()  +  1;  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  getNumber()  +  1;	  int    numerator    =    getNumber();    	non-compiled	[CE]  '.class'  expected	15	None	replace
69	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  2);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  2);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(numerator,  denominator  -  2);	  int    numerator    =    Math.min(numerator,    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	18	None	replace
70	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  +  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  +  1);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
71	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	22	None	replace
72	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	22	None	replace
73	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  0,  numerator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(denominator,  0,  numerator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(denominator,  0,  numerator);	  int    numerator    =    Math.min(numerator,    0,    denominator);    	non-compiled	[CE]  '.class'  expected	25	None	replace
74	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)*  denominator);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	14	None	replace
75	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)-  denominator);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	14	None	replace
76	[BUG]  [BUGGY]  if(numerator  ==  0  ||  denominator  ==  1)  {  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  if(numerator  ==  0  ||  denominator  ==  1)  {  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	if(numerator  ==  0  ||  denominator  ==  1)  {	  if(numerator    ==    0    ||    denominator    ==    numerator)    {    	non-compiled	[CE]  '.class'  expected	21	None	replace
77	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  numerator  -  1);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(denominator,  numerator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(denominator,  numerator  -  1);	  int    numerator    =    Math.min(numerator,    denominator    -    1);    	non-compiled	[CE]  '.class'  expected	18	None	replace
78	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  numerator  *  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.min(denominator,  numerator  *  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.min(denominator,  numerator  *  denominator);	  int    numerator    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  '.class'  expected	31	None	replace
79	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	24	None	replace
80	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
81	[BUG]  [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  *  denominator);  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  *  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greaterCommonDivisor(Math.abs(numerator)/  denominator  *  denominator);	  int    numerator    =    greaterCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  '.class'  expected	12	None	replace
82	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  -  1);  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  -  1);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  Math.abs(numerator  *  denominator  -  1);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  '.class'  expected	10	None	replace
83	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	8	None	replace
84	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  '.class'  expected	8	None	replace
85	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  2,  denominator);  [CE]  '.class'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  2,  denominator);  [BUGGY]      if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	475	475	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  2,  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1,    denominator);    	non-compiled	[CE]  '.class'  expected	28	None	replace
