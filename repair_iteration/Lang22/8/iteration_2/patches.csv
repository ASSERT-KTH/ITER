bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator)+  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator)+  1;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(numerator)+  1;	  int    pos    =    toProperString.indexOf(numerator)+    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
2	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator)/  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator)/  1;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator)/  1;	  int    pos    =    toProperString.indexOf(numerator)+    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
3	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator)+  2;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator)+  2;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator)+  2;	  int    pos    =    toProperString.indexOf(numerator)+    1;    	non-compiled	[CE]  not  a  statement	17	None	replace
4	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator,  denominator);	  int    pos    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	52	None	replace
5	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator)/  denominator;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator)/  denominator;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator)/  denominator;	  int    pos    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	52	None	replace
6	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0,  denom);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0,  denom);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  0,  denom);	  int    pos    =    toProperString.lastIndexOf('.',    denom);    	non-compiled	[CE]  not  a  statement	33	None	replace
7	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  numerator);	  int    pos    =    toProperString.lastIndexOf('.',    denom);    	non-compiled	[CE]  not  a  statement	33	None	replace
8	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  denom);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  denom);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  denom);	  int    pos    =    toProperString.lastIndexOf('.',    denom);    	non-compiled	[CE]  not  a  statement	33	None	replace
9	[BUG]  [BUGGY]  int  pos  =  getOffset()  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  getOffset()  +  1;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  getOffset()  +  1;	  int    pos    =    getPos()    +    1;    	non-compiled	[CE]  not  a  statement	26	None	replace
10	[BUG]  [BUGGY]  return  numerator  ==  numerator?  numerator  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  numerator  :  0;	  return    equals(numerator)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  return  equals(numerator)?  numerator  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numerator  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numerator  :  1;	  return    equals(numerator)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	10	None	replace
12	[BUG]  [BUGGY]  return  negate(numerator)?  numerator  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(numerator)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(numerator)?  numerator  :  0;	  return    equals(numerator)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	44	None	replace
14	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numeratorValue);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numeratorValue);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numeratorValue);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	44	None	replace
15	[BUG]  [BUGGY]  int  denom  =  Math.abs(denominator  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(denominator  -  1);	  int    denom    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
16	[BUG]  [BUGGY]  int  denom  =  Math.abs(numerator  /  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(numerator  /  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(numerator  /  1);	  int    denom    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
17	[BUG]  [BUGGY]  return  equals(0,  1)?  numerator  :  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  numerator  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  numerator  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
18	[BUG]  [BUGGY]  return  this.equals(0,  1)?  numerator  :  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(0,  1)?  numerator  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(0,  1)?  numerator  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
19	[BUG]  [BUGGY]  return  reduce(0,  1)?  this  :  1;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  reduce(0,  1)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  reduce(0,  1)?  this  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
20	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator,  denominator,  numerator);	  int    pos    =    toProperString.indexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
21	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  0);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator,  denominator,  0);	  int    pos    =    toProperString.indexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
22	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  hashCode);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator,  hashCode);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator,  denominator,  hashCode);	  int    pos    =    toProperString.indexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
23	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  /  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  /  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  /  denominator);	  int    a1    =    Math.abs(numerator    -    denominator);    	non-compiled	[CE]  not  a  statement	20	None	replace
24	[BUG]  [BUGGY]  int  denom  =  Math.abs(numerator  *  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(numerator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(numerator  *  1);	  int    denom    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	50	None	replace
25	[BUG]  [BUGGY]  int  denom  =  Math.abs(denominator  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(denominator  +  1);	  int    denom    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	50	None	replace
26	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
27	[BUG]  [BUGGY]  return  numerator  <  0?  numerator  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  <  0?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  <  0?  numerator  :  0;	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
28	[BUG]  [BUGGY]  return  numerator  <  =(0)?  numerator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  <  =(0)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  <  =(0)?  numerator  :  0;	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
29	[BUG]  [BUGGY]  return  numerator  <  =(numerator(0)?  numerator  :  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  <  =(numerator(0)?  numerator  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  <  =(numerator(0)?  numerator  :  0);	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
30	[BUG]  [BUGGY]  return  numerator  <  =(numerator(0)?  numerator  :  0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  <  =(numerator(0)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  <  =(numerator(0)?  numerator  :  0;	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
31	[BUG]  [BUGGY]  return  numerator  ==  numerator?  numerator  :  ONE;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  numerator  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  numerator  :  ONE;	  return    equals(numerator)?    numerator    :    ONE;    	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  return  negate(numerator)?  numerator  :  ONE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(numerator)?  numerator  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(numerator)?  numerator  :  ONE;	  return    equals(numerator)?    numerator    :    ONE;    	non-compiled	[CE]  not  a  statement	8	None	replace
33	[BUG]  [BUGGY]  return  equals(numerator)?  null  :  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  null  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  null  :  1;	  return    equals(numerator)?    null    :    0;    	non-compiled	[CE]  not  a  statement	56	None	replace
34	[BUG]  [BUGGY]  return  equals(numerator)?  null  :  0,  denominator;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  null  :  0,  denominator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  null  :  0,  denominator;	  return    equals(numerator)?    null    :    0;    	non-compiled	[CE]  not  a  statement	56	None	replace
35	[BUG]  [BUGGY]  return  negate(numerator)?  null  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(numerator)?  null  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(numerator)?  null  :  0;	  return    equals(numerator)?    null    :    0;    	non-compiled	[CE]  not  a  statement	56	None	replace
36	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  0,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  0,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  0,  denominator  *  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
37	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  ZERO);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  ZERO);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  ZERO);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
38	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  numerator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
39	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  0,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  0,  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
40	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  -  1,  denominator  -  1);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
41	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  /  1,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  /  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  /  1,  denominator);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
42	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  -  1,  denominator  +  1);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
43	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  -  1,  denominator,  numerator);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
44	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  /  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  /  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  /  1,  denominator);	  int    pos    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	69	None	replace
45	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  -  1,  denominator,  numerator);	  int    pos    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	69	None	replace
46	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  -  1,  denominator  +  1);	  int    pos    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	69	None	replace
47	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  -  1,  denominator  -  1);	  int    pos    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	69	None	replace
48	[BUG]  [BUGGY]  return  numerator  ==  numerator?  this  :  denominator;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  this  :  denominator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  this  :  denominator;	  return    equals(numerator)?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	40	None	replace
49	[BUG]  [BUGGY]  return  equals(numerator)?  numerator  :  denominator;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numerator  :  denominator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numerator  :  denominator;	  return    equals(numerator)?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	40	None	replace
50	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
51	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
52	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  numerator  +  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
53	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator  +  1,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator  +  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator  +  1,  denominator);	  int    pos    =    toProperString.indexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
54	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator,  denominator  +  1);	  int    pos    =    toProperString.indexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
55	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  *  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  *  1);	  int    pos    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	46	None	replace
56	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  /  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  /  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  /  1);	  int    pos    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	46	None	replace
57	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  +  1,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  +  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  +  1,  denominator);	  int    pos    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	46	None	replace
58	[BUG]  [BUGGY]  int  pos  =  Math.max(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.max(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.max(numerator,  denominator  +  1);	  int    pos    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	22	None	replace
59	[BUG]  [BUGGY]  int  pos  =  Math.max(numerator,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.max(numerator,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.max(numerator,  denominator  *  denominator);	  int    pos    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	22	None	replace
60	[BUG]  [BUGGY]  int  pos  =  Math.max(numerator,  denominator,  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.max(numerator,  denominator,  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.max(numerator,  denominator,  1);	  int    pos    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	22	None	replace
61	[BUG]  [BUGGY]  int  pos  =  getOffset()  +  denominator;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  getOffset()  +  denominator;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  getOffset()  +  denominator;	  int    pos    =    getOffset();    	non-compiled	[CE]  not  a  statement	28	None	replace
62	[BUG]  [BUGGY]  int  pos  =  getOffset()  -  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  getOffset()  -  1;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  getOffset()  -  1;	  int    pos    =    getOffset();    	non-compiled	[CE]  not  a  statement	28	None	replace
63	[BUG]  [BUGGY]  return(numerator  ==  0)?  numerator  :  ONE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  numerator  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  numerator  :  ONE;	  return(numerator    ==    0)?    this    :    ONE;    	non-compiled	[CE]  not  a  statement	9	None	replace
64	[BUG]  [BUGGY]  return(numerator  ==  0)?  this  :  numerator;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  this  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  this  :  numerator;	  return(numerator    ==    0)?    this    :    ONE;    	non-compiled	[CE]  not  a  statement	9	None	replace
65	[BUG]  [BUGGY]  return(numerator  ==  0)?  this  :  ZERO;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  this  :  ZERO;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  this  :  ZERO;	  return(numerator    ==    0)?    this    :    ONE;    	non-compiled	[CE]  not  a  statement	9	None	replace
66	[BUG]  [BUGGY]  int  a1  =  Math.abs(denominator  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(denominator  -  1);	  int    a1    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	55	None	replace
67	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  *  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
68	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator  +  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
69	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(denominator,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(denominator,  numerator);	  int    pos    =    toProperString.lastIndexOf(denominator);    	non-compiled	[CE]  not  a  statement	7	None	replace
70	[BUG]  [BUGGY]  return(numerator  ==  0)?  this  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  this  :  0;	  return(numerator    <    0)?    this    :    0;    	non-compiled	[CE]  not  a  statement	37	None	replace
71	[BUG]  [BUGGY]  return(numerator  ==  0)?  numerator  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  numerator  :  0;	  return(numerator    <    0)?    this    :    0;    	non-compiled	[CE]  not  a  statement	37	None	replace
72	[BUG]  [BUGGY]  return(numerator  <  0)?  numerator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  <  0)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  <  0)?  numerator  :  0;	  return(numerator    <    0)?    this    :    0;    	non-compiled	[CE]  not  a  statement	37	None	replace
73	[BUG]  [BUGGY]  return(numerator  <  =  0)?  this  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  <  =  0)?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  <  =  0)?  this  :  0;	  return(numerator    <    0)?    this    :    0;    	non-compiled	[CE]  not  a  statement	37	None	replace
74	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  *  denominator  +  1);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
75	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  *  denominator  -  1);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
77	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  1,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  /  1,  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	67	None	replace
79	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  -  1,  denominator  +  1);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	67	None	replace
80	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  -  1,  denominator  *  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	67	None	replace
81	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  1,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  *  1,  denominator);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	67	None	replace
82	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  numerator);	  int    pos    =    toProperString.lastIndexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
83	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(numerator,  denominator  +  1);	  int    pos    =    toProperString.lastIndexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
84	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  hashCode);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  hashCode);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(numerator,  denominator,  hashCode);	  int    pos    =    toProperString.lastIndexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	5	None	replace
85	[BUG]  [BUGGY]  return  equals(0?  numerator  :  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0?  numerator  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0?  numerator  :  0);	  return    equals(0?    this    :    0);    	non-compiled	[CE]  not  a  statement	59	None	replace
86	[BUG]  [BUGGY]  return  equals(0?  this  :  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0?  this  :  1);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0?  this  :  1);	  return    equals(0?    this    :    0);    	non-compiled	[CE]  not  a  statement	59	None	replace
87	[BUG]  [BUGGY]  int  pos  =  getPos()  *  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  getPos()  *  1;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  getPos()  *  1;	  int    pos    =    getPos()    -    1;    	non-compiled	[CE]  not  a  statement	27	None	replace
88	[BUG]  [BUGGY]  int  pos  =  Math.min(denominator,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(denominator,  denominator);	  int    pos    =    Math.min(denominator,    numerator);    	non-compiled	[CE]  not  a  statement	60	None	replace
89	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  numerator);	  int    pos    =    Math.min(denominator,    numerator);    	non-compiled	[CE]  not  a  statement	60	None	replace
90	[BUG]  [BUGGY]  return  equals(numerator)?  null  :  denominator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  null  :  denominator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  null  :  denominator;	  return    equals(numerator)?    null    :    ONE;    	non-compiled	[CE]  not  a  statement	61	None	replace
91	[BUG]  [BUGGY]  return  negate(numerator)?  null  :  ONE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(numerator)?  null  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(numerator)?  null  :  ONE;	  return    equals(numerator)?    null    :    ONE;    	non-compiled	[CE]  not  a  statement	61	None	replace
92	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  desnominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  desnominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  desnominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	43	None	replace
93	[BUG]  [BUGGY]  return  numerator.equals(numerator)?  this  :  numerator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator.equals(numerator)?  this  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator.equals(numerator)?  this  :  numerator;	  return    equals(numerator)?    this    :    numerator;    	non-compiled	[CE]  not  a  statement	12	None	replace
94	[BUG]  [BUGGY]  return  equals(numerator)?  numerator  :  this;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numerator  :  this;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numerator  :  this;	  return    equals(numerator)?    this    :    numerator;    	non-compiled	[CE]  not  a  statement	12	None	replace
95	[BUG]  [BUGGY]  return  numerator  ==  numerator?  this  :  numerator;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  this  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  this  :  numerator;	  return    equals(numerator)?    this    :    numerator;    	non-compiled	[CE]  not  a  statement	12	None	replace
96	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  *  denominator  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  *  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  *  denominator  +  1);	  int    a1    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	21	None	replace
97	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  *  denominator)/  denominator;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  *  denominator)/  denominator;  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  *  denominator)/  denominator;	  int    a1    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	21	None	replace
98	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  /  denominator  *  denominator);	  int    numerator    =    Math.abs(numerator    /    denominator);    	non-compiled	[CE]  not  a  statement	64	None	replace
99	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  /  denominator  +  1);	  int    numerator    =    Math.abs(numerator    /    denominator);    	non-compiled	[CE]  not  a  statement	64	None	replace
100	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  *  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator    +    1);    	non-compiled	[CE]  not  a  statement	51	None	replace
101	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator    +    1);    	non-compiled	[CE]  not  a  statement	51	None	replace
102	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  +  1),  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	62	None	replace
103	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  *  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	62	None	replace
104	[BUG]  [BUGGY]  int  denom  =  Math.min(numerator,  denominator  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.min(numerator,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.min(numerator,  denominator  -  1);	  int    denom    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	57	None	replace
105	[BUG]  [BUGGY]  int  denom  =  Math.min(denominator,  numerator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.min(denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.min(denominator,  numerator);	  int    denom    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	57	None	replace
106	[BUG]  [BUGGY]  return  equals(0,  1)?  numerator  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  numerator  :  0;	  return    equals(0,    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
107	[BUG]  [BUGGY]  return  this.equals(0,  1)?  numerator  :  0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(0,  1)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(0,  1)?  numerator  :  0;	  return    equals(0,    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
108	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  1);	  int    pos    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
109	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  +  1,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  +  1,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  +  1,  numerator);	  int    pos    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
110	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  *  1);	  int    a1    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	19	None	replace
111	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  /  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  /  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  /  1);	  int    a1    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	19	None	replace
112	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  +  1,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  +  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  +  1,  denominator);	  int    a1    =    Math.abs(numerator    +    1);    	non-compiled	[CE]  not  a  statement	19	None	replace
113	[BUG]  [BUGGY]  return  numerator  ==  0?  numerator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  0?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  0?  numerator  :  0;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
114	[BUG]  [BUGGY]  return  equals(0,  0)?  numerator  :  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  0)?  numerator  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  0)?  numerator  :  1;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
115	[BUG]  [BUGGY]  return  equals(0,  0,  numerator)?  numerator  :  0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  0,  numerator)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  0,  numerator)?  numerator  :  0;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
116	[BUG]  [BUGGY]  return  negate(0,  numerator)?  numerator  :  0;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(0,  numerator)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(0,  numerator)?  numerator  :  0;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
117	[BUG]  [BUGGY]  int  pos  =  Math.max(numerator,  denominator  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.max(numerator,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.max(numerator,  denominator  -  1);	  int    pos    =    Math.min(numerator,    denominator    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
118	[BUG]  [BUGGY]  int  a1  =  Math.min(numerator,  denominator  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.min(numerator,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.min(numerator,  denominator  -  1);	  int    a1    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	54	None	replace
119	[BUG]  [BUGGY]  int  a1  =  Math.min(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.min(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.min(numerator,  denominator  +  1);	  int    a1    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	54	None	replace
120	[BUG]  [BUGGY]  int  a1  =  Math.max(numerator,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.max(numerator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.max(numerator,  denominator);	  int    a1    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	54	None	replace
121	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(denominator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(denominator  +  1);	  int    pos    =    toProperString.lastIndexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
122	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator  +  1,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf(numerator  +  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf(numerator  +  1,  denominator);	  int    pos    =    toProperString.lastIndexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
123	[BUG]  [BUGGY]  return  this.equals(0,  0)?  this  :  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(0,  0)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(0,  0)?  this  :  1;	  return    equals(0,    0)?    this    :    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
124	[BUG]  [BUGGY]  return  this.equals(0,  0)?  numerator  :  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(0,  0)?  numerator  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(0,  0)?  numerator  :  1;	  return    equals(0,    0)?    this    :    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
125	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  /  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
126	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  *  1);	  int    numerator    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	1	None	replace
127	[BUG]  [BUGGY]  return  numerator  ==  numerator?  this  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  this  :  1;	  return    numerator    ==    numerator?    this    :    0;    	non-compiled	[CE]  not  a  statement	11	None	replace
128	[BUG]  [BUGGY]  return  numerator  ==  denominator?  this  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  denominator?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  denominator?  this  :  0;	  return    numerator    ==    numerator?    this    :    0;    	non-compiled	[CE]  not  a  statement	11	None	replace
129	[BUG]  [BUGGY]  return  numerator  ==  numerator?  numerator  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  numerator?  numerator  :  ZERO;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  numerator?  numerator  :  ZERO;	  return    equals(numerator)?    numerator    :    ZERO;    	non-compiled	[CE]  not  a  statement	41	None	replace
130	[BUG]  [BUGGY]  return  equals(1)?  numerator  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(1)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(1)?  numerator  :  0;	  return    equals(1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
131	[BUG]  [BUGGY]  return  equals(numerator?  this  :  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator?  this  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator?  this  :  0);	  return    equals(1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
132	[BUG]  [BUGGY]  return  equals(1?  this  :  0);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(1?  this  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(1?  this  :  0);	  return    equals(1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
133	[BUG]  [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.lastIndexOf('.',  denominator);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
134	[BUG]  [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  denom);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  denom);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.lastIndexOf('.',  denom);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
135	[BUG]  [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.lastIndexOf('.',  1);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
136	[BUG]  [BUGGY]  return  this.equals(numerator)?  this  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(numerator)?  this  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(numerator)?  this  :  ONE_FIFTH;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
137	[BUG]  [BUGGY]  return  ONE_FIFTH.equals(numerator)?  this  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  ONE_FIFTH.equals(numerator)?  this  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  ONE_FIFTH.equals(numerator)?  this  :  ONE_FIFTH;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
138	[BUG]  [BUGGY]  return  equals(numerator)?  numerator  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numerator  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numerator  :  ONE_FIFTH;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
139	[BUG]  [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(denominator  -  1);	  int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
140	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  denominator  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  denominator  +  1);	  int    pos    =    toProperString.indexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
141	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  0,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  0,  denominator);	  int    pos    =    toProperString.indexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
142	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  numerator);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  numerator);	  int    pos    =    toProperString.indexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
143	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  denominator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  denominator  +  1);	  int    pos    =    toProperString.lastIndexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	34	None	replace
144	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0,  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  0,  denominator);	  int    pos    =    toProperString.lastIndexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	34	None	replace
145	[BUG]  [BUGGY]  return  this.equals(numerator)?  this  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  this.equals(numerator)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  this.equals(numerator)?  this  :  1;	  return    equals(numerator)?    this    :    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
146	[BUG]  [BUGGY]  int  pos  =  Math.abs(denominator  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(denominator  -  1);	  int    pos    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
147	[BUG]  [BUGGY]  return(numerator  <  1)?  numerator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  <  1)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  <  1)?  numerator  :  0;	  return(numerator    <    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	39	None	replace
148	[BUG]  [BUGGY]  return(numerator  ==  1)?  this  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  1)?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  1)?  this  :  0;	  return(numerator    <    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	39	None	replace
149	[BUG]  [BUGGY]  return(numerator  <  1)?  this  :  numerator;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  <  1)?  this  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  <  1)?  this  :  numerator;	  return(numerator    <    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	39	None	replace
150	[BUG]  [BUGGY]  return  equals(0,  denominator?  this  :  0);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  denominator?  this  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  denominator?  this  :  0);	  return    equals(0,    numerator?    this    :    0);    	non-compiled	[CE]  not  a  statement	58	None	replace
151	[BUG]  [BUGGY]  return  equals(0,  numerator?  this  :  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  numerator?  this  :  1);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  numerator?  this  :  1);	  return    equals(0,    numerator?    this    :    0);    	non-compiled	[CE]  not  a  statement	58	None	replace
152	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	72	None	replace
153	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	72	None	replace
154	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)-    1,    denominator);    	non-compiled	[CE]  not  a  statement	72	None	replace
155	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  0);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  0);	  int    pos    =    toProperString.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	35	None	replace
156	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  2);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  2);	  int    pos    =    toProperString.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	35	None	replace
157	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	65	None	replace
158	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  hashCode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  hashCode);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	65	None	replace
159	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.min(numerator,  denominator  -  1);	  int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	63	None	replace
160	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.min(numerator,  denominator  +  1);	  int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	63	None	replace
161	[BUG]  [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.min(numerator,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.min(numerator,  denominator  *  denominator);	  int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	63	None	replace
162	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  *  1,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  *  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  *  1,  denominator);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
163	[BUG]  [BUGGY]  return  equals(numerator)?  numer  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numer  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numer  :  1;	  return    equals(numerator)?    this    :    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
164	[BUG]  [BUGGY]  return  equals(0,  1)?  null  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  null  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  null  :  0;	  return    equals(0,    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
165	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  *  2,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  *  2,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  *  2,  denominator);	  int    a1    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	21	None	replace
166	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  -1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  -1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  -1);	  int    pos    =    toProperString.lastIndexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	34	None	replace
167	[BUG]  [BUGGY]  return  equals(numerator)?  ONE  :  numerator;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  ONE  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  ONE  :  numerator;	  return    equals(numerator)?    numerator    :    ONE;    	non-compiled	[CE]  not  a  statement	8	None	replace
168	[BUG]  [BUGGY]  return  equals(numerator)?  denominator  :  ONE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  denominator  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  denominator  :  ONE;	  return    equals(numerator)?    numerator    :    ONE;    	non-compiled	[CE]  not  a  statement	8	None	replace
169	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  wholeNumber);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  wholeNumber);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  wholeNumber);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	43	None	replace
170	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  total);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  total);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  total);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	43	None	replace
171	[BUG]  [BUGGY]  return  equals(numerator?  this  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator?  this  :  0;	  return    equals(1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	68	None	replace
172	[BUG]  [BUGGY]  return  numerator  ==  0?  this  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator  ==  0?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator  ==  0?  this  :  0;	  return    numerator    ==    numerator?    this    :    0;    	non-compiled	[CE]  not  a  statement	11	None	replace
173	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  +  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  +  2);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  +  2);	  int    pos    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
174	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  0,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	44	None	replace
175	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  absoluteDenominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  absoluteDenominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  absoluteDenominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    denominator);    	non-compiled	[CE]  not  a  statement	45	None	replace
176	[BUG]  [BUGGY]  return  equals(numerator)?  this  :  ONE_HALF;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  this  :  ONE_HALF;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  this  :  ONE_HALF;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
177	[BUG]  [BUGGY]  return  equals(numerator)?  null  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  null  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  null  :  ONE_FIFTH;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
178	[BUG]  [BUGGY]  return  reduce(0,  0)?  this  :  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  reduce(0,  0)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  reduce(0,  0)?  this  :  1;	  return    equals(0,    0)?    this    :    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
179	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator  *  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator  *  1);	  int    pos    =    toProperString.indexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
180	[BUG]  [BUGGY]  return  equals(0,  numerator?  numerator  :  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  numerator?  numerator  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  numerator?  numerator  :  0);	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
181	[BUG]  [BUGGY]  return  equals(0,  numerator?  numerator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  numerator?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  numerator?  numerator  :  0;	  return    equals(0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
182	[BUG]  [BUGGY]  return  equals(0,  1)?  null  :  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  null  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  null  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
183	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  wholeNumber);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
184	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  total);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	25	None	replace
185	[BUG]  [BUGGY]  int  pos  =  Math.min(denominator,  numerator  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(denominator,  numerator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(denominator,  numerator  -  1);	  int    pos    =    Math.min(numerator,    denominator    -    1);    	non-compiled	[CE]  not  a  statement	24	None	replace
186	[BUG]  [BUGGY]  int  a1  =  Math.min(numerator,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.min(numerator,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.min(numerator,  denominator  *  denominator);	  int    a1    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	54	None	replace
187	[BUG]  [BUGGY]  int  denom  =  Math.min(numerator,  denominator  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.min(numerator,  denominator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.min(numerator,  denominator  +  1);	  int    denom    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	57	None	replace
188	[BUG]  [BUGGY]  return(numerator  >=  0)?  this  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  >=  0)?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  >=  0)?  this  :  0;	  return(numerator    <    0)?    this    :    0;    	non-compiled	[CE]  not  a  statement	37	None	replace
189	[BUG]  [BUGGY]  return  equals(numerator)?  null  :  ZERO;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  null  :  ZERO;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  null  :  ZERO;	  return    equals(numerator)?    null    :    ONE;    	non-compiled	[CE]  not  a  statement	61	None	replace
190	[BUG]  [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.lastIndexOf('.',  numerator);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
191	[BUG]  [BUGGY]  int  pos  =  this.toProperString.indexOf('.',  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.indexOf('.',  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.indexOf('.',  denominator);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
192	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	65	None	replace
193	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  ZERO);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	65	None	replace
194	[BUG]  [BUGGY]  return(numerator  ==  0)?  null  :  ONE;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  null  :  ONE;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  null  :  ONE;	  return(numerator    ==    0)?    this    :    ONE;    	non-compiled	[CE]  not  a  statement	9	None	replace
195	[BUG]  [BUGGY]  return  equals(denominator)?  this  :  numerator;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(denominator)?  this  :  numerator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(denominator)?  this  :  numerator;	  return    equals(numerator)?    this    :    denominator;    	non-compiled	[CE]  not  a  statement	40	None	replace
196	[BUG]  [BUGGY]  return  equals(0,  0)?  denominator  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  0)?  denominator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  0)?  denominator  :  0;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
197	[BUG]  [BUGGY]  return  negate(0,  0)?  numerator  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  negate(0,  0)?  numerator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  negate(0,  0)?  numerator  :  0;	  return    equals(0,    0)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	29	None	replace
198	[BUG]  [BUGGY]  return  equals(0,  denominator?  numerator  :  0);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  denominator?  numerator  :  0);  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  denominator?  numerator  :  0);	  return    equals(0,    numerator?    this    :    0);    	non-compiled	[CE]  not  a  statement	58	None	replace
199	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  FOUR_FIFTHS);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  FOUR_FIFTHS);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  FOUR_FIFTHS);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
200	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  total);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  *  total);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  *  total);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
201	[BUG]  [BUGGY]  return(numerator  <  =  1)?  this  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  <  =  1)?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  <  =  1)?  this  :  0;	  return(numerator    <    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	39	None	replace
202	[BUG]  [BUGGY]  return  equals(numerator)?  denominator  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  denominator  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  denominator  :  0;	  return    equals(numerator)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	10	None	replace
203	[BUG]  [BUGGY]  return  equals(numerator)?  numerator  :  0,  denominator;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  numerator  :  0,  denominator;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  numerator  :  0,  denominator;	  return    equals(numerator)?    numerator    :    0;    	non-compiled	[CE]  not  a  statement	10	None	replace
204	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  *  ZERO);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  *  ZERO);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  *  ZERO);	  int    numerator    =    Math.abs(numerator    *    denominator);    	non-compiled	[CE]  not  a  statement	3	None	replace
205	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  -  1,  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  -  1,  denominator  -  1);	  int    numerator    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	67	None	replace
206	[BUG]  [BUGGY]  return  equals(numerator)?  denominator  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  denominator  :  ZERO;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  denominator  :  ZERO;	  return    equals(numerator)?    numerator    :    ZERO;    	non-compiled	[CE]  not  a  statement	41	None	replace
207	[BUG]  [BUGGY]  int  pos  =  Math.abs(denominator  *  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(denominator  *  denominator);	  int    pos    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	52	None	replace
208	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  denominator  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  denominator  -  1);	  int    pos    =    toProperString.indexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
209	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  0);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  0);	  int    pos    =    toProperString.indexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
210	[BUG]  [BUGGY]  return  equals(0,  0)?  Fraction.getInstance()  :  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  0)?  Fraction.getInstance()  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  0)?  Fraction.getInstance()  :  1;	  return    equals(0,    0)?    this    :    1;    	non-compiled	[CE]  not  a  statement	31	None	replace
211	[BUG]  [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(numerator  -  1,  denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(numerator  -  1,  denominator,  denominator);	  int    a1    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	71	None	replace
212	[BUG]  [BUGGY]  return  equals(denominator)?  null  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(denominator)?  null  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(denominator)?  null  :  0;	  return    equals(numerator)?    null    :    0;    	non-compiled	[CE]  not  a  statement	56	None	replace
213	[BUG]  [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  denominator  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.lastIndexOf('.',  denominator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.lastIndexOf('.',  denominator  -  1);	  int    pos    =    toProperString.lastIndexOf('.',    denominator);    	non-compiled	[CE]  not  a  statement	34	None	replace
214	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf(numerator  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf(numerator  -  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf(numerator  -  1);	  int    pos    =    toProperString.indexOf(numerator    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
215	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator  /  1));	  int    pos    =    greatestCommonDivisor(Math.abs(numerator    +    1));    	non-compiled	[CE]  not  a  statement	62	None	replace
216	[BUG]  [BUGGY]  int  pos  =  Math.min(denominator,  numerator  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(denominator,  numerator  +  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(denominator,  numerator  +  1);	  int    pos    =    Math.min(numerator,    denominator    +    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
217	[BUG]  [BUGGY]  return(numerator  ==  0)?  this  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return(numerator  ==  0)?  this  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return(numerator  ==  0)?  this  :  ONE_FIFTH;	  return(numerator    ==    0)?    this    :    ONE;    	non-compiled	[CE]  not  a  statement	9	None	replace
218	[BUG]  [BUGGY]  return  equals(denominator)?  this  :  ONE_FIFTH;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(denominator)?  this  :  ONE_FIFTH;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(denominator)?  this  :  ONE_FIFTH;	  return    equals(numerator)?    this    :    ONE_FIFTH;    	non-compiled	[CE]  not  a  statement	70	None	replace
219	[BUG]  [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  0,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.lastIndexOf('.',  0,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.lastIndexOf('.',  0,  denominator);	  int    pos    =    this.toProperString.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	53	None	replace
220	[BUG]  [BUGGY]  int  denominator  =  Math.abs(denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denominator  =  Math.abs(denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denominator  =  Math.abs(denominator);	  int    numerator    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	66	None	replace
221	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
222	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
223	[BUG]  [BUGGY]  int  numerator  =  Math.min(denominator,  numerator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.min(denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.min(denominator,  numerator);	  int    numerator    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	63	None	replace
224	[BUG]  [BUGGY]  return  numerator!=  numerator?  this  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  numerator!=  numerator?  this  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  numerator!=  numerator?  this  :  0;	  return    numerator    ==    numerator?    this    :    0;    	non-compiled	[CE]  not  a  statement	11	None	replace
225	[BUG]  [BUGGY]  return  equals(0,  2)?  this  :  1;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  2)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  2)?  this  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
226	[BUG]  [BUGGY]  return  equals(0,  1)?  Fraction.getInstance()  :  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  Fraction.getInstance()  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  Fraction.getInstance()  :  1;	  return    equals(0,    1)?    this    :    1;    	non-compiled	[CE]  not  a  statement	32	None	replace
227	[BUG]  [BUGGY]  int  denom  =  Math.abs(denominator  *  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(denominator  *  denominator);	  int    denom    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	48	None	replace
228	[BUG]  [BUGGY]  int  a1  =  Math.abs(denominator  *  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.abs(denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.abs(denominator  *  denominator);	  int    a1    =    Math.abs(denominator);    	non-compiled	[CE]  not  a  statement	55	None	replace
229	[BUG]  [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator,  denominator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.abs(numerator  -  1,  denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.abs(numerator  -  1,  denominator,  denominator);	  int    pos    =    Math.abs(numerator    -    1,    denominator);    	non-compiled	[CE]  not  a  statement	69	None	replace
230	[BUG]  [BUGGY]  int  pos  =  Math.min(denominator,  numerator  *  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(denominator,  numerator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(denominator,  numerator  *  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
231	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  /  denominator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  /  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  /  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
232	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  -  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  -  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  -  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
233	[BUG]  [BUGGY]  int  pos  =  Math.min(numerator,  denominator  -  1,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.min(numerator,  denominator  -  1,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.min(numerator,  denominator  -  1,  denominator);	  int    pos    =    Math.min(numerator,    denominator    *    denominator);    	non-compiled	[CE]  not  a  statement	73	None	replace
234	[BUG]  [BUGGY]  int  a1  =  Math.min(denominator,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  a1  =  Math.min(denominator,  numerator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  a1  =  Math.min(denominator,  numerator);	  int    a1    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	54	None	replace
235	[BUG]  [BUGGY]  return  equals(numerator)?  this.numerator  :  ZERO;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(numerator)?  this.numerator  :  ZERO;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(numerator)?  this.numerator  :  ZERO;	  return    equals(numerator)?    numerator    :    ZERO;    	non-compiled	[CE]  not  a  statement	41	None	replace
236	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    hashCode);    	non-compiled	[CE]  not  a  statement	65	None	replace
237	[BUG]  [BUGGY]  return  equals(0,  1)?  Fraction.getInstance()  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(0,  1)?  Fraction.getInstance()  :  0;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(0,  1)?  Fraction.getInstance()  :  0;	  return    equals(0,    1)?    this    :    0;    	non-compiled	[CE]  not  a  statement	30	None	replace
238	[BUG]  [BUGGY]  int  denom  =  Math.min(numerator,  denominator  *  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.min(numerator,  denominator  *  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.min(numerator,  denominator  *  denominator);	  int    denom    =    Math.min(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	57	None	replace
239	[BUG]  [BUGGY]  int  pos  =  this.toProperString.indexOf(numerator,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  this.toProperString.indexOf(numerator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  this.toProperString.indexOf(numerator,  denominator);	  int    pos    =    toProperString.indexOf(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	16	None	replace
240	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	13	None	replace
241	[BUG]  [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  numerator  =  Math.abs(numerator  /  denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  numerator  =  Math.abs(numerator  /  denominator,  denominator);	  int    numerator    =    Math.abs(numerator    /    denominator);    	non-compiled	[CE]  not  a  statement	64	None	replace
242	[BUG]  [BUGGY]  int  pos  =  toProperString.indexOf('.',  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  toProperString.indexOf('.',  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  toProperString.indexOf('.',  1);	  int    pos    =    toProperString.lastIndexOf('.',    1);    	non-compiled	[CE]  not  a  statement	35	None	replace
243	[BUG]  [BUGGY]  int  pos  =  Math.max(numerator,  denominator,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  Math.max(numerator,  denominator,  denominator);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  Math.max(numerator,  denominator,  denominator);	  int    pos    =    Math.max(numerator,    denominator);    	non-compiled	[CE]  not  a  statement	22	None	replace
244	[BUG]  [BUGGY]  return  equals(denominator)?  this  :  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  return  equals(denominator)?  this  :  1;  [BUGGY]      }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	return  equals(denominator)?  this  :  1;	  return    equals(numerator)?    this    :    1;    	non-compiled	[CE]  not  a  statement	42	None	replace
245	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  sign);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  sign);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  sign);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	43	None	replace
246	[BUG]  [BUGGY]  int  denom  =  Math.abs(denominator  /  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {      [BUGGY]  int  denom  =  Math.abs(denominator  /  1);  [BUGGY]      return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	476	476	2	replace	int  denom  =  Math.abs(denominator  /  1);	  int    denom    =    Math.abs(numerator    -    1);    	non-compiled	[CE]  not  a  statement	49	None	replace
