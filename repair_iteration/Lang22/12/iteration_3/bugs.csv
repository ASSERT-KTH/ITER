bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  *  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  *  gcd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  *  gcd);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    *    gcd);    	non-compiled	[CE]  not  a  statement	4	None	replace
2	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  *  gcd  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  *  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  *  gcd  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    *    gcd);    	non-compiled	[CE]  not  a  statement	4	None	replace
3	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    *    gcd);    	non-compiled	[CE]  not  a  statement	4	None	replace
4	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	32	None	replace
5	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	32	None	replace
6	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	32	None	replace
7	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	34	None	replace
8	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	34	None	replace
9	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	34	None	replace
10	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd  *  gcd  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd  *  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  /  gcd  *  gcd  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    *    gcd    +    1);    	non-compiled	[CE]  not  a  statement	33	None	replace
11	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator,  pos);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  not  a  statement	23	None	replace
12	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numeratorValue);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    *    gcd    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
13	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numerator);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd  +  1,  numerator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    *    gcd    +    1);    	non-compiled	[CE]  not  a  statement	29	None	replace
14	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
15	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
16	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	26	None	replace
17	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
18	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	14	None	replace
19	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	16	None	replace
20	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	16	None	replace
21	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	10	None	replace
22	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	10	None	replace
23	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  desnominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	20	None	replace
24	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  not  a  statement	20	None	replace
25	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  not  a  statement	36	None	replace
26	[BUG]  [BUGGY]  return  Fraction.getFraction(numeratorValue  /  gcd,  denominator  /  gcd  +  1,  numeratorValue);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numeratorValue  /  gcd,  denominator  /  gcd  +  1,  numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numeratorValue  /  gcd,  denominator  /  gcd  +  1,  numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numeratorValue);    	non-compiled	[CE]  not  a  statement	17	None	replace
27	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  0,  numeratorValue);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  0,  numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  0,  numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numeratorValue);    	non-compiled	[CE]  not  a  statement	17	None	replace
28	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numeratorValue);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numeratorValue);    	non-compiled	[CE]  not  a  statement	17	None	replace
29	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	19	None	replace
30	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	19	None	replace
31	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numerator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  numerator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd    +    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
32	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    %    gcd);    	non-compiled	[CE]  not  a  statement	9	None	replace
33	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  %  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  %  gcd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  0,  denominator  %  gcd);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    %    gcd);    	non-compiled	[CE]  not  a  statement	9	None	replace
34	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  +  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
35	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd,  hashCode);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
36	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
37	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
38	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
39	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  hashCode);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  hashCode);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  hashCode);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    hashCode);    	non-compiled	[CE]  not  a  statement	22	None	replace
40	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  hashCode);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  hashCode);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  hashCode);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    hashCode);    	non-compiled	[CE]  not  a  statement	22	None	replace
41	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode,  numerator);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode,  numerator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    hashCode);    	non-compiled	[CE]  not  a  statement	22	None	replace
42	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    %    gcd);    	non-compiled	[CE]  not  a  statement	7	None	replace
43	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
44	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
45	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  not  a  statement	27	None	replace
46	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  not  a  statement	11	None	replace
47	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  denominator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  not  a  statement	15	None	replace
48	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numerator);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numerator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
49	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplier);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplier);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplier);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
50	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  hashCode);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  hashCode);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  hashCode);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
51	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  pos);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  pos);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  pos);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  not  a  statement	35	None	replace
52	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  *  gcd  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  *  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  *  gcd  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numeratorValue);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  numerator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  *  gcd,  numerator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    numerator);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  numerator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  0,  numerator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    numerator);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  multiplier);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  multiplier);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  multiplier);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    numerator);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
59	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
60	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode  +  1,  numerator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode  +  1,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode  +  1,  numerator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numerator);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator),  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  hashCode);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
64	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  hashCode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  hashCode);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  +  1,  hashCode);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
65	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  /  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
66	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator  +  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
68	[BUG]  [BUGGY]  float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	float  denominator  =  greatestCommonDivisor(Math.abs(gcd),  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(gcd),    denominator);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
69	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
70	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  pos  +  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  gcd,  denominator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
72	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  pos);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd)+  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd)+  1;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
74	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd)+  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd)+  1;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
75	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  2;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  2;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
76	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  hashCode);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
77	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)-  1,  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
78	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
79	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  3;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  3;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)+  3;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
80	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  /  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  /  gcd);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  /  gcd);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    %    gcd);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  absoluteNumerator);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  absoluteNumerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  absoluteNumerator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
82	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1);	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
83	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(denominator));	  gcd    =    greatestCommonDivisor(Math.abs(numerator));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
84	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
85	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
86	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
87	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  1);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    hashCode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd,  hashCode  +  1);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    hashCode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  pos  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  pos  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  pos  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    *    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
90	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  *  gcd  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  *  gcd  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  *  gcd  *  gcd  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    *    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
91	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  numerator);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    numerator);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
92	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  hashCode  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  hashCode  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  hashCode  -  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
94	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplier);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplier);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplier);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
95	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  totalVersionUID);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  totalVersionUID);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  totalVersionUID);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
96	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  2);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  2);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
97	[BUG]  [BUGGY]  float  numerator  =  greatestCommonDivisor(Math.abs(denominator));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  float  numerator  =  greatestCommonDivisor(Math.abs(denominator));  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	float  numerator  =  greatestCommonDivisor(Math.abs(denominator));	  int    numerator    =    greatestCommonDivisor(Math.abs(denominator));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  pos);	  gcd    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  0,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator),  denominator,  gcd  -  1);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
101	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator),    gcd);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
102	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(numerator)+  1  -  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  -  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  0,  denominator  %  gcd  -  1);	  return    Fraction.getFraction(numerator    /    gcd,    0,    denominator    %    gcd);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierValue);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numeratorValue);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
105	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  this.numeratorValue);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  this.numeratorValue);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  this.numeratorValue);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numeratorValue);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
106	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  numerator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  numerator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd,  numerator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    *    gcd,    numerator);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
107	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1,  denominator);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1,  denominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  *  gcd,  denominator  %  gcd  +  1,  denominator);	  return    Fraction.getFraction(numerator    *    gcd,    denominator    %    gcd);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
108	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  desnominator);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  desnominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  desnominator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
109	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplierator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplierator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd  +  1,  multiplierator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd    +    1,    denominator);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
110	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
111	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  a1  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  a1  +  1);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  *  a1  +  1);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    *    gcd    +    1);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
112	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
113	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  desnominator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  desnominator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  desnominator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    hashCode);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
114	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)*  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)-  denominator);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
116	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  denominator);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
117	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  gcd);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
118	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator  -  1);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator),    denominator    -    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
119	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierator);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierator);  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd  +  1,  multiplierator);	  return    Fraction.getFraction(numerator    /    gcd,    denominator    /    gcd    +    1,    numerator);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)/  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
121	[BUG]  [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  pos  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  gcd);	  int    pos    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    gcd);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
122	[BUG]  [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	gcd  =  greatestCommonDivisor(Math.abs(numerator)+  1,  denominator,  pos);	  gcd    =    greatestCommonDivisor(Math.abs(numerator),    denominator,    pos);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
123	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator)/  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
124	[BUG]  [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  denominator  =  greatestCommonDivisor(Math.abs(denominator)+  1);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  denominator  =  greatestCommonDivisor(Math.abs(denominator)+  1);	  int    denominator    =    greatestCommonDivisor(Math.abs(numerator)+    1);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
125	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)/  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)/  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)/  1;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
126	[BUG]  [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)-  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)-  1;  [BUGGY]      }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	return  Fraction.getFraction(numerator  /  gcd,  denominator  %  gcd)-  1;	  return    Fraction.getFraction(numerator    /    gcd,    denominator    %    gcd)+    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
127	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  numerator);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  numerator);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)/  numerator);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)/    denominator);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
128	[BUG]  [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  Fraction  reduce()  {  if  (numerator  ==  0)  {  return  equals(ZERO)  ?  this  :  ZERO;  }  int  gcd  =  greatestCommonDivisor(Math.abs(numerator),  denominator);  if  (gcd  ==  1)  {  return  this;  }      [BUGGY]  int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);  [BUGGY]      return  Fraction.getFraction(numerator  /  gcd,  denominator  /  gcd);  }  [CLASS]  Fraction  [METHOD]  reduce  [RETURN_TYPE]  Fraction  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.7071067811865475	482	482	2	replace	int  numerator  =  greatestCommonDivisor(Math.abs(numerator)+  denominator,  gcd);	  int    numerator    =    greatestCommonDivisor(Math.abs(numerator)+    denominator);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
