bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k=(v  <  <  1)?  1  :  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  1)?  1  :  1;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  1)?  1  :  1;	  int    k=1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  int  k  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  >=  1)?  v  :  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  0)?  v  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  0)?  v  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  0)?  v  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/)+  1;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
7	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)/  2;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)/  2;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  ((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	((  u&1)  ==  1)?  t  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  t);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  t);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  t);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  int  k=(u  <  <  1)?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(u  <  <  1)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(u  <  <  1)?  1  :  0;	  int    k=(v    <    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  int  k=(v  <  <  1)?  2  :  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  1)?  2  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  1)?  2  :  0;	  int    k=(v    <    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  char  k=2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  char  k=2;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	char  k=2;	  int    k=2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
18	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  int  k=(u  <  <  16)?  1  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(u  <  <  16)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(u  <  <  16)?  1  :  0;	  int    k=(v    <    <    16)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  int  k=(v  <  <  24)?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  24)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  24)?  1  :  0;	  int    k=(v    <    <    16)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  denom);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  greatestCommonDivisor);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  greatestCommonDivisor);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  greatestCommonDivisor);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  int  u  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)!=  1)?  v  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    u    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    u    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  b  :  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  int  k=(v  <  32)?  1  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  32)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  32)?  1  :  0;	  int    k=(v    <    31)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  int  k=(v  <  1)?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  1)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  1)?  1  :  0;	  int    k=(v    <    31)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denom);	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/,  negative);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  int  k=(v  <  >  31)?  1  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  >  31)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  >  31)?  1  :  0;	  int    k=(v    <    31)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator);	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
35	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)  <  <  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)  <  <  1;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/)  <  <  1;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  ((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  -1  :  -(u/2)/*B3*/;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  1)?  -(u/2)/*B3*/;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  int  k=(v  <  <  32)?  1  :  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  32)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  32)?  1  :  0;	  int    k=(v    <    <    16)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(u/2)/*B3*/,  denominator;	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  31  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B2*/;	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  int  k=(v  <  <  1)?  1  :  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  1)?  1  :  2;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  1)?  1  :  2;	  int    k=2;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u/2)/*B3*/,  negative);	      int    u    =((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -(u/2)/*B3*/,  denominator;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  -(u/2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  char  k=1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  char  k=1;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	char  k=1;	  int    k=1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  int  k=(v  <  <  1)?  1  :  -1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  1)?  1  :  -1;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  1)?  1  :  -1;	  int    k=(v    <    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  ((  v&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  ((  v&1)  ==  1)?  v  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	((  v&1)  ==  1)?  v  :  -(u/2)/*B3*/);	      ((    u&1)    ==    1)?    v    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  int  k=(v  <  <  2)?  1  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k=(v  <  <  2)?  1  :  0;  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k=(v  <  <  2)?  1  :  0;	  int    k=(v    <    <    1)?    1    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  v  :  -(u2/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    u    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  a  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    u    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  0)?  -1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  0)?  -1  :  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  0)?  -1  :  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  int  k  =((  u&1)  ==  0)?  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  k  =((  u&1)  ==  0)?  -(u/2)/*B3*/);  [BUGGY]    while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  k  =((  u&1)  ==  0)?  -(u/2)/*B3*/);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  0  :  -(v&1)/*B3*/;	      int    u    =((    u&1)    ==    1)?    0    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  1  :  -(u/2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/);	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    if  (Math.abs(u)  <=  1  ||  Math.abs(v)  <=  1)  {  return  1;  }      if  (u>0)  {  u=-u;  }  //  make  u  negative  if  (v>0)  {  v=-v;  }  //  make  v  negative      [BUGGY]  int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;  [BUGGY]    int  k=0;  while  ((u&1)==0  &&  (v&1)==0  &&  k<31)  {  //  while  u  and  v  are  both  even...  u/=2;  v/=2;  k++;  //  cast  out  twos.  }  if  (k==31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u&1)==1)  ?  v  :  -(u/2)/*B3*/;  [CLASS]  Fraction  [METHOD]  greatestCommonDivisor  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  Fraction  FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  String  str  toProperString  toString  boolean  long  numeratorValue  serialVersionUID  int  a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  	projects/Lang22/src/main/java/org/apache/commons/lang3/math/Fraction.java	0.47140452079103173	594	594	2	replace	int  u  =((  u&1)  ==  1)?  -1  :  -(v&2)/*B3*/;	      int    u    =((    u&1)    ==    1)?    -1    :    -(u/2)/*B3*/;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
