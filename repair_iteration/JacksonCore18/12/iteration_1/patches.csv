bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount;    _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
2	[BUG]  [BUGGY]  _outputTail  +=  amount;  _outputTail  +=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
3	[BUG]  [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
4	[BUG]  [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  +=  len;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  +=  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ||  amount  <  SHORT_WRITE;  _outputTail  +=  len;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
5	[BUG]  [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
6	[BUG]  [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  =  len;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ||  amount  <  SHORT_WRITE;  _outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ||  amount  <  SHORT_WRITE;  _outputTail  =  len;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
7	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  +  2;	  _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
8	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  2;	  _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  /  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  /  1;	  _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
10	[BUG]  [BUGGY]  _outputTail  =  amount  /  1;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  /  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  /  1;	  _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
12	[BUG]  [BUGGY]      _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(_outputBuffer,  _outputTail,  amount);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	        _writer.write(_outputBuffer,  _outputTail,  amount);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
14	[BUG]  [BUGGY]      _writer.write(_outputBuffer,  _outputTail,  amount);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(_outputBuffer,  _outputTail,  amount);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        _writer.write(_outputBuffer,  _outputTail,  amount);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
15	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(_outputBuffer,  0,  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	        _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
16	[BUG]  [BUGGY]      _writer.write(_outputBuffer,  0,  len);  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(_outputBuffer,  0,  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
17	[BUG]  [BUGGY]      _writer.write(_outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char[],int)  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.write(_outputBuffer,  _outputTail);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        _writer.write(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int)	9	None	add
18	[BUG]  [BUGGY]      _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      _writer.writeRawLong(text);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
20	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
22	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
23	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    ((  _outputTail  =  amount  -  1);	  	non-compiled	[CE]  ')'  expected	7	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
25	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
27	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
28	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  Len;  [CE]  cannot  find  symbol  Len  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  _outputTail  =  Len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    _outputTail  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	1	None	add
29	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  lan;  [CE]  cannot  find  symbol  lan  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  _outputTail  =  lan;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    _outputTail  =  lan;	  	non-compiled	[CE]  cannot  find  symbol  lan	1	None	add
30	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  len);  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  _outputTail  =  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    _outputTail  =  len);	  	non-compiled	[CE]  ';'  expected	1	None	add
31	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  +  1;	  _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
32	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  +  1;	  _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  -  1;	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
34	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  -  1;	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
35	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  *  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  *  2;	  _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
36	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount  *  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  *  2;	  _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  -  2;	  _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
38	[BUG]  [BUGGY]  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  -  2;	  _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
39	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  len  -  1;	  _outputTail    =    amount    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
40	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len  -  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  len  -  1;	  _outputTail    =    amount    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
41	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  len  +  1;	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
42	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  len  +  1;	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
44	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
45	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  not  a  statement	5	None	add
46	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  not  a  statement	5	None	add
47	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;	  	non-compiled	[CE]  not  a  statement	5	None	add
48	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;	  	non-compiled	[CE]  not  a  statement	5	None	add
49	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
50	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
51	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
52	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
53	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
54	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
55	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
56	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
57	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  [CE]  ')'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1);	  	non-compiled	[CE]  ')'  expected	5	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
59	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
60	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset,  len);	      	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
61	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  TextUtilities.writeRawLong(text);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text);	      	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
63	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
64	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
65	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
66	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
67	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
68	[BUG]  [BUGGY]      int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]      int  len  =  text.length();  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	        int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	9	None	add
69	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));	  	non-compiled	[CE]  not  a  statement	3	None	add
70	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputEnd  -  _outputBuffer)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputEnd  -  _outputBuffer)  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputEnd  -  _outputBuffer)	  	non-compiled	[CE]  ')'  expected	3	None	add
71	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);	  	non-compiled	[CE]  not  a  statement	3	None	add
72	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);  _outputTail  +=  amount;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);  _outputTail  +=  amount;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    ((  _outputTail  +  amount)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);  _outputTail  +=  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
73	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  int  _outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len;    int  _outputTail  =  len;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
74	[BUG]  [BUGGY]  _outputTail  =  len;  int  _outputTail  =  len;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  int  _outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    int  _outputTail  =  len;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
75	[BUG]  [BUGGY]  _outputTail  =  len;  (_outputTail  =  len;  [CE]  ')'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  (_outputTail  =  len;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    (_outputTail  =  len;	  	non-compiled	[CE]  ')'  expected	1	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
77	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
79	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
80	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]        IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
82	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
84	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
85	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
86	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
87	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;	  	non-compiled	[CE]  not  a  statement	7	None	add
88	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;	  	non-compiled	[CE]  not  a  statement	7	None	add
89	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    1;    ((  _outputTail  +  amount)  >  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;	  	non-compiled	[CE]  not  a  statement	7	None	add
90	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  [CE]  not  a  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)  >=  0);	  	non-compiled	[CE]  not  a  statement	5	None	add
91	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    1;    ((  _outputTail  =  amount  +  1)!=  0);	  	non-compiled	[CE]  not  a  statement	5	None	add
92	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	10	None	replace
93	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	      	non-compiled	[CE]  ';'  expected	10	None	replace
94	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	10	None	replace
95	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	10	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
97	[BUG]  [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
99	[BUG]  [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
101	[BUG]  [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
103	[BUG]  [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;    [BUGGY]  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
