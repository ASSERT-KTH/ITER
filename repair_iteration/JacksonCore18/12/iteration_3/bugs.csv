bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
2	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
4	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
6	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
7	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	96	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
9	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
10	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    len;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
11	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    len;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
12	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  +=  len;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  +=  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||  amount  <  SHORT_WRITE;  _outputTail  +=  len;	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    len;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
14	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
16	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(text,  0,  len  -  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
18	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  amount);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  0,  len  -  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
20	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
21	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
22	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
23	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
24	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    2;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
26	[BUG]  [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    2;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    2;    int  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
28	[BUG]  [BUGGY]  _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    2;    int  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
29	[BUG]  [BUGGY]  _outputTail  =  amount  -  2;  ((  _outputTail  =  amount  -  2);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  ((  _outputTail  =  amount  -  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    2;    ((  _outputTail  =  amount  -  2);	  	non-compiled	[CE]  ')'  expected	37	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    -    2;    _outputTail  =  amount  -  3;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
31	[BUG]  [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  3;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  2;  _outputTail  =  amount  -  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    -    2;    _outputTail  =  amount  -  3;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(_outputBuffer,  _outputHead,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	17	1	replace
33	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(_outputBuffer,  _outputHead,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	17	1	replace
34	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(int,char[],int)  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(room,  _outputBuffer,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,char[],int)	17	None	replace
35	[BUG]  [BUGGY]  _writer.write(text,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,char[],int)  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  _outputBuffer,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int)	17	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	75	1	replace
37	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	75	1	replace
38	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
39	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
40	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
41	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
42	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
44	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
45	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  int  _outputTail  +=  amount;  _outputTail  +=  amount;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  int  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    int  _outputTail  +=  amount;  _outputTail  +=  amount;	  	non-compiled	[CE]  ';'  expected	1	None	add
46	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amounts;  _outputTail  +=  amount;  [CE]  cannot  find  symbol  amounts  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amounts;  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amounts;  _outputTail  +=  amount;	  	non-compiled	[CE]  cannot  find  symbol  amounts	1	None	add
47	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amounts;  [CE]  cannot  find  symbol  amounts  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amounts;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amounts;	  	non-compiled	[CE]  cannot  find  symbol  amounts	1	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
49	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
51	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
52	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	62	None	add
53	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
55	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
56	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  offset  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	81	None	add
57	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  Len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  Len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  Len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  2;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
59	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  2;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  2;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  3;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
61	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  3;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  3;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
62	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  int  _outputTail  +=  amount  *  2;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  int  _outputTail  +=  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    int  _outputTail  +=  amount  *  2;	  	non-compiled	[CE]  ';'  expected	35	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  4;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
64	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  4;  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  _outputTail  +=  amount  *  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    _outputTail  +=  amount  *  4;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
66	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
68	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
69	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  <identifier>  expected	100	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
71	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
72	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	100	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _flushBuffer();  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_flushBuffer();	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
74	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _flushBuffer();  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_flushBuffer();	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
76	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
77	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  not  a  statement	33	None	add
78	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  not  a  statement	33	None	add
79	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  not  a  statement	33	None	add
80	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  amount  -  1]  :  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  not  a  statement	33	None	add
81	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
82	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  Amount  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  Amount	63	None	replace
83	[BUG]  [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  offset  +=  amount;  len  -=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	offset  +=  amount;  len  -=  amount;	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
85	[BUG]  [BUGGY]  offset  +=  amount;  len  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  offset  +=  amount;  len  -=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	offset  +=  amount;  len  -=  amount;	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
87	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
88	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	103	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
90	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
92	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
93	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	88	None	replace
94	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	88	None	replace
95	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	88	None	replace
96	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
97	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
98	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
99	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
100	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _outputEnd  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _outputEnd  =  len;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
101	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _outputEnd  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _outputEnd  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _outputEnd  =  len;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
102	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
103	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  _writer.write(_outputBuffer,  0,  len);  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
104	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
105	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
106	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
107	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
108	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
109	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
110	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
111	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(len  >  0)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
113	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
114	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  1;  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
115	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd));  _outputTail  +=  amount  +  1;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd));  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd));  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
116	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputHead  +=  amount  +  1;  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputHead  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputHead  +=  amount  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
117	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  2;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  _outputTail  +=  amount  +  2;	  	non-compiled	[CE]  not  a  statement	31	None	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(_outputBuffer,  0,  amount);	          _writer.write(_outputBuffer,    0,    len);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
119	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  amount);  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(_outputBuffer,  0,  amount);	          _writer.write(_outputBuffer,    0,    len);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
120	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(int,char[],int,int)  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(room,  _outputBuffer,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(room,  _outputBuffer,  0,  len);	          _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,char[],int,int)	16	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
122	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
123	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	58	1	add
124	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	58	1	add
125	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  level  +  2;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  level  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  level  +  2;	  	non-compiled	[CE]  cannot  find  symbol  level	58	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
127	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  3;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
128	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
129	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
130	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  Integer  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  Integer  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    Integer  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
131	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  level  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  level  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  level  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
132	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [CE]  <identifier>  expected  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	55	None	add
133	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    0;    	non-compiled	[CE]  not  a  statement	87	None	replace
134	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    0;    	non-compiled	[CE]  not  a  statement	87	None	replace
135	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    0;    	non-compiled	[CE]  not  a  statement	87	None	replace
136	[BUG]  [BUGGY]  _outputTail  =  Len;  [CE]  cannot  find  symbol  Len  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  Len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  Len;	  _outputTail    =    len;    _outputTail    =    Len;    	non-compiled	[CE]  cannot  find  symbol  Len	28	None	replace
137	[BUG]  [BUGGY]  _outputTail  =  LONG;  [CE]  cannot  find  symbol  LONG  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  LONG;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  LONG;	  _outputTail    =    len;    _outputTail    =    Len;    	non-compiled	[CE]  cannot  find  symbol  LONG	28	None	replace
138	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
139	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
140	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
141	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
142	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
143	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
145	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
147	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
149	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
150	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount));	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	non-compiled	[CE]  not  a  statement	69	None	replace
151	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  len));  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  len));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  len));	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	non-compiled	[CE]  not  a  statement	69	None	replace
152	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  len));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  len));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  len));	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	non-compiled	[CE]  not  a  statement	69	None	replace
153	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)+  1);	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	non-compiled	[CE]  not  a  statement	69	None	replace
154	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
155	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
156	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
157	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
159	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  2;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
160	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    2;    int  _outputTail  =  amount  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
161	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  2;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  int  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    int  _outputTail  =  amount  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    +    2;    _outputTail  =  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
163	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  3;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  _outputTail  =  amount  +  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    _outputTail  =  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
164	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  _outputTail  =  amount  +  2);  [CE]  ')'  expected  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  _outputTail  =  amount  +  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  _outputTail  =  amount  +  2);	  	non-compiled	[CE]  ')'  expected	7	None	add
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
166	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
167	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);	  	non-compiled	[CE]  'else'  without  'if'	11	None	add
168	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  this.writer.write(text,  0,  len);  [CE]  cannot  find  symbol  writer  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  this.writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);  this.writer.write(text,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  writer	11	None	add
169	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  this.writer.write(text,  0,  SHORT_WRITE);  [CE]  cannot  find  symbol  writer  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  this.writer.write(text,  0,  SHORT_WRITE);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);  this.writer.write(text,  0,  SHORT_WRITE);	  	non-compiled	[CE]  cannot  find  symbol  writer	11	None	add
170	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	45	1	replace
171	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	45	1	replace
172	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  }  else  {  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  }  else  {  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	45	1	replace
173	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  }  else  {  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  }  else  {  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  }  else  {  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	45	1	replace
174	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
175	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
176	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  null;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  null;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  incompatible  types	77	None	replace
177	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
178	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
179	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
180	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >=  amount))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >=  amount))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >=  amount))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
181	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail!=  amount))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail!=  amount))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail!=  amount))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
182	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset,  amount);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
183	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
184	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputTail);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
185	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  len);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
187	[BUG]  [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
189	[BUG]  [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  2;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  int  _outputTail  =  amount  /  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    /    1;    int  _outputTail  =  amount  /  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
191	[BUG]  [BUGGY]  _outputTail  =  amount  /  1;  int  _outputTail  =  amount  /  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  int  _outputTail  =  amount  /  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    /    1;    int  _outputTail  =  amount  /  1;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  3;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
193	[BUG]  [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  3;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  1;  _outputTail  =  amount  /  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    /    1;    _outputTail  =  amount  /  3;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
194	[BUG]  [BUGGY]  ((  _outputTail  =  amount  +  1)  >=  0);  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  =  amount  +  1)  >=  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  =  amount  +  1)  >=  0);	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
195	[BUG]  [BUGGY]  ((  _outputTail  =  amount  +  1)  >>  0);  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  =  amount  +  1)  >>  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  =  amount  +  1)  >>  0);	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
196	[BUG]  [BUGGY]  ((  _outputTail  =  amount  +  1)!=  0);  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  =  amount  +  1)!=  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  =  amount  +  1)!=  0);	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
198	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
200	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
201	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	98	None	add
202	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _output	  	non-compiled	[CE]  ';'  expected	98	None	add
203	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTa  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTa  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTa	  	non-compiled	[CE]  ';'  expected	98	None	add
204	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    >=    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
205	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  0);  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    >=    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	44	1	replace
207	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	44	1	replace
208	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
209	[BUG]  [BUGGY]  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  	82	None	replace
210	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
211	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]                  IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
212	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  len)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]                    IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  len)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  len)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
213	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;  int  _outputTail  =  len;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;  int  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    _outputTail  =  len;  int  _outputTail  =  len;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
214	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  int  _outputTail  =  len;  int  _outputTail  =  len;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  int  _outputTail  =  len;  int  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    int  _outputTail  =  len;  int  _outputTail  =  len;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
215	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  Integer  _outputTail  =  len;  int  _outputTail  =  len;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  Integer  _outputTail  =  len;  int  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    Integer  _outputTail  =  len;  int  _outputTail  =  len;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
216	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  Len;  int  _outputTail  =  len;  [CE]  cannot  find  symbol  Len  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  Len;  int  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    _outputTail  =  Len;  int  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Len	73	None	add
217	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;  int  _outputTail  =  Len;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;  int  _outputTail  =  Len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    _outputTail  =  len;  int  _outputTail  =  Len;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
219	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
221	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
222	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
223	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
224	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	102	None	add
225	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
226	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	102	1	add
227	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
228	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
229	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
230	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
231	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
232	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputEnd  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputEnd  =  len;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
233	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputEnd  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputEnd  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputEnd  =  len;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
234	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputBuffer.append( "n ");  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputBuffer.append( "n ");  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _outputBuffer.append( "n ");  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
235	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
236	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
238	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
239	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
240	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)+    1);    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  /  2;	  _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
242	[BUG]  [BUGGY]  _outputTail  =  amount  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  /  2;	  _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
244	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
246	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
247	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	51	None	add
248	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
249	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
250	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
251	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
252	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
253	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  len  -=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
254	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
255	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [CE]  ')'  expected  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
256	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
257	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  len  -=  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount;  len  -=  len;	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	replace
258	[BUG]  [BUGGY]  _outputTail  +=  amount;  len  -=  len;  [FE]  StringIndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  len  -=  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  len  -=  len;	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	80	1	replace
259	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	80	1	replace
260	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	80	1	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  _writer.write(_outputBuffer,  _outputTail,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    _writer.write(_outputBuffer,  _outputTail,  amount);	  	compilable	  [FE]  AssertionFailedError  	13	1	add
262	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  _writer.write(_outputBuffer,  _outputTail,  amount);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  _writer.write(_outputBuffer,  _outputTail,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    _writer.write(_outputBuffer,  _outputTail,  amount);	  	compilable	  [FE]  AssertionFailedError  	13	1	add
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
264	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
266	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
268	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
270	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
272	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
273	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	76	None	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
275	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
277	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
278	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
279	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
280	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  Integer  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  Integer  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    Integer  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
281	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  level  -  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  level  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  level  -  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
283	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
285	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	99	1	replace
287	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	99	1	replace
288	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||  amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
289	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(_outputBuffer,  offset,  amount);	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	86	1	replace
290	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(_outputBuffer,  offset,  amount);	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	86	1	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
292	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
294	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
296	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
297	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
298	[BUG]  [BUGGY]  ((  _outputTail  =  amount  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  =  amount  -  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  =  amount  -  1);	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
299	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
300	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
301	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(_outputBuffer,  amount);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
302	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  amount);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  /  2;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  AssertionFailedError  	36	1	replace
304	[BUG]  [BUGGY]  _outputTail  +=  amount  /  2;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  /  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  /  2;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  AssertionFailedError  	36	1	replace
305	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
306	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
307	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  =  len;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||  amount  <  SHORT_WRITE;  _outputTail  =  len;	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
308	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
309	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	43	1	add
311	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	43	1	add
312	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
313	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
314	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  level  +  1;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  level  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  level  +  1;	  	non-compiled	[CE]  cannot  find  symbol  level	43	None	add
315	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	43	None	add
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
317	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
319	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
320	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	83	None	add
321	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputBuffer  +=  amount;  }  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputBuffer  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputBuffer  +=  amount;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	83	None	add
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
323	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
324	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	85	None	add
325	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	85	None	add
326	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  len  +  2;	  _outputTail    =    len    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	42	1	replace
327	[BUG]  [BUGGY]  _outputTail  =  len  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  len  +  2;	  _outputTail    =    len    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	42	1	replace
328	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  int  cannot  be  dereferenced  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount.length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  int  cannot  be  dereferenced	67	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
330	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
331	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
332	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
334	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
336	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
337	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_flushBuffer();  offset  +=  amount;  len  -=  amount;	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	101	1	replace
338	[BUG]  [BUGGY]  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_flushBuffer();  offset  +=  amount;  len  -=  amount;	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	101	1	replace
339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    int    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
340	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    int    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
341	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  -  1;  ((  _outputTail  +  len)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    1;    	non-compiled	[CE]  not  a  statement	89	None	replace
342	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    1;    	non-compiled	[CE]  not  a  statement	89	None	replace
343	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    1;    	non-compiled	[CE]  not  a  statement	89	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  /  4;	  _outputTail    =    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
345	[BUG]  [BUGGY]  _outputTail  =  amount  /  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  /  4;	  _outputTail    =    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
346	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||  amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||  amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  room;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  room;  }  else  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
348	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  room;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  room;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  room;  }  else  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
350	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
351	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
352	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
354	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
356	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
357	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    If(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	49	None	add
358	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  len  -  2;	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
359	[BUG]  [BUGGY]  _outputTail  =  len  -  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  len  -  2;	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
360	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  amount);  [CE]  no  suitable  method  found  for  write(int,char[],int)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(room,  _outputBuffer,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(room,  _outputBuffer,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,char[],int)	14	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(_outputBuffer,  _outputHead,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
362	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  amount);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(_outputBuffer,  _outputHead,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
363	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  _outputTail,  amount);  [CE]  no  suitable  method  found  for  write(int,char[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(room,  _outputBuffer,  _outputTail,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(room,  _outputBuffer,  _outputTail,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,char[],int,int)	14	None	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
365	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
367	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
368	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  level  -  2;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  level  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  level  -  2;	  	non-compiled	[CE]  cannot  find  symbol  level	24	None	add
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  3;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
370	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  3;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  3;	  	compilable	  [FE]  AssertionFailedError  	24	1	add
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	97	1	replace
372	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	97	1	replace
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	97	1	replace
374	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	97	1	replace
375	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
377	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
379	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
380	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  level  -  1;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  level  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  level  -  1;	  	non-compiled	[CE]  cannot  find  symbol  level	19	None	add
381	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  amounts  -  1;  [CE]  cannot  find  symbol  amounts  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  _outputTail  =  amounts  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amounts  -  1;	  	non-compiled	[CE]  cannot  find  symbol  amounts	19	None	add
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
383	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
384	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	78	None	add
385	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
386	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
387	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||  amount  <  SHORT_WRITE;  _outputTail  +=  amount;	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	26	1	add
389	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	26	1	add
390	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  Len;  _outputTail  =  len;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  Len;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  Len;  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Len	26	None	add
391	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;  _outputTail  =  Len;  [CE]  cannot  find  symbol  Len  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  len;  _outputTail  =  Len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	26	None	add
392	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  LEN;  _outputTail  =  len;  [CE]  cannot  find  symbol  LEN  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  LEN;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  LEN;  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol  LEN	26	None	add
393	[BUG]  [BUGGY]  _writer.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(text,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(text,  amount);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
394	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(text,  len);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
395	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(text,  offset);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(text,  offset);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
396	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	non-compiled	[CE]  not  a  statement	71	None	replace
397	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	non-compiled	[CE]  not  a  statement	71	None	replace
398	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  +  amount)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	non-compiled	[CE]  not  a  statement	71	None	replace
399	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount)/  2);	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	non-compiled	[CE]  not  a  statement	71	None	replace
400	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  +  2;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	32	1	replace
401	[BUG]  [BUGGY]  _outputTail  +=  amount  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  +  2;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	32	1	replace
402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
403	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
405	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
406	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  level;  }  [CE]  cannot  find  symbol  level  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  level;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  level;  }	  	non-compiled	[CE]  cannot  find  symbol  level	53	None	add
407	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  null;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  null;  }	  	non-compiled	[CE]  incompatible  types	53	None	add
408	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  =	  	non-compiled	[CE]  ';'  expected	53	None	add
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	79	1	replace
410	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	79	1	replace
411	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
412	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  +=  amount;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len    +    1;    _outputTail  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
414	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  _outputTail  =  len  +  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    _outputTail  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	41	1	add
415	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd);  _outputTail  =  len  +  1;  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  _outputTail  =  len  +  1)  >=  _outputEnd);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  not  a  statement	41	None	add
416	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  ==  _outputEnd);  _outputTail  =  len  +  1;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  ==  _outputEnd);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  _outputTail  =  len  +  1)  ==  _outputEnd);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  not  a  statement	41	None	add
417	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd));  _outputTail  =  len  +  1;  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  _outputEnd));  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  _outputTail  =  len  +  1)  >=  _outputEnd));  _outputTail  =  len  +  1;	  	non-compiled	[CE]  not  a  statement	41	None	add
418	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  0);  _outputTail  =  len  +  1;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  _outputTail  =  len  +  1)  >=  0);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  _outputTail  =  len  +  1)  >=  0);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  not  a  statement	41	None	add
419	[BUG]  [BUGGY]  int  len  =  text.length()  -  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  int  len  =  text.length()  -  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	int  len  =  text.length()  -  amount;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	68	None	replace
420	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	int  len  =  text.length()  -  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	68	None	replace
421	[BUG]  [BUGGY]  int  len  =  text.length()  +  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  int  len  =  text.length()  +  amount;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	int  len  =  text.length()  +  amount;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	68	None	replace
422	[BUG]  [BUGGY]  int  len  =  text.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  int  len  =  text.length()  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	int  len  =  text.length()  -  1;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	68	None	replace
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len    -    1;    _outputTail  =  len  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
424	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    -    1;    _outputTail  =  len  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
425	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  ((  _outputTail  =  len  -  1);  [CE]  ')'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  ((  _outputTail  =  len  -  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    -    1;    ((  _outputTail  =  len  -  1);	  	non-compiled	[CE]  ')'  expected	39	None	add
426	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  Len  -  1;  [CE]  cannot  find  symbol  Len  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  Len  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    -    1;    _outputTail  =  Len  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	39	None	add
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len    -    1;    _outputTail  =  len  -  2;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
428	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  2;  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  _outputTail  =  len  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    -    1;    _outputTail  =  len  -  2;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
429	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
430	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
431	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    If(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	64	None	add
432	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [CE]  cannot  find  symbol  Len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  Len	64	None	add
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
434	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
435	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
436	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  room;  }  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  room;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  room;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
437	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
438	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
439	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	92	None	replace
440	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  _outputTail);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  _outputTail);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  _outputTail);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
441	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputTail);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputTail);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)amount).setIndex(_outputTail);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
442	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  0);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  0);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)amount).setIndex(_outputBuffer,  0);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
443	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong(len);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong(len);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)text).writeRawLong(len);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
444	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  int  _outputTail  =  len  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    =    len    -    1;    int  _outputTail  =  len  -  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
445	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  int  _outputTail  =  len  -  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  -  1;  int  _outputTail  =  len  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    -    1;    int  _outputTail  =  len  -  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
446	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output	  	non-compiled	[CE]  ';'  expected	76	None	add
447	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [CE]  ')'  expected  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
448	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
449	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    ((  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1);	  	non-compiled	[CE]  ')'  expected	21	None	add
450	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  amounts  -  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  int  _outputTail  =  amounts  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  int  _outputTail  =  amounts  -  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
451	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >=  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    >=    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
452	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  ((  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  ((  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    ((  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2);	  	non-compiled	[CE]  ')'  expected	24	None	add
453	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
454	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
455	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	13	None	add
456	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	13	None	add
457	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	13	None	add
458	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	13	None	add
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  *  1;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
460	[BUG]  [BUGGY]  _outputTail  +=  amount  *  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  *  1;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
461	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
462	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
463	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amounts  +  1;  [CE]  cannot  find  symbol  amounts  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  _outputTail  =  amounts  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amounts  +  1;	  	non-compiled	[CE]  cannot  find  symbol  amounts	43	None	add
464	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  (_outputTail  =  amount  -  1);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  (_outputTail  =  amount  -  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  (_outputTail  =  amount  -  1);  }	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  not  a  statement	23	None	replace
465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
466	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
467	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
468	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  int  _outputTail  =  len;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	74	1	replace
469	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputTail  =  len;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
471	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  4;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
473	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  4;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  4;	  	compilable	  [FE]  AssertionFailedError  	58	1	add
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
475	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
476	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2  +  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  *  2  +  len;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
477	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2  +  len;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2  +  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  *  2  +  len;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
478	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  +=  amount  *  2  +  1;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
479	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2  +  1;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount  *  2  +  1;	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
480	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
481	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
482	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
483	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
484	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeLong(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeLong(text,  0,  len);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
485	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  amount);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRaw(text,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRaw(text,  0,  amount);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
486	[BUG]  [BUGGY]  _writer.writeFull(text,  0,  len);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeFull(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeFull(text,  0,  len);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
487	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
488	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
489	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
490	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
492	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	67	1	replace
493	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  length  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  length	67	None	replace
494	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;  [CE]  ')'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  ')'  expected	41	None	add
495	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;  [CE]  'void'  type  not  allowed  here  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	add
496	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;  [CE]  'void'  type  not  allowed  here  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)len).writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;	  	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	add
497	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)text).writeRawLong(_outputBuffer,  _outputTail);  _outputTail  =  len  +  1;  [CE]  inconvertible  types  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)text).writeRawLong(_outputBuffer,  _outputTail);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)text).writeRawLong(_outputBuffer,  _outputTail);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  inconvertible  types	41	None	add
498	[BUG]  [BUGGY]  _writer.write(text,  amount);  [CE]  no  suitable  method  found  for  write(String,int)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int)	14	None	replace
499	[BUG]  [BUGGY]  _writer.write(text,  _outputBuffer,  amount);  [CE]  no  suitable  method  found  for  write(String,char[],int)  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  _outputBuffer,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  _outputBuffer,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int)	14	None	replace
500	[BUG]  [BUGGY]  _writer.write(space,  _outputBuffer,  amount);  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(space,  _outputBuffer,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(space,  _outputBuffer,  amount);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  cannot  find  symbol  space	14	None	replace
501	[BUG]  [BUGGY]  _writer.writeRawLong(amount);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(amount);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
503	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	96	1	add
504	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	96	None	add
505	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out	  	non-compiled	[CE]  ';'  expected	96	None	add
506	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHea  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHea  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHea	  	non-compiled	[CE]  ';'  expected	96	None	add
507	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _	  	non-compiled	[CE]  ';'  expected	96	None	add
508	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
509	[BUG]  [BUGGY]  ||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
510	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
511	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
512	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
513	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
514	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputEnd;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputEnd;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
515	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputEnd;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputEnd;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputEnd;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
516	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
517	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  else  {  _outputTail  +=  amount;  }  timeout  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
518	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  int  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;	  	compilable	  [FE]  IndexOutOfBoundsException  	26	1	add
519	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  int  _outputTail  =  len;  _outputTail  =  len;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  int  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    int  _outputTail  =  len;  _outputTail  =  len;	  	compilable	  [FE]  IndexOutOfBoundsException  	26	1	add
520	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  lan;  _outputTail  =  len;  [CE]  cannot  find  symbol  lan  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  _outputTail  =  lan;  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    _outputTail  =  lan;  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol  lan	26	None	add
521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
522	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
524	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
525	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
526	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
528	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
529	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
530	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	102	1	add
531	[BUG]  [BUGGY]  if(amount  >  _outputEnd)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  _outputEnd)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  _outputEnd)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	88	None	replace
532	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	88	None	replace
533	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
534	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
536	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
537	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  If(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    If(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	53	None	add
538	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
539	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
540	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                  IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
541	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  ArrayStoreException  	3	1	replace
542	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  ArrayStoreException  	3	1	replace
543	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  ArrayStoreException  	3	1	replace
544	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  ArrayStoreException  	3	1	replace
545	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
546	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
547	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
548	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
549	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
550	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
551	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
552	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
553	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
554	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
555	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
556	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
558	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
560	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
562	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
564	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	98	1	add
565	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
566	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
567	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
568	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  +=  amount;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  IndexOutOfBoundsException  	70	1	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
570	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
571	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	99	None	replace
572	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
573	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
574	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
576	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	78	1	add
578	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _outputTail  =  len;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	78	1	add
579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
580	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _writer.write(text,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
581	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  int  len  =  text.length();  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	78	None	add
582	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _flushBuffer();  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	78	1	add
583	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _flushBuffer();  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  _flushBuffer();  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	78	1	add
584	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
585	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputTail;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
586	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
587	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
588	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    0;    	non-compiled	[CE]  not  a  statement	87	None	replace
589	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
590	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  len);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
591	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _out	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
592	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
593	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	56	1	replace
594	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
595	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    _outputBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
596	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  int  _outputTail  +=  amount  +  1;  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  int  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    int  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	31	None	add
597	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +=  amount  +  1);  [CE]  ')'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +=  amount  +  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +=  amount  +  1);	  	non-compiled	[CE]  ')'  expected	31	None	add
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
599	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  2;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    int    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
601	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }	  _outputTail    =    amount    -    1;    int    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
603	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
605	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
607	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
608	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  level;  }  [CE]  cannot  find  symbol  level  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  level;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  level;  }	  	non-compiled	[CE]  cannot  find  symbol  level	1	None	add
609	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	add
610	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	add
611	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	81	1	add
612	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	81	1	add
613	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  Len	81	None	add
614	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
615	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
616	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
617	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
618	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
619	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  -  1;  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    1;    	non-compiled	[CE]  not  a  statement	89	None	replace
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
621	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	103	1	replace
622	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	103	None	replace
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
624	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
625	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
626	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
627	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	100	1	add
628	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	100	None	add
629	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out	  	non-compiled	[CE]  ';'  expected	100	None	add
630	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHea  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHea  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHea	  	non-compiled	[CE]  ';'  expected	100	None	add
631	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _	  	non-compiled	[CE]  ';'  expected	100	None	add
632	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
633	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
634	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)  ==  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)    ==    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	94	None	replace
635	[BUG]  [BUGGY]  _writer.write(text,  _outputBuffer,  _outputHead);  [CE]  no  suitable  method  found  for  write(String,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  _outputBuffer,  _outputHead);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  _outputBuffer,  _outputHead);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int)	17	None	replace
636	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
637	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
638	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
639	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
640	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _writer.write(_outputBuffer,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer  =  new  SerializableString(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _writer.write(_outputBuffer,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
641	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
642	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  room)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(len  >  room)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
643	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  room)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(len  >  room)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(len  >  room)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
644	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
645	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
646	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  len)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]                  IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  len)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  +  len)  ==  _outputEnd)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
647	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
648	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
650	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
651	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
652	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	65	1	replace
653	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  >  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  Len  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	Len  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  >  expected	65	None	replace
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
655	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	62	1	add
656	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
657	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
658	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
660	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	5	1	replace
661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  /  3;	  _outputTail    =    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
662	[BUG]  [BUGGY]  _outputTail  =  amount  /  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  /  3;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  /  3;	  _outputTail    =    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
663	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	11	None	add
664	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	11	None	add
665	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	11	None	add
666	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	11	None	add
667	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd);  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd);    _outputTail    =    amount    +    1;    	non-compiled	[CE]  not  a  statement	46	None	replace
668	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	95	None	replace
669	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	non-compiled	[CE]  not  a  statement	45	None	replace
670	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
671	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  if(_outputTail  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
672	[BUG]  [BUGGY]  _writer.write(room,  0,  len);  [CE]  no  suitable  method  found  for  write(int,int,int)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(room,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(room,  0,  len);	          _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,int,int)	16	None	replace
673	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  sum  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  int  _outputTail  =  sum  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  int  _outputTail  =  sum  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
674	[BUG]  [BUGGY]  _outputTail  =  LAST_WRITE;  [CE]  cannot  find  symbol  LAST_WRITE  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  LAST_WRITE;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  LAST_WRITE;	  _outputTail    =    len;    _outputTail    =    lan;    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	29	None	replace
675	[BUG]  [BUGGY]  _outputTail  =  level;  [CE]  cannot  find  symbol  level  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  level;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  level;	  _outputTail    =    len;    _outputTail    =    lan;    	non-compiled	[CE]  cannot  find  symbol  level	29	None	replace
676	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  int  _outputTail  +=  amount  -  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  int  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    int  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  ';'  expected	33	None	add
677	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +=  amount  -  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +=  amount  -  1);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +=  amount  -  1);	  	non-compiled	[CE]  ')'  expected	33	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
679	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
680	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  len);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
681	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	TextUtilities.writeRawLong(_outputBuffer,  offset,  len);	  TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	60	None	replace
682	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	timeout	70	1	replace
683	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	timeout	70	1	replace
684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  AssertionFailedError  	70	1	replace
685	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputEnd    -    _outputBuffer)    	compilable	  [FE]  AssertionFailedError  	70	1	replace
686	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  two;  [CE]  cannot  find  symbol  two  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  2;  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  two;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    2;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  two;	  	non-compiled	[CE]  cannot  find  symbol  two	24	None	add
687	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  length  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  length	65	None	replace
688	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
689	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
690	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol	85	None	add
691	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
692	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
693	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd);  _outputTail  =  amount  +  1;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd);  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd);  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	non-compiled	[CE]  not  a  statement	45	None	replace
694	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  _outputEnd);  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd);    _outputTail    =    amount    +    1;    	non-compiled	[CE]  not  a  statement	45	None	replace
695	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_writer.write(text);	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
696	[BUG]  [BUGGY]  _writer.write(text);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text);	  if(amount    >    0)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
697	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
698	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
700	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
702	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    ||    amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
703	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
704	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  _outputTail    =    len;    (_outputTail    =    len;    	compilable	  [FE]  IndexOutOfBoundsException  	75	1	replace
705	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong();  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong();  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)text).writeRawLong();  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
706	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).setLength(len);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).setLength(len);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)text).setLength(len);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
707	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).setLength(amount);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).setLength(amount);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)text).setLength(amount);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
708	[BUG]  [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong(amount);  _outputTail  =  amount  +  2;  [CE]  inconvertible  types  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  2;  ((  IndexOutOfBoundsException)text).writeRawLong(amount);  _outputTail  =  amount  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    amount    +    2;    ((  IndexOutOfBoundsException)text).writeRawLong(amount);  _outputTail  =  amount  +  2;	  	non-compiled	[CE]  inconvertible  types	7	None	add
709	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;  [CE]  'void'  type  not  allowed  here  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  _outputTail  =  len  +  1;	  	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	add
710	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;  [CE]  'void'  type  not  allowed  here  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  _outputTail);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	add
711	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;  [CE]  ')'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len  +  1;	  	non-compiled	[CE]  ')'  expected	41	None	add
712	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  len  +  1;  ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    =    len    +    1;    ((  IndexOutOfBoundsException)_outputHead).append(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	  	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	add
713	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
714	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
715	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
716	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
717	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
718	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
719	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_outputBuffer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    0,    len);    if(_outputBuffer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
720	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_outputBuffer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  0,  len);  if(_outputBuffer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    0,    len);    if(_outputBuffer!=  null)  {  _writer.write(_outputBuffer,  0,  len);  }  else  {  _writer.write(_outputBuffer,  0,  len);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
721	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
722	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
723	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
724	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
725	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
726	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
727	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
728	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	77	1	replace
729	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
730	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  if(amount  <  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    int  _outputTail  =  amount  +  1;  if(amount  <  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        int    _outputTail    =    amount    +    1;    if(amount  <  0)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	55	None	add
731	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  0  :((  _outputTail  +  amount));	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	non-compiled	[CE]  not  a  statement	69	None	replace
732	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
733	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  timeout  [FE]          AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount));    	compilable	timeout	69	1	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    if(len  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
735	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    if(len  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
737	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
738	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
739	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        _outputTail    =    len;    if(len  >  room)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
741	[BUG]  [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  len;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  len;  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        _outputTail    =    len;    if(len  >  room)  {  _outputTail  =  len;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	26	1	add
742	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    0;    	non-compiled	[CE]  not  a  statement	87	None	replace
743	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
744	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  ((  _outputTail  =  amount  -  1);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  _outputTail    =    amount    -    1;    ((    _outputTail    =    amount    -    1);    	non-compiled	[CE]  ')'  expected	23	None	replace
745	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	32	1	replace
746	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	32	1	replace
747	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }	  _outputTail    +=    amount    +    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	32	None	replace
748	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	79	1	replace
749	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	79	1	replace
750	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
751	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
752	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
753	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
754	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
755	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    =    len    -    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
756	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	19	None	add
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
758	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
760	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
761	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	19	None	add
762	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
763	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
764	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  length;  }  else  {  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  length  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  length;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  length;  }  else  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  length	53	None	add
765	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
766	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
767	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
768	[BUG]  [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    -    1;    int  _outputTail  =  amount  -  1;  if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        -        1;        int    _outputTail    =    amount    -    1;    if(amount  >  0)  {  _outputTail  =  amount  -  1;  int  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	21	None	add
769	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(amount  >  0)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(amount  >  0)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
770	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(amount  >  0)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(amount  >  0)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(amount  >  0)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
771	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
772	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
773	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
774	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(_outputBuffer,  _outputTail,  amount);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(_outputBuffer,    _outputTail,    amount);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  _outputTail,  amount);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
775	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
776	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  int  _outputTail  =  amount  +  1;  }	  _outputTail    =    amount    +    1;    int    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
777	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
778	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  IndexOutOfBoundsException  	2	1	replace
779	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  amount  *  2;	  _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
780	[BUG]  [BUGGY]  _outputTail  =  amount  *  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  *  2;	  _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
781	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)!=  0);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    0);    	non-compiled	[CE]  not  a  statement	91	None	replace
782	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
783	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ')'  expected	103	None	replace
784	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ')'  expected	103	None	replace
785	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  length;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  length	63	None	replace
786	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
787	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
788	[BUG]  [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    int  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        int    _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  int  _outputTail  =  len;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	73	None	add
789	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
790	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
791	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
792	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
793	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
794	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
795	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    1;    if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	43	None	add
796	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd);  _outputTail  +=  amount  *  2;  [CE]  not  a  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd);  _outputTail  +=  amount  *  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    ((  _outputTail  +  amount  *  2)  >=  _outputEnd);  _outputTail  +=  amount  *  2;	  	non-compiled	[CE]  not  a  statement	35	None	add
797	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);	  	non-compiled	[CE]  not  a  statement	35	None	add
798	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  _outputBuffer.end  :  _outputTail;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  *  2;  ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  _outputBuffer.end  :  _outputTail;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    *    2;    ((  _outputTail  +  amount  *  2)  >=  _outputEnd)?  _outputBuffer.end  :  _outputTail;	  	non-compiled	[CE]  not  a  statement	35	None	add
799	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
800	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	101	1	replace
801	[BUG]  [BUGGY]  _writer.write(buffer,  0,  amount);  [CE]  cannot  find  symbol  buffer  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(buffer,  0,  amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(buffer,  0,  amount);	          _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  buffer	16	None	replace
802	[BUG]  [BUGGY]  _writer.write(space,  0,  len);  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(space,  0,  len);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(space,  0,  len);	          _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  space	16	None	replace
803	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
804	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                  IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  ==  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
805	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]                    IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    ==    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	48	None	replace
806	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  0)  >=  _outputEnd);  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  =  0)  >=  _outputEnd);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  =  0)  >=  _outputEnd);	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)    >=    0);    	non-compiled	[CE]  not  a  statement	90	None	replace
807	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	78	None	add
808	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	78	None	add
809	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
810	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	78	1	add
811	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	78	None	add
812	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
813	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
814	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
815	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  >  0)  {  _outputTail  =  len;  if(len  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output	  	non-compiled	[CE]  ';'  expected	76	None	add
816	[BUG]  [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    len;    if(len  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        len;        if(len    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
817	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.length()  :  0;  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  amount  +  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.length()  :  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  amount  +  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.length()  :  0;	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
818	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd)?  _outputBuffer.length()  :  0;  }  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd)?  _outputBuffer.length()  :  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1)  >>  _outputEnd)?  _outputBuffer.length()  :  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1)!=    _outputEnd)?    _outputBuffer.length()    :    0;    	non-compiled	[CE]  not  a  statement	47	None	replace
819	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
820	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputBuffer.length  >  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputBuffer.length  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	||(amount  <  SHORT_WRITE  &&  _outputBuffer.length  >  0))  {  _outputTail  +=  amount;  }	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
821	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputBuil  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputBuil  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  0)  {  _outputBuil  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  ';'  expected	82	None	replace
822	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
823	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
824	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }	  _outputTail    +=    amount    -    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	34	None	replace
825	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
826	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
827	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
828	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
829	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  ((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	((  _outputTail  +  amount)>  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;	  _outputTail    =    amount    -    1;    ((    _outputTail    +    amount)    >    0)?    text.getChars(offset,    offset+amount,    _outputBuffer,    0):    1;    	non-compiled	[CE]  not  a  statement	89	None	replace
830	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [CE]  cannot  find  symbol  LEN  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  LEN	81	None	add
831	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	81	None	add
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  0;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
833	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  0;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  0;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
835	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  len;  _outputTail  =  0;  }	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
836	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	_outputTail  =  0;	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
837	[BUG]  [BUGGY]  _outputTail  =  0;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  =  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail  =  0;	  _outputTail    =    len;    int    _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
838	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	51	None	add
839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
840	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    >    0)    {    _outputTail    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
842	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
843	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
844	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
845	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _out  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _out  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _out	  	non-compiled	[CE]  ')'  expected	100	None	add
846	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output	  	non-compiled	[CE]  ')'  expected	100	None	add
847	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }	  	non-compiled	[CE]  ';'  expected	100	None	add
848	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,	  	non-compiled	[CE]  ')'  expected	100	None	add
849	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
850	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  IndexOutOfBoundsException  [FE]              IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    len;    _outputTail    =    len);    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
851	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output	  	non-compiled	[CE]  ')'  expected	98	None	add
852	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	98	None	add
853	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	98	None	add
854	[BUG]  [BUGGY]  _writer.write(text,  amount,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  amount,  _outputBuffer,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	14	None	replace
855	[BUG]  [BUGGY]  _writer.write(text,  amount,  _outputBuffer);  [CE]  no  suitable  method  found  for  write(String,int,char[])  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  amount,  _outputBuffer);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  amount,  _outputBuffer);	          _writer.write(_outputBuffer,    _outputTail,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[])	14	None	replace
856	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [CE]  cannot  find  symbol  LEN  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  LEN	64	None	add
857	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(length);  }	  	non-compiled	[CE]  ';'  expected	96	None	add
858	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _output	  	non-compiled	[CE]  ')'  expected	96	None	add
859	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(0);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(0);  }	  	non-compiled	[CE]  ';'  expected	96	None	add
860	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(len);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(len);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(len);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	96	None	add
861	[BUG]  [BUGGY]  int  len  =  text.length()  +  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  int  len  =  text.length()  +  room;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	int  len  =  text.length()  +  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	68	None	replace
862	[BUG]  [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]                AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	          _writer.writeRawLong(text);    	non-compiled	[CE]  'void'  type  not  allowed  here	18	None	replace
863	[BUG]  [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer));  [CE]  no  suitable  method  found  for  getChars(int,int,char[])  [FE]                  AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer));	          _writer.writeRawLong(text);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[])	18	None	replace
864	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  0;	  	non-compiled	[CE]  not  a  statement	33	None	add
865	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.charAt(amount  -  1):  text.charAt(amount  -  1));  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.charAt(amount  -  1):  text.charAt(amount  -  1));  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.charAt(amount  -  1):  text.charAt(amount  -  1));	  	non-compiled	[CE]  not  a  statement	33	None	add
866	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd);  _outputTail  +=  amount  -  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd);  _outputTail  +=  amount  -  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd);  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  not  a  statement	33	None	add
867	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;	  	non-compiled	[CE]  not  a  statement	33	None	add
868	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd);  _outputTail  +=  amount  +  1;  [CE]  not  a  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd);  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd);  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
869	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  _outputEnd)?  text.charAt(amount):  text.charAt(amount);	  	non-compiled	[CE]  not  a  statement	31	None	add
870	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)!=  _outputEnd);  _outputTail  +=  amount  +  1;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)!=  _outputEnd);  _outputTail  +=  amount  +  1;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)!=  _outputEnd);  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  not  a  statement	31	None	add
871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
872	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  -  1;  _outputTail  =  amount  -  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    -    1;    _outputTail    =    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	25	1	replace
873	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  asm  +  2;  [CE]  cannot  find  symbol  asm  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  asm  +  2;  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  asm  +  2;	  	non-compiled	[CE]  cannot  find  symbol  asm	58	None	add
874	[BUG]  [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    =    amount    +    1;    _outputTail  =  amount  +  2;  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        =        amount        +        1;        _outputTail    =    amount    +    2;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2);	  	non-compiled	[CE]  ';'  expected	58	None	add
875	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	102	None	add
876	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setLength(offset,  offset+len,  _outputBuffer	  	non-compiled	[CE]  ')'  expected	102	None	add
877	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  len;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	102	None	add
878	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.setChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
879	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ')'  expected	99	None	replace
880	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ')'  expected	99	None	replace
881	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
882	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
883	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
884	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
885	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
886	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
887	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
888	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
889	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
890	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputEnd  =  0;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    _outputEnd)?    0    :((    _outputTail    +    amount)>    _outputEnd)?    0    :((    _outputTail    +    amount)/    2);    	compilable	  [FE]  IndexOutOfBoundsException  	71	1	replace
891	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [CE]  ')'  expected  [FE]          IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
892	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  ((  _outputTail  =  amount  +  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    =    amount    +    1;    ((    _outputTail    =    amount    +    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
893	[BUG]  [BUGGY]  _writer.write(space,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  space  [FE]              AssertionFailedError      [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(space,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(space,  _outputBuffer,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  space	17	None	replace
894	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
895	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  _flushBuffer();  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
896	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
897	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  =  amount  +  1;  _outputTail  =  amount  +  2;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    amount    +    1;    _outputTail    =    amount    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	59	1	replace
898	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    len;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
900	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
902	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
903	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
904	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
905	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
906	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
907	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	add	if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
908	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputTail    +=    amount    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	36	1	replace
909	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  System.arraycopy(text.getChars(offset,  offset+amount,  _outputBuffer,  [CE]  ')'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  System.arraycopy(text.getChars(offset,  offset+amount,  _outputBuffer,  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	if(amount  >  0)  {  _outputTail  +=  amount  *  2;  }  else  {  _flushBuffer();  offset  +=  amount;  len  -=  amount;  System.arraycopy(text.getChars(offset,  offset+amount,  _outputBuffer,	  _outputTail    +=    amount    *    2;    	non-compiled	[CE]  ')'  expected	36	None	replace
910	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	488	488	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	  if(amount    <    SHORT_WRITE)    {    _outputTail    +=    amount;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	67	None	replace
