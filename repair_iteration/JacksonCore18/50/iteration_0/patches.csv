bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	add	if(typeMsg!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  NullPointerException  	99	5	replace
2	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	if(typeMsg!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  NullPointerException  	99	5	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg  ==  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	add	if(typeMsg  ==  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	99	1	replace
4	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg  ==  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	if(typeMsg  ==  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	99	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg  ==  null  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	add	if(typeMsg  ==  null  ||  _cfgPrettyPrinter!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	99	1	replace
6	[BUG]  [BUGGY]  if(typeMsg  ==  null  ||  _cfgPrettyPrinter!=  null)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(typeMsg  ==  null  ||  _cfgPrettyPrinter!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	if(typeMsg  ==  null  ||  _cfgPrettyPrinter!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  AssertionFailedError  	99	1	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  [BUGGY]    [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	  	if  (_cfgPrettyPrinter  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	99	None	replace
8	[BUG]  [BUGGY]  if(_prettyPrinter!=  null)  {  [CE]  cannot  find  symbol  _prettyPrinter  [FE]    AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(_prettyPrinter!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	if(_prettyPrinter!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  _prettyPrinter	99	None	replace
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(_writer!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	add	if(_writer!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  NullPointerException  	99	5	replace
10	[BUG]  [BUGGY]  if(_writer!=  null)  {  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  {  [BUGGY]  if(_writer!=  null)  {  [BUGGY]    _verifyPrettyValueWrite(typeMsg);  return;  }  char  c;  final  int  status  =  _writeContext.writeValue();  if  (status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  switch  (status)  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.3779644730092272	759	759	1	replace	if(_writer!=  null)  {	if  (_cfgPrettyPrinter  !=  null)  {  	compilable	  [FE]  NullPointerException  	99	5	replace
