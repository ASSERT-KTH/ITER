bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
2	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
3	[BUG]  [BUGGY]  _outputTail  -=  amount;  int  _outputTail  -=  amount;  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  int  _outputTail  -=  amount;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    int  _outputTail  -=  amount;	  	non-compiled	[CE]  ';'  expected	5	None	add
4	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    ((  _outputTail  -=  amount));	  	non-compiled	[CE]  not  a  statement	5	None	add
5	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount)  +  1);  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount)  +  1);  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    ((  _outputTail  -=  amount)  +  1);	  	non-compiled	[CE]  not  a  statement	5	None	add
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
7	[BUG]  [BUGGY]  len  -=  amount  +  1;  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
8	[BUG]  [BUGGY]  len  -=  amount  +  1;  Len  -=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  Len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    Len  -=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	1	None	add
9	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
10	[BUG]  [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
11	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
12	[BUG]  [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
13	[BUG]  [BUGGY]  len  -=  amount  +  1;  int  len  -=  amount  +  1;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  int  len  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    int  len  -=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	1	None	add
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  /  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
15	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  /  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
16	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  2;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
17	[BUG]  [BUGGY]  len  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  2;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
19	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
20	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  4;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
21	[BUG]  [BUGGY]  len  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  4;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
22	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
23	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
24	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    Len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	3	None	add
25	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
26	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
28	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
29	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    int  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	3	None	add
30	[BUG]  [BUGGY]  Len  -=  len  +  1;  [CE]  cannot  find  symbol  Len  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  Len  -=  len  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  len  +  1;	  Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	7	None	replace
31	[BUG]  [BUGGY]  Len  -=  amount  +  2;  [CE]  cannot  find  symbol  Len  [FE]                AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  Len  -=  amount  +  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  +  2;	  Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	7	None	replace
32	[BUG]  [BUGGY]  Len  -=  amount  +  3;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  Len  -=  amount  +  3;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  +  3;	  Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	7	None	replace
33	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  +  1;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
34	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  +  1;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
35	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  len;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  len;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
36	[BUG]  [BUGGY]  _outputTail  -=  len;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  len;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  len;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
37	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount  +  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  +  2;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
38	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount  +  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  +  2;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
39	[BUG]  [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	8	None	add
40	[BUG]  [BUGGY]      _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        _writer.write(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	8	None	add
41	[BUG]  [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	8	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      _flushBuffer();  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
43	[BUG]  [BUGGY]      _flushBuffer();  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      _flushBuffer();  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
44	[BUG]  [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  ';'  expected	8	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  +  2;	  len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
46	[BUG]  [BUGGY]  len  -=  amount  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  2;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  +  2;	  len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  1;	  len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
48	[BUG]  [BUGGY]  len  -=  amount  *  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  1;	  len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
49	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    ((  _outputTail  -=  amount);	  	non-compiled	[CE]  ')'  expected	5	None	add
50	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
51	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
52	[BUG]  [BUGGY]  Len  -=  amount  +  1L;  [CE]  cannot  find  symbol  Len  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  Len  -=  amount  +  1L;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  +  1L;	  Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	7	None	replace
53	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
54	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
55	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
56	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
57	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
58	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
59	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  3;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  3;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
60	[BUG]  [BUGGY]  len  -=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  *  3;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  3;	  len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
62	[BUG]  [BUGGY]      _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
63	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
64	[BUG]  [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
65	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
66	[BUG]  [BUGGY]  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
67	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  offset;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  offset;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
68	[BUG]  [BUGGY]  _outputTail  -=  offset;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  offset;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  offset;	  _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
69	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    1;    _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
70	[BUG]  [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    1;    _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
71	[BUG]  [BUGGY]  Len  -=  amount  *  1;  [CE]  cannot  find  symbol  Len  [FE]              AssertionFailedError    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  Len  -=  amount  *  1;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  1;	  Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	7	None	replace
72	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
73	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
74	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  ArrayStoreException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	      	compilable	  [FE]  ArrayStoreException  	9	1	replace
75	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	      	non-compiled	[CE]  ';'  expected	9	None	replace
76	[BUG]  [BUGGY]  _outputTail  -=  level;  [CE]  cannot  find  symbol  level  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  level;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  level;	  _outputTail    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  level	6	None	replace
77	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  -=  amount;  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  if(_outputTail  -=  amount;  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    if(_outputTail  -=  amount;	  	non-compiled	[CE]  ')'  expected	5	None	add
78	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  -=  amount;  }  [CE]  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;    [BUGGY]  _outputTail  -=  amount;  if(_outputTail  -=  amount;  }  [BUGGY]    }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount;    if(_outputTail  -=  amount;  }	  	non-compiled	[CE]  	5	None	add
