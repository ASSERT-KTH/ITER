bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  Len  -=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]          AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  Len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  +  1;  Len  -=  amount  +  1;	  len    -=    amount    +    1;    Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	8	None	replace
2	[BUG]  [BUGGY]  len  -=  amount  +  2;  Len  -=  amount  +  2;  [CE]  cannot  find  symbol  Len  [FE]            AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  Len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  +  2;  Len  -=  amount  +  2;	  len    -=    amount    +    1;    Len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	8	None	replace
3	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.writeRawLong(text);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.writeRawLong(text);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
4	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  =  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	replace
5	[BUG]  [BUGGY]  _outputTail  =  len;  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  =  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	replace
6	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.writeRawLong(text,  0,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.writeRawLong(text,  0,  len);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
7	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
8	[BUG]  [BUGGY]  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
9	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	28	None	replace
10	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputTail  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  4;  _outputTail  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
11	[BUG]  [BUGGY]  len  -=  amount  *  4;  _outputTail  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputTail  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  4;  _outputTail  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  2;  _outputTail  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
13	[BUG]  [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  2;  _outputTail  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	28	1	replace
14	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	40	None	replace
15	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	40	None	replace
16	[BUG]  [BUGGY]  _writer.write(w,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  w  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(w,  offset+len,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(w,  offset+len,  _outputBuffer,  0);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  w	40	None	replace
17	[BUG]  [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+1,  _outputBuffer,  0);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	40	None	replace
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
19	[BUG]  [BUGGY]  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
20	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	26	None	replace
21	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  len  +  1;	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
22	[BUG]  [BUGGY]  _outputTail  -=  len  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  len  +  1;	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
23	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  +=  amount;	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
24	[BUG]  [BUGGY]  _outputTail  +=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  +=  amount;	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
25	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  +=  len;	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
26	[BUG]  [BUGGY]  _outputTail  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  +=  len;	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  1;	  len    -=    amount    *    1;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
28	[BUG]  [BUGGY]  len  -=  amount  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  1;	  len    -=    amount    *    1;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
29	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  2;	  len    -=    amount    *    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	1	replace
30	[BUG]  [BUGGY]  len  -=  amount  /  2;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  2;	  len    -=    amount    *    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	1	replace
31	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
32	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
33	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
34	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
35	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  offset);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_writer.write(text,  0,  offset);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
36	[BUG]  [BUGGY]  _writer.write(text,  0,  offset);  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  offset);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  0,  offset);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    amount    +    1;    _outputTail  -=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
38	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    _outputTail  -=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
39	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  int  _outputTail  -=  amount  +  1;  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  int  _outputTail  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    int  _outputTail  -=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	33	None	add
40	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1);  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    ((  _outputTail  -=  amount  +  1);	  	non-compiled	[CE]  ')'  expected	33	None	add
41	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  _outputTail  -=  amount  +  1;  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  _outputTail  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    _outputTail  -=  amount  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	33	None	add
42	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
43	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
44	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
45	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
46	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	27	None	add
47	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    int  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	27	None	add
48	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
49	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_flushBuffer();  len  -=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
51	[BUG]  [BUGGY]  _flushBuffer();  len  -=  amount  +  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_flushBuffer();  len  -=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
52	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	replace
53	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	replace
54	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset++;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset++;  }	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	replace
55	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset++;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset++;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset++;  }	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	replace
56	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_writer.write(_outputBuffer,  offset,  len);	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
57	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [FE]  IndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(_outputBuffer,  offset,  len);	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
58	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_flushBuffer();  offset  +=  len;	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
59	[BUG]  [BUGGY]  _flushBuffer();  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_flushBuffer();  offset  +=  len;	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	72	1	replace
60	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputTail);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_writer.write(_outputBuffer,  offset  +  len,  _outputTail);	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
61	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputTail);  [FE]  IndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputTail);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(_outputBuffer,  offset  +  len,  _outputTail);	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  IndexOutOfBoundsException  	72	1	replace
62	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	44	None	replace
63	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	44	None	replace
64	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	44	None	replace
65	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	44	None	replace
66	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  4;	  len    -=    amount    /    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
67	[BUG]  [BUGGY]  len  -=  amount  /  4;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  4;	  len    -=    amount    /    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	15	1	replace
68	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  SHORT_WRITE  +  2;	  len    -=    amount    *    SHORT_WRITE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
69	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  SHORT_WRITE  +  2;	  len    -=    amount    *    SHORT_WRITE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
70	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	19	None	replace
71	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
72	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	1	replace
73	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
74	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
75	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _verifyValueWrite( "write  text  value ");  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_verifyValueWrite( "write  text  value ");	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
76	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _verifyValueWrite( "write  text  value ");  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_verifyValueWrite( "write  text  value ");	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
77	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _flushBuffer();  }  else  {  offset  +=  amount;  }	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
78	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  offset  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  offset  +=  amount;  }	          _flushBuffer();    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
79	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    2;    len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
80	[BUG]  [BUGGY]  len  -=  amount  *  2;  len  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
81	[BUG]  [BUGGY]  len  -=  amount  *  2;  Len  -=  amount  *  2;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  Len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    Len  -=  amount  *  2;	  	non-compiled	[CE]  cannot  find  symbol  Len	16	None	add
82	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    2;    _flushBuffer();  len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
83	[BUG]  [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  len  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    _flushBuffer();  len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    2;    _outputTail  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
85	[BUG]  [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputTail  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    _outputTail  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  offset  +=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    2;    _flushBuffer();  offset  +=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
87	[BUG]  [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  offset  +=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _flushBuffer();  offset  +=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    _flushBuffer();  offset  +=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
88	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
89	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
90	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  Len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  Len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    Len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	11	None	add
91	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  int  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  int  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    int  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	11	None	add
92	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
93	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
94	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _writer.write(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	11	None	add
95	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE    +    1;    len  -=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
96	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  len  -=  amount  *  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    len  -=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
97	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  Len  -=  amount  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  Len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    Len  -=  amount  *  SHORT_WRITE  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	18	None	add
98	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE    +    1;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
99	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
100	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  int  len  -=  amount  *  SHORT_WRITE  +  1;  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  int  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    int  len  -=  amount  *  SHORT_WRITE  +  1;	  	non-compiled	[CE]  ';'  expected	18	None	add
101	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  offset  +=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE    +    1;    _flushBuffer();  offset  +=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
102	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  offset  +=  amount  *  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _flushBuffer();  offset  +=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    _flushBuffer();  offset  +=  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
104	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	61	1	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
106	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
108	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
110	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
112	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
113	[BUG]  [BUGGY]  ((  _outputTail  -=  amount)+  1)+  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount)+  1)+  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount)+  1)+  1);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount)    +    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
114	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  len)+  1);  [CE]  not  a  statement  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  len)+  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount;  ((  _outputTail  -=  len)+  1);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount)    +    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
115	[BUG]  [BUGGY]  ((  _outputTail  -=  amount)+  1);  [CE]  not  a  statement  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount)+  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount)+  1);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount)    +    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
116	[BUG]  [BUGGY]  ((  _outputTail  -=  amount)+  1)/  2;  [CE]  not  a  statement  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount)+  1)/  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount)+  1)/  2;	  _outputTail    -=    amount;    ((    _outputTail    -=    amount)    +    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
117	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
118	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
119	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  space  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	non-compiled	[CE]  cannot  find  symbol  space	55	None	add
120	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
121	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
122	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	55	None	add
123	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  *  2;	  _outputTail    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	replace
124	[BUG]  [BUGGY]  _outputTail  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  *  2;	  _outputTail    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	replace
125	[BUG]  [BUGGY]  Len  -=  amount  /  1;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  /  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  /  1;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
126	[BUG]  [BUGGY]  Len  -=  amount  *  2;  [CE]  cannot  find  symbol  Len  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  2;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
127	[BUG]  [BUGGY]  Len  -=  len  *  1;  [CE]  cannot  find  symbol  Len  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  len  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  len  *  1;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
128	[BUG]  [BUGGY]  Len  -=  amount  *  4;  [CE]  cannot  find  symbol  Len  [FE]                        AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  4;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
130	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  _outputTail  -=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
131	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  int  _outputTail  -=  amount;  _outputTail  -=  amount;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  int  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    int  _outputTail  -=  amount;  _outputTail  -=  amount;	  	non-compiled	[CE]  ';'  expected	1	None	add
132	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amounts;  _outputTail  -=  amount;  [CE]  cannot  find  symbol  amounts  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amounts;  _outputTail  -=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amounts;  _outputTail  -=  amount;	  	non-compiled	[CE]  cannot  find  symbol  amounts	1	None	add
133	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  _outputTail  -=  level;  [CE]  cannot  find  symbol  level  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  _outputTail  -=  level;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  level;	  	non-compiled	[CE]  cannot  find  symbol  level	1	None	add
134	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
135	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
136	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  space  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  space	57	None	add
137	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	57	None	add
138	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
139	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
140	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    2;    len  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
141	[BUG]  [BUGGY]  len  -=  amount  +  2;  len  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    len  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
142	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    2;    _flushBuffer();  len  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
143	[BUG]  [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  len  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    _flushBuffer();  len  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
144	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  offset  +=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    2;    _flushBuffer();  offset  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
145	[BUG]  [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  offset  +=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _flushBuffer();  offset  +=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    _flushBuffer();  offset  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
146	[BUG]  [BUGGY]  len  -=  amount  +  2;  int  len  -=  amount  +  2;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  int  len  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    int  len  -=  amount  +  2;	  	non-compiled	[CE]  ';'  expected	45	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    len;    _outputTail  -=  len;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
148	[BUG]  [BUGGY]  _outputTail  -=  len;  _outputTail  -=  len;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    _outputTail  -=  len;	  	compilable	  [FE]  AssertionFailedError  	35	1	add
149	[BUG]  [BUGGY]  _outputTail  -=  len;  int  len  =  text.length();  _outputTail  -=  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  int  len  =  text.length();  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    int  len  =  text.length();  _outputTail  -=  len;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	35	None	add
150	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  +  1));  _outputTail  -=  len;  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  +  1));  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)  +  1));  _outputTail  -=  len;	  	non-compiled	[CE]  not  a  statement	35	None	add
151	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)&&(_outputHead!=  _outputEnd));  [CE]  not  a  statement  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)&&(_outputHead!=  _outputEnd));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)&&(_outputHead!=  _outputEnd));	  	non-compiled	[CE]  not  a  statement	35	None	add
152	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  +  1);  _outputTail  -=  len;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  +  1);  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)  +  1);  _outputTail  -=  len;	  	non-compiled	[CE]  not  a  statement	35	None	add
153	[BUG]  [BUGGY]  Len  -=  len  +  3;  [CE]  cannot  find  symbol  Len  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  len  +  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  len  +  3;	  Len    -=    amount    +    3;    	non-compiled	[CE]  cannot  find  symbol  Len	32	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
155	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
156	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  int  _outputTail  -=  amount  +  2;  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  int  _outputTail  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    2;    int  _outputTail  -=  amount  +  2;	  	non-compiled	[CE]  ';'  expected	37	None	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    amount    +    2;    _outputTail  -=  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
158	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  3;  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  -=  amount  +  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    2;    _outputTail  -=  amount  +  3;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
159	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  ((  _outputTail  -=  amount  +  2);  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  ((  _outputTail  -=  amount  +  2);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    2;    ((  _outputTail  -=  amount  +  2);	  	non-compiled	[CE]  ')'  expected	37	None	add
160	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  2  +  1;	  len    -=    amount    *    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	replace
161	[BUG]  [BUGGY]  len  -=  amount  *  2  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  2  +  1;	  len    -=    amount    *    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	replace
162	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
163	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
164	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
165	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
166	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	50	None	add
167	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
168	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
169	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    int  len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	50	None	add
170	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
171	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
172	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  Len  -=  amount  +  1;  _flushBuffer();  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  Len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    Len  -=  amount  +  1;  _flushBuffer();	  	non-compiled	[CE]  cannot  find  symbol  Len	69	None	add
173	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  +=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    _outputTail  +=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	69	1	add
174	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  +=  amount  +  1;  _flushBuffer();  [FE]  IndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  +=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    _outputTail  +=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	69	1	add
175	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  =  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    _outputTail  =  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	69	1	add
176	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  =  amount  +  1;  _flushBuffer();  [FE]  IndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _outputTail  =  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    _outputTail  =  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  IndexOutOfBoundsException  	69	1	add
177	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
178	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  offset;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    offset;    _outputTail  -=  offset;	  	compilable	  [FE]  AssertionFailedError  	67	1	add
180	[BUG]  [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  offset;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  offset;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    _outputTail  -=  offset;	  	compilable	  [FE]  AssertionFailedError  	67	1	add
181	[BUG]  [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  off;  [CE]  cannot  find  symbol  off  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  off;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    _outputTail  -=  off;	  	non-compiled	[CE]  cannot  find  symbol  off	67	None	add
182	[BUG]  [BUGGY]  _outputTail  -=  offset;  int  _outputTail  -=  offset;  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  int  _outputTail  -=  offset;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    int  _outputTail  -=  offset;	  	non-compiled	[CE]  ';'  expected	67	None	add
183	[BUG]  [BUGGY]  _outputTail  -=  offset;  ((  _outputTail  -=  offset);  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  ((  _outputTail  -=  offset);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    ((  _outputTail  -=  offset);	  	non-compiled	[CE]  ')'  expected	67	None	add
184	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  +=  amount  +  1;	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	replace
185	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  +=  amount  +  1;	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
187	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
188	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	64	None	replace
189	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        len    -=    amount    +    1;    len  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
190	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  len  -=  amount  +  1;  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    len  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
191	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  Len  -=  amount  +  1;  len  -=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  Len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    Len  -=  amount  +  1;  len  -=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	6	None	add
192	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
193	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
194	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
195	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
196	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  int  len  -=  amount  +  1;  len  -=  amount  +  1;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  int  len  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    int  len  -=  amount  +  1;  len  -=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	6	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    /    SHORT_WRITE;    len  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
198	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  len  -=  amount  /  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    len  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
199	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  Len  -=  amount  /  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  Len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    Len  -=  amount  /  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	14	None	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _flushBuffer();  len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    /    SHORT_WRITE;    _flushBuffer();  len  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
201	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _flushBuffer();  len  -=  amount  /  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _flushBuffer();  len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    _flushBuffer();  len  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _outputTail  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    /    SHORT_WRITE;    _outputTail  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
203	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _outputTail  -=  amount  /  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  _outputTail  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    _outputTail  -=  amount  /  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	14	1	add
204	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  int  len  -=  amount  /  SHORT_WRITE;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  int  len  -=  amount  /  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    int  len  -=  amount  /  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	14	None	add
205	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputHead  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
206	[BUG]  [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputHead  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
207	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	51	None	replace
208	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputHead  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  4;  _outputHead  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
209	[BUG]  [BUGGY]  len  -=  amount  *  4;  _outputHead  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputHead  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  4;  _outputHead  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
210	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputHead  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  2;  _outputHead  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
211	[BUG]  [BUGGY]  len  -=  amount  *  2;  _outputHead  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputHead  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  2;  _outputHead  -=  amount  *  4;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
212	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    3;    len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
213	[BUG]  [BUGGY]  len  -=  amount  *  3;  len  -=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
214	[BUG]  [BUGGY]  len  -=  amount  *  3;  Len  -=  amount  *  3;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  Len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    Len  -=  amount  *  3;	  	non-compiled	[CE]  cannot  find  symbol  Len	59	None	add
215	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    3;    _flushBuffer();  len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
216	[BUG]  [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  len  -=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    _flushBuffer();  len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
217	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _outputTail  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    3;    _outputTail  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
218	[BUG]  [BUGGY]  len  -=  amount  *  3;  _outputTail  -=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _outputTail  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    _outputTail  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
219	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  offset  +=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    3;    _flushBuffer();  offset  +=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
220	[BUG]  [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  offset  +=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _flushBuffer();  offset  +=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    _flushBuffer();  offset  +=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	42	1	add
222	[BUG]  [BUGGY]          _flushBuffer();  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	42	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(_outputTail  >=  len)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
224	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(_outputTail  >=  len)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(_outputTail  >=  len)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
226	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  len)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(_outputTail  >=  len)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(len  >  room)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
228	[BUG]  [BUGGY]          _flushBuffer();  if(len  >  room)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  >  room)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
229	[BUG]  [BUGGY]          _flushBuffer();  if(len  >  room)  {  _outputBuffer();  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  >  room)  {  _outputBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  >  room)  {  _outputBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
230	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	non-compiled	[CE]  ';'  expected	3	None	replace
231	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(_outputTail  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	replace
232	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	replace
233	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  room)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	non-compiled	[CE]  ';'  expected	3	None	replace
234	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
235	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
236	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  offset  +=  len;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
237	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  offset  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  offset  +=  len;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
238	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
239	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
240	[BUG]  [BUGGY]  System.arraycopy(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	System.arraycopy(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	74	None	replace
241	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  0)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  ArrayStoreException  	74	1	replace
242	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  ArrayStoreException  	74	1	replace
243	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  ArrayStoreException  	74	1	replace
244	[BUG]  [BUGGY]  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  ArrayStoreException  	74	1	replace
245	[BUG]  [BUGGY]  _writer.write(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int,int)  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset  +  1,  len,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int,int)	74	None	replace
246	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(_outputTail  >=  amount)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
247	[BUG]  [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >=  amount)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
248	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
249	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
250	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail!=  amount)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(_outputTail!=  amount)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
251	[BUG]  [BUGGY]  if(_outputTail!=  amount)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail!=  amount)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail!=  amount)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
252	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  =  0;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
253	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  amount;  _outputTail  =  0;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
254	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  +  3;	  _outputTail    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
255	[BUG]  [BUGGY]  _outputTail  -=  amount  +  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  +  3;	  _outputTail    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
256	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
257	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
258	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    Len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	22	None	add
259	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
260	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
261	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  int  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    int  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	22	None	add
262	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  /  3;	  len    -=    amount    *    3;    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	1	replace
263	[BUG]  [BUGGY]  len  -=  amount  /  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  /  3;	  len    -=    amount    *    3;    	compilable	  [FE]  StringIndexOutOfBoundsException  	60	1	replace
264	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    1;    len  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
265	[BUG]  [BUGGY]  len  -=  amount  *  1;  len  -=  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    len  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
266	[BUG]  [BUGGY]  len  -=  amount  *  1;  Len  -=  amount  *  1;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  Len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    Len  -=  amount  *  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	47	None	add
267	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    1;    _flushBuffer();  len  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
268	[BUG]  [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  len  -=  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    _flushBuffer();  len  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
269	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _outputTail  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    1;    _outputTail  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
270	[BUG]  [BUGGY]  len  -=  amount  *  1;  _outputTail  -=  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _outputTail  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    _outputTail  -=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
271	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  offset  +=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    1;    _flushBuffer();  offset  +=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
272	[BUG]  [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  offset  +=  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _flushBuffer();  offset  +=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    _flushBuffer();  offset  +=  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
273	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    len  -=  amount  +  1;  _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	add
274	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    len  -=  amount  +  1;  _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	add
275	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  Len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  Len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    Len  -=  amount  +  1;  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	63	None	add
276	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	add
277	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	add
278	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    int  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  ';'  expected	63	None	add
279	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputBuffer  +=  amount  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputBuffer  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    len  -=  amount  +  1;  _outputBuffer  +=  amount  +  1;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	add
280	[BUG]  [BUGGY]  Len  -=  len  +  1L;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  len  +  1L;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  len  +  1L;	  Len    -=    amount    +    1L;    	non-compiled	[CE]  cannot  find  symbol  Len	52	None	replace
281	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
282	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
283	[BUG]  [BUGGY]  Len  -=  len  +  2;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  len  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  len  +  2;	  Len    -=    len    +    1;    	non-compiled	[CE]  cannot  find  symbol  Len	30	None	replace
284	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
285	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
286	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    Len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	25	None	add
287	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
288	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
289	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _writer.writeRawLong(text);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _writer.writeRawLong(text);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    _writer.writeRawLong(text);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
290	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _writer.writeRawLong(text,  offset);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  _writer.writeRawLong(text,  offset);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    _writer.writeRawLong(text,  offset);  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
291	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Len  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    Len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	24	None	replace
292	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
293	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
294	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  space  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  >  space)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  space	53	None	add
295	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
296	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
297	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	53	None	add
298	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
299	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
300	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  len);  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  len);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
301	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
302	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
303	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  Len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  Len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    Len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	9	None	add
304	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
305	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
306	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _outputTail  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
307	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _outputTail  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
308	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _outputTail  =  amount;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
309	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    _outputTail  =  amount;  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
310	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
311	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
312	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  space)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [CE]  cannot  find  symbol  space  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  space)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >  space)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	non-compiled	[CE]  cannot  find  symbol  space	73	None	add
313	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  <  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  <  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
314	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  <  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  <  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  <  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
315	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  Len  =  text.length();  }  [CE]  cannot  find  symbol  Len  [FE]          ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  Len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  Len  =  text.length();  }	  	non-compiled	[CE]  cannot  find  symbol  Len	73	None	add
316	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	41	None	replace
317	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	41	None	replace
318	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	41	None	replace
319	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	41	None	replace
320	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	add
321	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	add
322	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  Len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  Len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    Len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	65	None	add
323	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	add
324	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	add
325	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  int  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  int  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    int  len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  ';'  expected	65	None	add
326	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
327	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  =  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    =    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }	  len    -=    amount    +    1;    _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	70	1	replace
329	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }	  len    -=    amount    +    1;    _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	70	1	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  offset++;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  offset++;  }	  len    -=    amount    +    1;    _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	70	1	replace
331	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  offset++;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  offset++;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  offset++;  }	  len    -=    amount    +    1;    _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	70	1	replace
332	[BUG]  [BUGGY]  ((  _outputTail  -=  amount));  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount));	  _outputTail    -=    amount;    ((    _outputTail    -=    amount);    	non-compiled	[CE]  not  a  statement	49	None	replace
333	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    4;    len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
334	[BUG]  [BUGGY]  len  -=  amount  *  4;  len  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
335	[BUG]  [BUGGY]  len  -=  amount  *  4;  Len  -=  amount  *  4;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  Len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    Len  -=  amount  *  4;	  	non-compiled	[CE]  cannot  find  symbol  Len	20	None	add
336	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    4;    _flushBuffer();  len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
337	[BUG]  [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  len  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    _flushBuffer();  len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
338	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  offset  +=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    4;    _flushBuffer();  offset  +=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
339	[BUG]  [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  offset  +=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _flushBuffer();  offset  +=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    _flushBuffer();  offset  +=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
340	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	offset  +=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
341	[BUG]  [BUGGY]  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	offset  +=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
342	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_flushBuffer();  offset  +=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
343	[BUG]  [BUGGY]  _flushBuffer();  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_flushBuffer();  offset  +=  amount  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
344	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_flushBuffer();  offset  +=  len  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
345	[BUG]  [BUGGY]  _flushBuffer();  offset  +=  len  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _flushBuffer();  offset  +=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_flushBuffer();  offset  +=  len  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
346	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  offset  +=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	offset  +=  len  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
347	[BUG]  [BUGGY]  offset  +=  len  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  offset  +=  len  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	offset  +=  len  +  1;	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
348	[BUG]  [BUGGY]  int  len  -=  amount  +  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  int  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	int  len  -=  amount  +  1;	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
349	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
350	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
351	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  System.arraycopy(_outputBuffer,  offset,  len,  _outputTail,  _outputTail);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  System.arraycopy(_outputBuffer,  offset,  len,  _outputTail,  _outputTail);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  System.arraycopy(_outputBuffer,  offset,  len,  _outputTail,  _outputTail);  }	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
352	[BUG]  [BUGGY]  int  len  -=  amount  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  int  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	int  len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    int    len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  ';'  expected	29	None	replace
353	[BUG]  [BUGGY]  int  len  -=  amount  *  SHORT_WRITE  +  1;  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  int  len  -=  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	int  len  -=  amount  *  SHORT_WRITE  +  1;	  len    -=    amount    *    SHORT_WRITE;    int    len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  ';'  expected	29	None	replace
354	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  len));  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  len));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount;  ((  _outputTail  -=  len));	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
355	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -  offset));  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -  offset));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount;  ((  _outputTail  -  offset));	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
356	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  =  amount  +  1;	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	66	1	replace
357	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  =  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  =  amount  +  1;	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	66	1	replace
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
359	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
360	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	66	None	replace
361	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	non-compiled	[CE]  ')'  expected	66	None	replace
362	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
363	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
364	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
365	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  amount;  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0,  _outputHead);  _outputTail  =  amount;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
366	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
367	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
368	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
369	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
370	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
371	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  _outputTail  +=  amount;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  +  1;  _outputTail  +=  amount;	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
373	[BUG]  [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  1;  _outputTail  +=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  +  1;  _outputTail  +=  amount;	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
374	[BUG]  [BUGGY]  len  -=  amount  *  1;  int  len  -=  amount  *  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  int  len  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    int  len  -=  amount  *  1;	  	non-compiled	[CE]  ';'  expected	47	None	add
375	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _outputTail  =  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    1;    _outputTail  =  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
376	[BUG]  [BUGGY]  len  -=  amount  *  1;  _outputTail  =  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  1;  _outputTail  =  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    1;    _outputTail  =  amount  *  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	47	1	add
377	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
378	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
379	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
380	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
381	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
382	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
383	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
384	[BUG]  [BUGGY]  len  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
385	[BUG]  [BUGGY]  ((  _outputTail  -=  amount)  >=  0);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount)  >=  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount)  >=  0);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount);    	non-compiled	[CE]  not  a  statement	49	None	replace
386	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }  [CE]  ')'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }	  _outputTail    -=    amount;    ((    _outputTail    -=    amount);    	non-compiled	[CE]  ')'  expected	49	None	replace
387	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  [CE]  ')'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =	  _outputTail    -=    amount;    ((    _outputTail    -=    amount);    	non-compiled	[CE]  ')'  expected	49	None	replace
388	[BUG]  [BUGGY]  _outputTail  -=  offset;  ((  _outputTail  -=  offset;  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  ((  _outputTail  -=  offset;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    ((  _outputTail  -=  offset;	  	non-compiled	[CE]  ')'  expected	67	None	add
389	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  =  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE    +    1;    _outputTail  =  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
390	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  =  amount  *  SHORT_WRITE  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  =  amount  *  SHORT_WRITE  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    _outputTail  =  amount  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
391	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  int  len  =  text.length();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	18	None	add
392	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(_outputTail  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
393	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
394	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >=  _outputEnd)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
395	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
396	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >=  0)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >=  0)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
397	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >=  0)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >=  0)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
398	[BUG]  [BUGGY]  Len  -=  amount  *  3;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  3;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
399	[BUG]  [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alloc  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+alloc,  _outputBuffer,  0);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	40	None	replace
400	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	40	None	replace
401	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	non-compiled	[CE]  ';'  expected	3	None	replace
402	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  int  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    int    _outputTail    -=    amount;    	non-compiled	[CE]  ';'  expected	3	None	replace
403	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
404	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
405	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
406	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
407	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
408	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
410	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  >  room)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
411	[BUG]  [BUGGY]  len  -=  amount  *  2;  int  len  -=  amount  *  2;  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  int  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    int  len  -=  amount  *  2;	  	non-compiled	[CE]  ';'  expected	16	None	add
412	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len  -=  amount  *  4  +  1;	  len    -=    amount    *    4;    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	1	replace
413	[BUG]  [BUGGY]  len  -=  amount  *  4  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  4  +  1;	  len    -=    amount    *    4;    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	1	replace
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  +=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    amount    +    2;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
415	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  +=  amount  +  2;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  2;  _outputTail  +=  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    2;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	37	1	add
416	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
417	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  +=  len;  [CE]  illegal  start  of  type  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  +=  len;	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
418	[BUG]  [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;  }  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    ((  _outputTail  -=  len)  <  <  4)|((  _outputHead  >  5)&&(_outputTail  >  5))  {  _outputTail  -=  len;  }	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
419	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	39	None	replace
420	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	39	None	replace
421	[BUG]  [BUGGY]  len  -=  amount  /  SHORT_WRITE;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  /  SHORT_WRITE;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    /    SHORT_WRITE;    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	14	None	add
422	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        len    -=    amount    +    1;    _outputTail  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
423	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  len  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  _outputTail  -=  amount  +  1;  len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    _outputTail  -=  amount  +  1;  len  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
424	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(amount  >=  SHORT_WRITE)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        len    -=    amount    +    1;    if(amount  >=  SHORT_WRITE)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
425	[BUG]  [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(amount  >=  SHORT_WRITE)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    len  -=  amount  +  1;  if(amount  >=  SHORT_WRITE)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        len    -=    amount    +    1;    if(amount  >=  SHORT_WRITE)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	add
426	[BUG]  [BUGGY]  len  -=  amount  *  3;  int  len  -=  amount  *  3;  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  int  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    int  len  -=  amount  *  3;	  	non-compiled	[CE]  ';'  expected	59	None	add
427	[BUG]  [BUGGY]  len  -=  amount  *  4;  int  len  -=  amount  *  4;  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  int  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    int  len  -=  amount  *  4;	  	non-compiled	[CE]  ';'  expected	20	None	add
428	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
429	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
430	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    int  len  =  text.length();  _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	50	None	add
431	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  SHORT_WRITE  +  1;  Len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    Len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	24	None	replace
432	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  2;  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  2;  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len  -=  amount  *  SHORT_WRITE  +  2;  Len  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    Len    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	24	None	replace
433	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
434	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
435	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
436	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
437	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	54	1	replace
438	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	54	1	replace
439	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  length;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  length;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  length	54	None	replace
440	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  level;  }  [CE]  cannot  find  symbol  level  [FE]        ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  level;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  level;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  level	54	None	replace
441	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  >  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  >  expected	75	None	replace
442	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
443	[BUG]  [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
444	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
445	[BUG]  [BUGGY]  Len  -=  amount  +  4;  [CE]  cannot  find  symbol  Len  [FE]                      AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  +  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  +  4;	  Len    -=    amount    +    3;    	non-compiled	[CE]  cannot  find  symbol  Len	32	None	replace
446	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
447	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	12	1	replace
448	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  else  {  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  else  {  offset  +=  length;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  else  {  offset  +=  length;  }	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
449	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
450	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
451	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
452	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [FE]  IndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
453	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    int  len  =  text.length();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	22	None	add
454	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  Len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	22	None	add
455	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  int  len  -=  amount  +  1;  _flushBuffer();  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  int  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    int  len  -=  amount  +  1;  _flushBuffer();	  	non-compiled	[CE]  ';'  expected	69	None	add
456	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
457	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	57	1	add
458	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [CE]  ')'  expected  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ')'  expected	57	None	add
459	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  _outputHead  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE  +  1;  _outputHead  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	51	None	replace
460	[BUG]  [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
461	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
462	[BUG]  [BUGGY]  if(len  <  =  _outputMaxContiguous)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  _outputMaxContiguous)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  _outputMaxContiguous)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
463	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
464	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    +=    amount;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayStoreException  	53	1	add
465	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
466	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
467	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
468	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
469	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputTail  -=  amount;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	78	None	replace
470	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
471	[BUG]  [BUGGY]  if(amount  >  room)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  room)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	78	1	replace
472	[BUG]  [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  room)+  1);  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount;  ((  _outputTail  -=  room)+  1);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount;  ((  _outputTail  -=  room)+  1);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount)    +    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
473	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
474	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  int  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }	  len    -=    amount    +    1;    int    len    -=    amount    +    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
476	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
477	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	non-compiled	[CE]  not  a  statement	66	None	replace
478	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	61	None	add
479	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	61	None	add
480	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	61	None	add
481	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	61	None	add
482	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset  +=  length;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  offset  +=  length;  }	  len    -=    amount    +    1;    _flushBuffer();    len    -=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
483	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
484	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	55	1	add
485	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    int  len  =  text.length();  _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	27	None	add
486	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
487	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(_outputTail  >  room)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
488	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  Len  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  Len  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  Len  -=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Len	25	None	add
489	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _flushBuffer();  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _flushBuffer();    len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  _flushBuffer();  len  -=  amount  *  SHORT_WRITE	  	non-compiled	[CE]  ';'  expected	25	None	add
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
491	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
493	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _flushBuffer();    if(_outputTail  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
495	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(_outputTail  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(_outputTail  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
496	[BUG]  [BUGGY]  _writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writeRawLong(text);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writeRawLong(text);	          _flushBuffer();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
497	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1));  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    ((  _outputTail  -=  amount  +  1));	  	non-compiled	[CE]  not  a  statement	33	None	add
498	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE  +  1;  _outputTail  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	28	None	replace
499	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >=  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >=  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
500	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >=  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  if(len  >=  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    if(len  >=  room)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  	compilable	  [FE]  ArrayStoreException  	73	1	add
501	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  Len  -=  amount  +  1;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  Len  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  Len  -=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	9	None	add
502	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  *  1;	  _outputTail    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
503	[BUG]  [BUGGY]  _outputTail  -=  amount  *  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  *  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  *  1;	  _outputTail    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	replace
504	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
505	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
506	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
507	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  +=  amount;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
508	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  =  0;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
509	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  _outputTail  =  0;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
510	[BUG]  [BUGGY]  Len  -=  amount  +  1;  _flushBuffer();  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  +  1;  _flushBuffer();	  len    -=    amount    +    1;    _flushBuffer();    	non-compiled	[CE]  cannot  find  symbol  Len	70	None	replace
511	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
512	[BUG]  [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
513	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
514	[BUG]  [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]      ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    amount);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	56	1	replace
515	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
516	[BUG]  [BUGGY]  len  -=  amount  +  2;  _outputTail  =  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	45	1	add
517	[BUG]  [BUGGY]          _flushBuffer();  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
518	[BUG]  [BUGGY]          _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
519	[BUG]  [BUGGY]          _flushBuffer();  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
520	[BUG]  [BUGGY]          _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
522	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
524	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
525	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
526	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
527	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
528	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  offset  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	61	1	add
529	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  0)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
530	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
531	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
532	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  }	  _outputTail    -=    amount;    if(_outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	77	1	replace
533	[BUG]  [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  offset;  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  offset;  _outputTail  -=  offset;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    offset;    _outputTail  -=  offset;  }	  	non-compiled	[CE]  <identifier>  expected	67	None	add
534	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
535	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
536	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
537	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
538	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _flushBuffer();  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
539	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
540	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  offset;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    -=    offset;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
541	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  /  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail  -=  amount  /  2;	  _outputTail    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	replace
542	[BUG]  [BUGGY]  _outputTail  -=  amount  /  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  /  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail  -=  amount  /  2;	  _outputTail    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	replace
543	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
544	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
545	[BUG]  [BUGGY]  while(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  while(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	while(len  >  room)  {  for(int  i  =  start;  i  <  len;  ++i)  {  text.getChars(offset,  offset+i,  _outputBuffer,  0);  }	  if(len    >    room)    {    for(int    i    =    start;    i    <    len;    ++i)    {    text.getChars(offset,    offset+i,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	75	None	replace
546	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  if(len  >  room)  {  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    if(len  >  room)  {  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
547	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  if(len  >  room)  {  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    len  -=  amount  *  SHORT_WRITE;  if(len  >  room)  {  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        len    -=    amount    *    SHORT_WRITE;    if(len  >  room)  {  len  -=  amount  *  SHORT_WRITE;  len  -=  amount  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
548	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputHead    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	51	None	replace
549	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	39	None	replace
550	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  _outputBuffer.length)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  _outputBuffer.length)  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  _outputBuffer.length)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	39	None	replace
551	[BUG]  [BUGGY]  _outputTail  -=  len;  if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  -=  len;  }  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  -=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  -=  len;  }	  	non-compiled	[CE]  	35	None	add
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    len;    if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
553	[BUG]  [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail    -=    len;    if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
555	[BUG]  [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
556	[BUG]  [BUGGY]  _outputTail  -=  len;  if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  len;  if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    len;    if(_outputTail  -=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  	35	None	add
557	[BUG]  [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [CE]  <identifier>  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _outputTail  +=  amount  +  1;  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _outputTail    +=    amount    +    1;    len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	63	None	add
558	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputHead  =  _outputEnd;  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    4;    _outputHead  =  _outputEnd;  len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
559	[BUG]  [BUGGY]  len  -=  amount  *  4;  _outputHead  =  _outputEnd;  len  -=  amount  *  4;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  4;  _outputHead  =  _outputEnd;  len  -=  amount  *  4;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    4;    _outputHead  =  _outputEnd;  len  -=  amount  *  4;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	add
560	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
561	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	11	1	add
562	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [CE]  <identifier>  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    offset    +=    amount    +    1;    len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	11	None	add
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
564	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  len    -=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
565	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _flushBuffer();  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
566	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _flushBuffer();  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
567	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
568	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }  else  {  _outputHead  =  0;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
569	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  _outputTail  -=  len;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
570	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  -=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  _outputTail  -=  len;  }	  _outputTail    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
571	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
572	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputTail    -=    amount    *    SHORT_WRITE;    _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
573	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
574	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    _flushBuffer();  len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
575	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _writer.write(text);  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    _writer.write(text);  len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
576	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _writer.write(text);  len  -=  amount  +  1;  _flushBuffer();  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  _writer.write(text);  len  -=  amount  +  1;  _flushBuffer();  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    _writer.write(text);  len  -=  amount  +  1;  _flushBuffer();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	69	1	add
577	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
578	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  len    -=    amount    +    1;    len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
579	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _outputHead  =  _outputEnd;  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    3;    _outputHead  =  _outputEnd;  len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
580	[BUG]  [BUGGY]  len  -=  amount  *  3;  _outputHead  =  _outputEnd;  len  -=  amount  *  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  3;  _outputHead  =  _outputEnd;  len  -=  amount  *  3;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    3;    _outputHead  =  _outputEnd;  len  -=  amount  *  3;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
581	[BUG]  [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  len    -=    amount    *    SHORT_WRITE;    _outputTail    -=    amount    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	28	None	replace
582	[BUG]  [BUGGY]  _writer.write(text,  offset+alpha,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alpha  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  offset+alpha,  _outputBuffer,  0);	          _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alpha	40	None	replace
583	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output	  len    -=    amount    +    1;    _flushBuffer();    	non-compiled	[CE]  not  a  statement	70	None	replace
584	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output	  len    -=    amount    +    1;    _flushBuffer();    	non-compiled	[CE]  not  a  statement	70	None	replace
585	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  not  a  statement  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
586	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  not  a  statement  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  ((  _outputTail  -=  amount));  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  _outputTail    -=    amount;    ((    _outputTail    -=    amount));    	non-compiled	[CE]  not  a  statement	4	None	replace
587	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
588	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
589	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
590	[BUG]  [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    +    1;    _flushBuffer();  len  -=  amount  +  1;  if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        +        1;        _flushBuffer();    len    -=    amount    +    1;    if(len  >  room)  {  len  -=  amount  +  1;  _flushBuffer();  len  -=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
591	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputHead  =  _outputEnd;  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    2;    _outputHead  =  _outputEnd;  len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
592	[BUG]  [BUGGY]  len  -=  amount  *  2;  _outputHead  =  _outputEnd;  len  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  2;  _outputHead  =  _outputEnd;  len  -=  amount  *  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    2;    _outputHead  =  _outputEnd;  len  -=  amount  *  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	add
593	[BUG]  [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  len  -=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output	  len    -=    amount    +    1;    _outputTail    +=    amount    +    1;    	non-compiled	[CE]  not  a  statement	64	None	replace
594	[BUG]  [BUGGY]  ((  _outputTail  -=  amount)>  0);  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  ((  _outputTail  -=  amount)>  0);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	((  _outputTail  -=  amount)>  0);	  _outputTail    -=    amount;    ((    _outputTail    -=    amount);    	non-compiled	[CE]  not  a  statement	49	None	replace
595	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
596	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [FE]  ArrayStoreException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayStoreException  	58	1	replace
597	[BUG]  [BUGGY]  if(len  <  =  0)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  0)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  0)  {  len  -=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  }	  len    -=    amount    +    1;    _flushBuffer();    offset    +=    amount    +    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
598	[BUG]  [BUGGY]  Len  -=  amount  /  2;  [CE]  cannot  find  symbol  Len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount  /  2;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount  /  2;	  len    -=    amount    /    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Len	15	None	replace
599	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
600	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	41	None	replace
601	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
602	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  >  0)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }	  _outputTail    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
603	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputHead  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputHead  -=  amount  +  1;	  len    -=    amount    +    1;    Len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
604	[BUG]  [BUGGY]  _outputHead  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputHead  -=  amount  +  1;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputHead  -=  amount  +  1;	  len    -=    amount    +    1;    Len    -=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
605	[BUG]  [BUGGY]  Len  -=  amount;  [CE]  cannot  find  symbol  Len  [FE]                  AssertionFailedError      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  Len  -=  amount;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	Len  -=  amount;	  Len    -=    amount    *    1;    	non-compiled	[CE]  cannot  find  symbol  Len	71	None	replace
606	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE);  [CE]  not  a  statement  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE);	  	non-compiled	[CE]  not  a  statement	33	None	add
607	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1))  >  0;  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1))  >  0;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    ((  _outputTail  -=  amount  +  1))  >  0;	  	non-compiled	[CE]  not  a  statement	33	None	add
608	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE));  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail  -=  amount  +  1;  ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE));  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail    -=    amount    +    1;    ((  _outputTail  -=  amount  +  1)  *  SHORT_WRITE));	  	non-compiled	[CE]  not  a  statement	33	None	add
609	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
610	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	          if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	44	None	replace
611	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
612	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
613	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
614	[BUG]  [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len        -=        amount        *        SHORT_WRITE;        _outputHead    -=    amount    *    SHORT_WRITE;    _outputHead  -=  amount  *  SHORT_WRITE;  _outputTail  -=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	50	1	add
615	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	replace
616	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [FE]  StringIndexOutOfBoundsException  [FE]    ArrayStoreException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset  +  1,  _outputBuffer,  _outputTail,  amount);  len  =  text.length();  }	  if(len    >    room)    {    System.arraycopy(text,    offset    +    1,    _outputBuffer,    _outputTail,    amount);    len    =    text.length();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	replace
617	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  amount);  len  -=  amount  *  SHORT_WRITE  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	len    -=    amount    *    SHORT_WRITE    +    1;    if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  amount);  len  -=  amount  *  SHORT_WRITE  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
618	[BUG]  [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  amount);  len  -=  amount  *  SHORT_WRITE  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  len  -=  amount  *  SHORT_WRITE  +  1;  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  amount);  len  -=  amount  *  SHORT_WRITE  +  1;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	len    -=    amount    *    SHORT_WRITE    +    1;    if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  amount);  len  -=  amount  *  SHORT_WRITE  +  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	18	1	add
619	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer);  [CE]  no  suitable  method  found  for  write(String,int,int,char[])  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer);  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_writer.write(text,  0,  len,  _outputBuffer);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[])	62	None	replace
620	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
621	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	add	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
623	[BUG]  [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;      [BUGGY]  _outputTail    -=    amount;    _outputTail  -=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	491	491	1	replace	_outputTail        -=        amount;        _outputTail    -=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  -=  amount;  _outputTail  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
