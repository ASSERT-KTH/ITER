bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ",  len);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,int)  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value ",  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite( "write  text  value ",  len);	  _verifyValueWrite(   "write    text    value   ");    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,int)	2	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value. ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_verifyValueWrite( "write  text  value. ");	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
3	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value. ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value. ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite( "write  text  value. ");	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value "  +  text);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_verifyValueWrite( "write  text  value "  +  text);	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
5	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value "  +  text);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value "  +  text);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite( "write  text  value "  +  text);	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
6	[BUG]  [BUGGY]  _writeRawLong(text,  len);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text,  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text,  len);	  _writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
7	[BUG]  [BUGGY]  _writeRawLong(text,  offset);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text,  offset);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text,  offset);	  _writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
8	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
9	[BUG]  [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
10	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	13	None	replace
11	[BUG]  [BUGGY]  _flushBuffer(amount);  [CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _flushBuffer(amount);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_flushBuffer(amount);	  _flushBuffer(buffer);    	non-compiled	[CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	7	None	replace
12	[BUG]  [BUGGY]  _flushBuffer(len);  [CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _flushBuffer(len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_flushBuffer(len);	  _flushBuffer(buffer);    	non-compiled	[CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	7	None	replace
13	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  len);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
14	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  offset);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  offset);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
15	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  _outputBuffer);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  _outputBuffer);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
17	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
19	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
20	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	10	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
22	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
24	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
25	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	8	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
27	[BUG]  [BUGGY]      _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
28	[BUG]  [BUGGY]      _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        _writer.write(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	5	None	add
29	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
30	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
31	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  0))  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))))  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))))  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( "write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( "write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
35	[BUG]  [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( "write  text  value   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( "write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( "write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ",write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( ",write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
37	[BUG]  [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ",write  text  value   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ",write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( ",write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
38	[BUG]  [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( "write  text  value "));  [CE]  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( "write  text  value "));  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( "write  text  value "));	  	non-compiled	[CE]  	1	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
40	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
42	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
43	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;	  	non-compiled	[CE]  ';'  expected	12	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ".write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( ".write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
45	[BUG]  [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ".write  text  value   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite(   "write  text  value   ");  _verifyValueWrite( ".write  text  value   ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite(   "write    text    value   ");    _verifyValueWrite( ".write  text  value   ");	  	compilable	  [FE]  AssertionFailedError  	1	1	add
46	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      if(len  >  room)  {  _outputTail  +=  amount;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	        if(len  >  room)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
47	[BUG]  [BUGGY]      if(len  >  room)  {  _outputTail  +=  amount;  }  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      if(len  >  room)  {  _outputTail  +=  amount;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        if(len  >  room)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      _writer.write(text);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	        _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
49	[BUG]  [BUGGY]      _writer.write(text);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      _writer.write(text);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
50	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  ';'  expected	12	None	add
51	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ",  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,char[],int)  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value ",  _outputBuffer,  0);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite( "write  text  value ",  _outputBuffer,  0);	  _verifyValueWrite(   "write    text    value   ");    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,char[],int)	2	None	replace
52	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ",  _outputBuffer,  len);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,char[],int)  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _verifyValueWrite( "write  text  value ",  _outputBuffer,  len);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_verifyValueWrite( "write  text  value ",  _outputBuffer,  len);	  _verifyValueWrite(   "write    text    value   ");    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,char[],int)	2	None	replace
53	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  _outputTail);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  _outputTail);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
54	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  _outputHead  >  0))  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  safeOutputEnd))  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    If(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	8	None	add
57	[BUG]  [BUGGY]  _flushBuffer(offset);  [CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _flushBuffer(offset);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_flushBuffer(offset);	  _flushBuffer(buffer);    	non-compiled	[CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	7	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  AssertionFailedError  	13	1	replace
59	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	compilable	  [FE]  AssertionFailedError  	13	1	replace
60	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	9	1	replace
62	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  >=  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	9	1	replace
63	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
64	[BUG]  [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
65	[BUG]  [BUGGY]      if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]      if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	        if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
66	[BUG]  [BUGGY]  _flushBuffer(text);  [CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _flushBuffer(text);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_flushBuffer(text);	  _flushBuffer(buffer);    	non-compiled	[CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	7	None	replace
67	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
68	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputTail  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	9	None	replace
69	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  anchor  [FE]        AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  anchor	9	None	replace
70	[BUG]  [BUGGY]  _writer.writeRawLong(text,  length);  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  length);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  length);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
71	[BUG]  [BUGGY]  _writer.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.writeRawLong(text,  amount);  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.writeRawLong(text,  amount);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
72	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead)>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputHead)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	||(amount  <  SHORT_WRITE  &&  _outputHead)>  _outputEnd)  {  _flushBuffer();  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.write( "write  text  value ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	add	_writer.write( "write  text  value ");	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
74	[BUG]  [BUGGY]  _writer.write( "write  text  value ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writer.write( "write  text  value ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writer.write( "write  text  value ");	  _verifyValueWrite(   "write    text    value   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
75	[BUG]  [BUGGY]  _writeRaw( "write  text  value ");  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRaw( "write  text  value ");  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRaw( "write  text  value ");	  _verifyValueWrite(   "write    text    value   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
76	[BUG]  [BUGGY]  _writeRawLong(text.substring(0,  len));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  _writeRawLong(text.substring(0,  len));  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	_writeRawLong(text.substring(0,  len));	  _writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
77	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  <  SHORT_WRITE)  {  _outputBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
78	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  =  0;  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]      AssertionFailedError    [CONTEXT]    _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;    [BUGGY]  if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  =  0;  }  [BUGGY]    offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	489	489	1	replace	if(amount  <  SHORT_WRITE)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  =  0;  }	  if(amount    <    SHORT_WRITE)    {    _flushBuffer();    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	13	None	replace
