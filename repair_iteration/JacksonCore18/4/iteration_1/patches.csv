bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  4;	  _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
2	[BUG]  [BUGGY]  _outputTail  +=  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  4;	  _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  3;	  _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
4	[BUG]  [BUGGY]  _outputTail  +=  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  3;	  _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
5	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  SHORT_WRITE  +  1;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
6	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  SHORT_WRITE  +  1;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
7	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  4;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
8	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  4;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
9	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  2;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
10	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  2;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
11	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  +  3;	  _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
12	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  3;	  _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
13	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  +  4;	  _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
14	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  4;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  4;	  _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
15	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    1;    _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
16	[BUG]  [BUGGY]  _outputTail  +=  1;  _outputTail  +=  1;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
17	[BUG]  [BUGGY]  _outputTail  +=  1;  int  _outputTail  +=  1;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  int  _outputTail  +=  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    int  _outputTail  +=  1;	  	non-compiled	[CE]  ';'  expected	13	None	add
18	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    1;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
19	[BUG]  [BUGGY]  _outputTail  +=  1;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
20	[BUG]  [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  +=  1;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  +=  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    Integer  _outputTail  +=  1;	  	non-compiled	[CE]  ';'  expected	13	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    1;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
22	[BUG]  [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
23	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
24	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
25	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    _outputTail  +=  space  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	5	None	add
26	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    int  _outputTail  +=  room  +  2;	  	non-compiled	[CE]  ';'  expected	5	None	add
27	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
28	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
29	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
30	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
31	[BUG]  [BUGGY]  _outputTail  +=  space;  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  space;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  space;	  _outputTail    +=    length;    	non-compiled	[CE]  cannot  find  symbol  space	10	None	replace
32	[BUG]  [BUGGY]  _outputTail  +=  lineno;  [CE]  cannot  find  symbol  lineno  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  lineno;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  lineno;	  _outputTail    +=    length;    	non-compiled	[CE]  cannot  find  symbol  lineno	10	None	replace
33	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    2;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
34	[BUG]  [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
35	[BUG]  [BUGGY]  _outputTail  +=  2;  int  _outputTail  +=  2;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  int  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    int  _outputTail  +=  2;	  	non-compiled	[CE]  ';'  expected	11	None	add
36	[BUG]  [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  [CE]  cannot  find  symbol  writer  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    _outputTail  +=  2;  this.writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  writer	11	None	add
37	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  +=  2;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  +=  2;	  	non-compiled	[CE]  ';'  expected	11	None	add
38	[BUG]  [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    _outputTail  +=  2;  }  else  {  _outputTail  +=  2;	  	non-compiled	[CE]  illegal  start  of  type	11	None	add
39	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
40	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
41	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    _outputTail  +=  space  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	1	None	add
42	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    int  _outputTail  +=  room  +  1;	  	non-compiled	[CE]  ';'  expected	1	None	add
43	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
44	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
45	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
46	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
47	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  +=  room  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	3	None	add
48	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  space  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  space	3	None	add
49	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Room  [FE]          IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  Room  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  Room	3	None	add
50	[BUG]  [BUGGY]  _outputTail  +=  linen;  [CE]  cannot  find  symbol  linen  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  linen;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  linen;	  _outputTail    +=    len;    	non-compiled	[CE]  cannot  find  symbol  linen	7	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.write(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text);	      	compilable	  [FE]  AssertionFailedError  	9	1	replace
52	[BUG]  [BUGGY]  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.write(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);	      	compilable	  [FE]  AssertionFailedError  	9	1	replace
53	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeRawLong(text);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.write(text,  0,  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,  0,  room);	      	compilable	  [FE]  AssertionFailedError  	9	1	replace
55	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.write(text,  0,  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room);	      	compilable	  [FE]  AssertionFailedError  	9	1	replace
56	[BUG]  [BUGGY]  _writer.writeLong(text);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _writer.writeLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeLong(text);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
57	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	        writeRawLong(text);	  	compilable	  [FE]  StackOverflowError  	8	1	add
58	[BUG]  [BUGGY]      writeRawLong(text);  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	        writeRawLong(text);	  	compilable	  [FE]  StackOverflowError  	8	1	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  1;	  _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
60	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  1;	  _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
61	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
62	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
63	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
64	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
65	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  3;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
66	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  3;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  3;	  _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	4	1	replace
67	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  Integer  _outputTail  +=  room  +  2;  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  Integer  _outputTail  +=  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    Integer  _outputTail  +=  room  +  2;	  	non-compiled	[CE]  ';'  expected	5	None	add
68	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
69	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
70	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('ufffd',  room);	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
71	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd')+  1;  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd')+  1;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('ufffd')+  1;	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
73	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    2;    int  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	11	1	add
75	[BUG]  [BUGGY]  _outputTail  +=  2;  int  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    int  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	11	1	add
76	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	13	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  int  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    1;    int  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
78	[BUG]  [BUGGY]  _outputTail  +=  1;  int  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  int  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    int  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
79	[BUG]  [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    Integer  _outputTail  =  TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	13	None	add
80	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputTail);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    TextUtilities.writeRawLong(text,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	13	None	add
81	[BUG]  [BUGGY]      TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      TextUtilities.writeRawLong(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	        TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	8	None	add
82	[BUG]  [BUGGY]      int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      int  len  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	        int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	8	None	add
83	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
84	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
85	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
86	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      Integer  qlen  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	        Integer  qlen  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
88	[BUG]  [BUGGY]      Integer  qlen  =  text.length();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]      Integer  qlen  =  text.length();  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	        Integer  qlen  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
89	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
90	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  StringIndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
91	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
92	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
93	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
94	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
95	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)	11	None	add
96	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;	  	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)	11	None	add
97	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
98	[BUG]  [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    2;    Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;	  	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	11	None	add
99	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [CE]  not  a  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);	  	non-compiled	[CE]  not  a  statement	1	None	add
100	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;	  	non-compiled	[CE]  not  a  statement	1	None	add
101	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    1;    ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;	  	non-compiled	[CE]  not  a  statement	1	None	add
102	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  not  a  statement	5	None	add
103	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    ((  _outputTail  +  room  +  2)  >  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;	  	non-compiled	[CE]  not  a  statement	5	None	add
104	[BUG]  [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    2;    ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);	  	non-compiled	[CE]  not  a  statement	5	None	add
105	[BUG]  [BUGGY]  _outputTail  +=  Room.SHORT_WRITE;  [CE]  cannot  find  symbol  Room  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  Room.SHORT_WRITE;  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  Room.SHORT_WRITE;	  _outputTail    +=    length;    	non-compiled	[CE]  cannot  find  symbol  Room	10	None	replace
106	[BUG]  [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    Integer  _outputTail  =  text.indexOf('ufffd',  room);	  	non-compiled	[CE]  unclosed  character  literal	13	None	add
107	[BUG]  [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);    [BUGGY]  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [BUGGY]    _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    1;    Integer  _outputTail  =  TextUtilities.writeRaw(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	13	None	add
