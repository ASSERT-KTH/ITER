bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputTail  +=  space  *  SHORT_WRITE;  [CE]  cannot  find  symbol  space  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  space  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  space  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    space    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  space	48	None	replace
2	[BUG]  [BUGGY]          Integer  qlen  =  text.length();  Integer  qlen  =  text.length();  [CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          Integer  qlen  =  text.length();  Integer  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                Integer    qlen    =    text.length();    Integer  qlen  =  text.length();	  	non-compiled	[CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)	87	None	add
3	[BUG]  [BUGGY]          Integer  qlen  =  text.length();  int  qlen  =  text.length();  [CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          Integer  qlen  =  text.length();  int  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                Integer    qlen    =    text.length();    int  qlen  =  text.length();	  	non-compiled	[CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)	87	None	add
4	[BUG]  [BUGGY]          Integer  qlen  =  text.length();  char  qlen  =  text.length();  [CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          Integer  qlen  =  text.length();  char  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                Integer    qlen    =    text.length();    char  qlen  =  text.length();	  	non-compiled	[CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)	87	None	add
5	[BUG]  [BUGGY]          Integer  qlen  =  text.length();  Long  qlen  =  text.length();  [CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          Integer  qlen  =  text.length();  Long  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                Integer    qlen    =    text.length();    Long  qlen  =  text.length();	  	non-compiled	[CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)	87	None	add
6	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
7	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
8	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
9	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
10	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
11	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
12	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	93	None	add
13	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
14	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
15	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
16	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
17	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
18	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
19	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  Math.min(_outputBuffer.length,  room  +  1):  text;	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
20	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('n',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
22	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('n',  room);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('n',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  text.indexOf('n',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
24	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf('n',  room);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf('n',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
26	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
28	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
29	[BUG]  [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	36	None	replace
30	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	36	None	replace
31	[BUG]  [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  room)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  ')'  expected	36	None	replace
32	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	83	None	add
33	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    int  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;	  	non-compiled	[CE]  ';'  expected	83	None	add
34	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	83	None	add
35	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [CE]  cannot  find  symbol  space  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    _outputTail  +=  space  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  space	83	None	add
36	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  space  *  SHORT_WRITE;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  space  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  space  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	83	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  /  1;	  _outputTail    +=    room    *    1;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
38	[BUG]  [BUGGY]  _outputTail  +=  room  /  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  /  1;	  _outputTail    +=    room    *    1;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  -  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  -  1;	  _outputTail    +=    room    *    1;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
40	[BUG]  [BUGGY]  _outputTail  +=  room  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  -  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  -  1;	  _outputTail    +=    room    *    1;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
41	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	63	None	add
42	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  Integer  _outputTail  =  text.indexOf(room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    Integer  _outputTail  =  text.indexOf(room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	63	None	add
43	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  space  +  1;  Integer  _outputTail  =  text.indexOf(room);  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  space  +  1;  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  space  +  1;  Integer  _outputTail  =  text.indexOf(room);	  	non-compiled	[CE]  cannot  find  symbol  space	63	None	add
44	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  int  _outputTail  =  text.indexOf(room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  int  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    int  _outputTail  =  text.indexOf(room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	63	None	add
45	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room));  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room));  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room));	  	non-compiled	[CE]  ';'  expected	63	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	86	1	replace
47	[BUG]  [BUGGY]  Integer  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	86	1	replace
48	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  IndexOutOfBoundsException  	86	1	replace
49	[BUG]  [BUGGY]  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  IndexOutOfBoundsException  	86	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	86	1	replace
51	[BUG]  [BUGGY]  int  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  text.length();	  _outputTail    +=    room    *    SHORT_WRITE;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	86	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  qlen  =  text.length()  +  1;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
53	[BUG]  [BUGGY]  Integer  qlen  =  text.length()  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  qlen  =  text.length()  +  1;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  qlen  =  text.length()  +  2;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
55	[BUG]  [BUGGY]  Integer  qlen  =  text.length()  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  qlen  =  text.length()  +  2;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  qlen  =  text.length();	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
57	[BUG]  [BUGGY]  int  qlen  =  text.length();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  qlen  =  text.length();	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
58	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	85	None	add
59	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  int  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  int  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    int  _outputTail  +=  room  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	85	None	add
60	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	85	None	add
61	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	85	None	add
62	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    _outputTail  +=  1;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
63	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    int  _outputTail  +=  1;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	21	None	add
64	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
65	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  2;  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  2;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    _outputTail  +=  2;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
66	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	21	None	add
67	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
68	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
69	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	89	None	add
70	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
71	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
72	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _writer.write(text);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
73	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _writer.write(text);  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _writer.write(text);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
74	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
75	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
76	[BUG]  [BUGGY]  Integer  _outputTail  +=  room  +  1;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  room  +  1;	  _outputTail    +=    room    +    2;    Integer    _outputTail    +=    room    +    2;    	non-compiled	[CE]  ';'  expected	67	None	replace
77	[BUG]  [BUGGY]  Integer  _outputTail  +=  room  +  2;  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  room  +  2;	  _outputTail    +=    room    +    2;    Integer    _outputTail    +=    room    +    2;    	non-compiled	[CE]  ';'  expected	67	None	replace
78	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
79	[BUG]  [BUGGY]  ((  room  +  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  room  +  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  room  +  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
80	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
81	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
82	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
83	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  1;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
85	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  1;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  1;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
86	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  +=  1;  _outputTail  +=  1;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  +=  1;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    int  _outputTail  +=  1;  _outputTail  +=  1;	  	non-compiled	[CE]  ';'  expected	15	None	add
87	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  offset  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
88	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  offset  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
89	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('ufffd')+  1;  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('ufffd')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('ufffd')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	non-compiled	[CE]  unclosed  character  literal	71	None	replace
90	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf('ufffd')+  1;  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf('ufffd')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf('ufffd')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	non-compiled	[CE]  unclosed  character  literal	71	None	replace
91	[BUG]  [BUGGY]  _outputTail  +=  space  +  2;  [CE]  cannot  find  symbol  space  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  space  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  space  +  2;	  _outputTail    +=    room    +    2;    _outputTail    +=    space    +    2;    	non-compiled	[CE]  cannot  find  symbol  space	25	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,  0,  room  +  1);	  _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
93	[BUG]  [BUGGY]  _writer.write(text,  0,  room  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room  +  1);	  _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
94	[BUG]  [BUGGY]  _writer.write(text,  0,  room  +  1,  text.length());  [CE]  no  suitable  method  found  for  write(String,int,int,int)  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  +  1,  text.length());  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room  +  1,  text.length());	  _writer.write(text,    0,    room);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,int)	55	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  +  2);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,  0,  room  +  2);	  _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
96	[BUG]  [BUGGY]  _writer.write(text,  0,  room  +  2);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  +  2);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room  +  2);	  _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
98	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
99	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	46	1	replace
100	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	46	1	replace
101	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  StackOverflowError  	46	1	replace
102	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  StackOverflowError  	46	1	replace
103	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
104	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
105	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	39	None	add
106	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  _outputTail  +=  room  +  1;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    _outputTail  +=  space  +  1;  _outputTail  +=  room  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	39	None	add
107	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    int  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;	  	non-compiled	[CE]  ';'  expected	39	None	add
108	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  Room  +  1;  [CE]  cannot  find  symbol  Room  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  Room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  Room  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Room	39	None	add
109	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	62	1	replace
110	[BUG]  [BUGGY]  _outputTail  =  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	62	1	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
112	[BUG]  [BUGGY]  int  _outputTail  =  room  +  1;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
114	[BUG]  [BUGGY]  Integer  _outputTail  =  room  +  1;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  AssertionFailedError  	62	1	replace
115	[BUG]  [BUGGY]  _outputTail  +=  room.SHORT_WRITE;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room.SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room.SHORT_WRITE;	  _outputTail    +=    Room.SHORT_WRITE;    	non-compiled	[CE]  int  cannot  be  dereferenced	105	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  SHORT_WRITE;	  _outputTail    +=    Room.SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	105	1	replace
117	[BUG]  [BUGGY]  _outputTail  +=  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  SHORT_WRITE;	  _outputTail    +=    Room.SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	105	1	replace
118	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.length()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.length()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  SHORT_WRITE)?  text.length()  :  SHORT_WRITE;	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.length()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	101	None	replace
119	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.length()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	101	None	replace
120	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
121	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
122	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [CE]  not  a  statement  [FE]                IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
123	[BUG]  [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	76	None	replace
124	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  1;  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	76	None	replace
125	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeRawLong(text,  _outputBuffer,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
127	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room);  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
129	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf(room);  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
131	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
133	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
134	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	84	1	replace
135	[BUG]  [BUGGY]  _outputTail  =  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	84	1	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
137	[BUG]  [BUGGY]  int  _outputTail  =  room  *  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
139	[BUG]  [BUGGY]  Integer  _outputTail  =  room  *  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
140	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
141	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  4;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
142	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  space  *  4;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  space  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    _outputTail  +=  space  *  4;	  	non-compiled	[CE]  cannot  find  symbol  space	7	None	add
143	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
144	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
145	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
146	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
147	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
148	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  5;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  _outputTail  +=  room  *  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    _outputTail  +=  room  *  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
149	[BUG]  [BUGGY]  int  _outputTail  +=  room  +  1;  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  +=  room  +  1;	  _outputTail    +=    room    +    1;    int    _outputTail    +=    room    +    1;    	non-compiled	[CE]  ';'  expected	42	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
151	[BUG]  [BUGGY]  _writer.write(text);  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	51	1	add
152	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }	  	non-compiled	[CE]  ';'  expected	51	None	add
153	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }	  	non-compiled	[CE]  ';'  expected	51	None	add
154	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder().append(text);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder().append(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder().append(text);  }	  	non-compiled	[CE]  ';'  expected	51	None	add
155	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }	  	non-compiled	[CE]  ';'  expected	51	None	add
156	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  2  +  1;	  _outputTail    +=    room    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	10	1	replace
157	[BUG]  [BUGGY]  _outputTail  +=  room  *  2  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  2  +  1;	  _outputTail    +=    room    *    2;    	compilable	  [FE]  IndexOutOfBoundsException  	10	1	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  /  2;	  _outputTail    +=    room    *    2;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
159	[BUG]  [BUGGY]  _outputTail  +=  room  /  2;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  /  2;	  _outputTail    +=    room    *    2;    	compilable	  [FE]  AssertionFailedError  	10	1	replace
160	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  StackOverflowError  	90	1	replace
161	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  StackOverflowError  	90	1	replace
162	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  IndexOutOfBoundsException  	90	1	replace
163	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  IndexOutOfBoundsException  	90	1	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
165	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
166	[BUG]  [BUGGY]  int  _outputTail  +=  room  *  SHORT_WRITE;  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  +=  room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    +=    room    *    SHORT_WRITE;    	non-compiled	[CE]  ';'  expected	47	None	replace
167	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    +=    room    *    SHORT_WRITE;    	non-compiled	[CE]  ';'  expected	47	None	replace
168	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
169	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
170	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  int  _outputTail  +=  2;  _outputTail  +=  2;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  int  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    int  _outputTail  +=  2;  _outputTail  +=  2;	  	non-compiled	[CE]  ';'  expected	33	None	add
171	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
172	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
173	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  3;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
174	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  3;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
175	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
176	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  4;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	33	1	add
177	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
178	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    int  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  2;	  	non-compiled	[CE]  ';'  expected	68	None	add
179	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  space  +  2;  int  _outputTail  =  room  +  2;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  space  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    _outputTail  +=  space  +  2;  int  _outputTail  =  room  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	68	None	add
180	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    int  _outputTail  =  room  +  2;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
181	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  2;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
182	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
183	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
184	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  1;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	29	None	add
185	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  1;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  space  +  2;  _outputTail  +=  room  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	29	None	add
186	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
187	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  2;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
188	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
189	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
190	[BUG]  [BUGGY]  _outputTail  +=  space  +  1;  [CE]  cannot  find  symbol  space  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  space  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  space  +  1;	  _outputTail    +=    room    +    1;    _outputTail    +=    space    +    1;    	non-compiled	[CE]  cannot  find  symbol  space	41	None	replace
191	[BUG]  [BUGGY]  _outputTail  +=  len  +  1;  [CE]  cannot  find  symbol  len  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  len  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  len  +  1;	  _outputTail    +=    room    +    1;    _outputTail    +=    space    +    1;    	non-compiled	[CE]  cannot  find  symbol  len	41	None	replace
192	[BUG]  [BUGGY]  _outputTail  +=  size  +  1;  [CE]  cannot  find  symbol  size  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  size  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  size  +  1;	  _outputTail    +=    room    +    1;    _outputTail    +=    space    +    1;    	non-compiled	[CE]  cannot  find  symbol  size	41	None	replace
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  /  3;	  _outputTail    +=    room    *    3;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
194	[BUG]  [BUGGY]  _outputTail  +=  room  /  3;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  /  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  /  3;	  _outputTail    +=    room    *    3;    	compilable	  [FE]  AssertionFailedError  	66	1	replace
195	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    writeRawLong(text);	  	compilable	  [FE]  StackOverflowError  	57	1	add
196	[BUG]  [BUGGY]          writeRawLong(text);  writeRawLong(text);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    writeRawLong(text);	  	compilable	  [FE]  StackOverflowError  	57	1	add
197	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  StackOverflowError  	57	1	add
198	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  StackOverflowError  	57	1	add
199	[BUG]  [BUGGY]          writeRawLong(text);  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _writer.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
200	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  length ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  length ");	  	compilable	  [FE]  StackOverflowError  	57	1	add
201	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  length ");  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  length ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  length ");	  	compilable	  [FE]  StackOverflowError  	57	1	add
202	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _writer.write(text);	  	compilable	  [FE]  StackOverflowError  	57	1	add
203	[BUG]  [BUGGY]          writeRawLong(text);  _writer.write(text);  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _writer.write(text);	  	compilable	  [FE]  StackOverflowError  	57	1	add
204	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  4  +  1;	  _outputTail    +=    room    *    4;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
205	[BUG]  [BUGGY]  _outputTail  +=  room  *  4  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  4  +  1;	  _outputTail    +=    room    *    4;    	compilable	  [FE]  IndexOutOfBoundsException  	8	1	replace
206	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('ufffd',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	non-compiled	[CE]  unclosed  character  literal	106	None	replace
207	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf('ufffd',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	non-compiled	[CE]  unclosed  character  literal	106	None	replace
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('/',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('/',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
209	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('/',  room);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('/',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('/',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
210	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
211	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
212	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
213	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  4;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
214	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
215	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
216	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  +=  room  *  3;  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    int  _outputTail  +=  room  *  3;	  	non-compiled	[CE]  ';'  expected	65	None	add
217	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  space  *  3;  [CE]  cannot  find  symbol  space  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  _outputTail  +=  space  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    _outputTail  +=  space  *  3;	  	non-compiled	[CE]  cannot  find  symbol  space	65	None	add
218	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    4;    _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
219	[BUG]  [BUGGY]  _outputTail  +=  4;  _outputTail  +=  4;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
220	[BUG]  [BUGGY]  _outputTail  +=  4;  int  _outputTail  +=  4;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  int  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    int  _outputTail  +=  4;	  	non-compiled	[CE]  ';'  expected	1	None	add
221	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    4;    _outputTail  +=  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
222	[BUG]  [BUGGY]  _outputTail  +=  4;  _outputTail  +=  5;  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    _outputTail  +=  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
223	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    4;    _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
224	[BUG]  [BUGGY]  _outputTail  +=  4;  _outputTail  +=  3;  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	1	1	add
225	[BUG]  [BUGGY]  _outputTail  +=  4;  _outputBuffer  +=  4;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  _outputBuffer  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    _outputBuffer  +=  4;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	1	None	add
226	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	98	None	replace
227	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)	98	None	replace
228	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  room,  _outputBuffer,  0);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)	98	None	replace
229	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	61	None	add
230	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  int  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  int  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    int  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  ';'  expected	61	None	add
231	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  space  +  1;  int  _outputTail  =  room  +  1;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  space  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    _outputTail  +=  space  +  1;  int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	61	None	add
232	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  int  _outputTail  =  room  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	61	None	add
233	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  room  +  1;  int  _outputTail  =  space  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  _outputTail  +=  room  +  1;  int  _outputTail  =  space  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  =  space  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	61	None	add
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  4;  int  _outputTail  =  text.length();	  _outputTail    +=    2;    int    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	75	1	replace
235	[BUG]  [BUGGY]  _outputTail  +=  4;  int  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  4;  int  _outputTail  =  text.length();	  _outputTail    +=    2;    int    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	75	1	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  3;  int  _outputTail  =  text.length();	  _outputTail    +=    2;    int    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	75	1	replace
237	[BUG]  [BUGGY]  _outputTail  +=  3;  int  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  3;  int  _outputTail  =  text.length();	  _outputTail    +=    2;    int    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	75	1	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('W',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('W',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	70	1	replace
239	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('W',  room);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('W',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('W',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	70	1	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,    0,    room);    _writer.write(text,  0,  room);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
241	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    _writer.write(text,  0,  room);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
242	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text,  0,  room);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text,  0,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text,  0,  room);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
243	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  else  {  _writer.write(text,  0,  room);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  else  {  _writer.write(text,  0,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  else  {  _writer.write(text,  0,  room);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	54	None	add
244	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text,  0,  text.length());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text,  0,  text.length());  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text,  0,  text.length());  }	  	non-compiled	[CE]  ';'  expected	54	None	add
245	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
247	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
248	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  StackOverflowError  	22	1	replace
249	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  StackOverflowError  	22	1	replace
250	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  room);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	81	None	replace
251	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	81	None	replace
252	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  null);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  null);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  null);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	81	None	replace
253	[BUG]  [BUGGY]  Integer  _outputTail  +=  2;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	37	None	replace
254	[BUG]  [BUGGY]  Integer  _outputTail  +=  3;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  3;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	37	None	replace
255	[BUG]  [BUGGY]  Integer  _outputTail  +=  4;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  4;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	37	None	replace
256	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	96	None	replace
257	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)	96	None	replace
258	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	96	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	92	1	replace
260	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	92	1	replace
261	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  space	92	None	replace
262	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
263	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
264	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  space  +  3;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  space  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    _outputTail  +=  space  +  3;	  	non-compiled	[CE]  cannot  find  symbol  space	11	None	add
265	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  +=  room  +  3;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    int  _outputTail  +=  room  +  3;	  	non-compiled	[CE]  ';'  expected	11	None	add
266	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
267	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  4;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
268	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
269	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
270	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
271	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  1;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
272	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
273	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
274	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  int  _outputTail  +=  room  *  1;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  int  _outputTail  +=  room  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    int  _outputTail  +=  room  *  1;	  	non-compiled	[CE]  ';'  expected	59	None	add
275	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  space  *  1;  [CE]  cannot  find  symbol  space  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  space  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    _outputTail  +=  space  *  1;	  	non-compiled	[CE]  cannot  find  symbol  space	59	None	add
276	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
277	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	59	1	add
278	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
279	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
280	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  2;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  space  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  space  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	43	None	add
281	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  1;  _outputTail  +=  room  +  2;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  1;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  space  +  1;  _outputTail  +=  room  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	43	None	add
282	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
283	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
284	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
285	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
286	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  length  *  SHORT_WRITE;  }  [CE]  cannot  find  symbol  length  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  length  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  length  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  length	94	None	replace
287	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  linen;  }  [CE]  cannot  find  symbol  linen  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  linen;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputTail  +=  linen;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  linen	94	None	replace
288	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
289	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  4;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
290	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  space  +  4;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  space  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    _outputTail  +=  space  +  4;	  	non-compiled	[CE]  cannot  find  symbol  space	13	None	add
291	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  +=  room  +  4;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    int  _outputTail  +=  room  +  4;	  	non-compiled	[CE]  ';'  expected	13	None	add
292	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
293	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  5;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  5;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  5;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
294	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
295	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
296	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
297	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
298	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  3;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  space  +  2;  _outputTail  +=  room  +  3;	  	non-compiled	[CE]  cannot  find  symbol  space	27	None	add
299	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  3;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  3;	  	non-compiled	[CE]  cannot  find  symbol  space	27	None	add
300	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
301	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
302	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
303	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  4;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
304	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
305	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
306	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
307	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
308	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  3;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
309	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  3;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
310	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
311	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  3;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
312	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
313	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  2;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  2;  _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
314	[BUG]  [BUGGY]  Integer  _outputTail  +=  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  +=  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
315	[BUG]  [BUGGY]  int  _outputTail  +=  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  +=  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	20	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
317	[BUG]  [BUGGY]  int  _outputTail  =  1;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
318	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeRawLong(text,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeRawLong(text,  room);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
319	[BUG]  [BUGGY]  _writer.writeRawLong(text,  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeRawLong(text,  null);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeRawLong(text,  null);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
320	[BUG]  [BUGGY]  Writer  w  =  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Writer  w  =  _writer.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Writer  w  =  _writer.writeRawLong(text);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  value ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
322	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  value ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  length ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  length ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
324	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  length ");  [FE]  AssertionFailedError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  length ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  length ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  value ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
326	[BUG]  [BUGGY]  _verifyValueWrite( "write  value ");  [FE]  AssertionFailedError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  value ");	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
327	[BUG]  [BUGGY]  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  TextUtilities.writeRaw(text);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	107	None	replace
328	[BUG]  [BUGGY]  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  TextUtilities.writeRawLong(text);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	107	None	replace
329	[BUG]  [BUGGY]  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  TextUtilities.writeRawLong(text);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	107	None	replace
330	[BUG]  [BUGGY]  _outputTail  =  TextUtilities.writeRaw(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  TextUtilities.writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  TextUtilities.writeRaw(text);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	107	None	replace
331	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  1;  TextUtilities.writeRawLong(text,  room);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
332	[BUG]  [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
333	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputBuffer);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
335	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
336	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  StackOverflowError  	30	1	replace
337	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  StackOverflowError  	30	1	replace
338	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  len  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	non-compiled	[CE]  cannot  find  symbol  len	30	None	replace
339	[BUG]  [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  room)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	17	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(_outputTail  >=  room)  {  _outputTail  +=  1;  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
341	[BUG]  [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  room)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  room)  {  _outputTail  +=  1;  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
342	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	non-compiled	[CE]  unclosed  character  literal	97	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('.',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('.',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	97	1	replace
344	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('.',  room);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('.',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('.',  room);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	97	1	replace
345	[BUG]  [BUGGY]  _writer.writeLong(text,  room);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeLong(text,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeLong(text,  room);	  _writer.writeLong(text);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
346	[BUG]  [BUGGY]  _writer.writeLong(text,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeLong(text,  null);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeLong(text,  null);	  _writer.writeLong(text);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
347	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  len  =  text.length()  -  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	82	None	replace
348	[BUG]  [BUGGY]  int  len  =  text.length()  +  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  len  =  text.length()  +  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  len  =  text.length()  +  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	82	None	replace
349	[BUG]  [BUGGY]  char  len  =  text.length();  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  char  len  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	char  len  =  text.length();	          int    len    =    text.length();    	non-compiled	[CE]  possible  loss  of  precision	82	None	replace
350	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  SHORT_WRITE  +  2;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
351	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  SHORT_WRITE  +  2;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
352	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  SHORT_WRITE  +  4;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
353	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  4;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  SHORT_WRITE  +  4;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
354	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  +=  room  *  SHORT_WRITE  +  3;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
355	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  3;  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  *  SHORT_WRITE  +  3;	  _outputTail    +=    room    *    SHORT_WRITE    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	6	1	replace
356	[BUG]  [BUGGY]  _writer.write(text,  null);  [CE]  no  suitable  method  found  for  write(String,<null>)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  null);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  null);	  _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,<null>)	52	None	replace
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
358	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
359	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  StackOverflowError  	40	1	replace
360	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  StackOverflowError  	40	1	replace
361	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  len  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  len;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	non-compiled	[CE]  cannot  find  symbol  len	40	None	replace
362	[BUG]  [BUGGY]  int  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  TextUtilities.writeRawLong(text);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	79	None	replace
363	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  1;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  }	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	79	None	replace
364	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
365	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
366	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  space  *  2;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  space  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    _outputTail  +=  space  *  2;	  	non-compiled	[CE]  cannot  find  symbol  space	9	None	add
367	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  +=  room  *  2;  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    int  _outputTail  +=  room  *  2;	  	non-compiled	[CE]  ';'  expected	9	None	add
368	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
369	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
370	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
371	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  4;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    _outputTail  +=  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
372	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
373	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
374	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
375	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
376	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _writer.write(text);	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
377	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _writer.write(text);  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _writer.write(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _writer.write(text);	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
378	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
379	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
380	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputBuffer();  }  [CE]  cannot  find  symbol  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _outputBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
381	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    _outputTail  +=  1;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	77	None	add
382	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	77	None	add
383	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  int  _outputTail  +=  1;  int  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  int  _outputTail  +=  1;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    int  _outputTail  +=  1;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	77	None	add
384	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  +=  1;  int  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  +=  1;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    Integer  _outputTail  +=  1;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	77	None	add
385	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	77	None	add
386	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
387	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
388	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	23	None	add
389	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  2;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  space  +  2;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  space  +  2;  _outputTail  +=  room  +  2;	  	non-compiled	[CE]  cannot  find  symbol  space	23	None	add
390	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
391	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
392	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    int  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;	  	non-compiled	[CE]  ';'  expected	23	None	add
393	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE    +    1;    _outputTail  +=  room  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
394	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    _outputTail  +=  room  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
395	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  +=  room  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    int  _outputTail  +=  room  *  SHORT_WRITE  +  1;	  	non-compiled	[CE]  ';'  expected	5	None	add
396	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  space  *  SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  space  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    _outputTail  +=  space  *  SHORT_WRITE  +  1;	  	non-compiled	[CE]  cannot  find  symbol  space	5	None	add
397	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  room  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE    +    1;    int  _outputTail  =  room  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
398	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  room  *  SHORT_WRITE  +  1;  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  room  *  SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    int  _outputTail  =  room  *  SHORT_WRITE  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
399	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE    +    1;    _outputTail  +=  room  *  SHORT_WRITE  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
400	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [FE]  IndexOutOfBoundsException  [FE]            IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  _outputTail  +=  room  *  SHORT_WRITE  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    _outputTail  +=  room  *  SHORT_WRITE  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
401	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
402	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
403	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  2)  >=  SHORT_WRITE)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  2)  >=  SHORT_WRITE)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  2)  >=  SHORT_WRITE)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
404	[BUG]  [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
405	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,char[],int)	95	None	replace
406	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,int,char[],Integer)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf(room,  room,  _outputBuffer,  _outputTail);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,int,char[],Integer)	95	None	replace
407	[BUG]  [BUGGY]  int  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	95	None	replace
408	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    3;    _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
409	[BUG]  [BUGGY]  _outputTail  +=  3;  _outputTail  +=  3;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    _outputTail  +=  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
410	[BUG]  [BUGGY]  _outputTail  +=  3;  int  _outputTail  +=  3;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  int  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    int  _outputTail  +=  3;	  	non-compiled	[CE]  ';'  expected	3	None	add
411	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    3;    _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
412	[BUG]  [BUGGY]  _outputTail  +=  3;  _outputTail  +=  4;  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
413	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    3;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
414	[BUG]  [BUGGY]  _outputTail  +=  3;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	3	1	add
415	[BUG]  [BUGGY]  _outputTail  +=  3;  _outputBuffer  +=  3;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  _outputBuffer  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    _outputBuffer  +=  3;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	3	None	add
416	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    _outputTail  +=  2;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	74	None	add
417	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	74	None	add
418	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  int  _outputTail  +=  2;  int  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  int  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    int  _outputTail  +=  2;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	74	None	add
419	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  Integer  _outputTail  +=  2;  int  _outputTail  =  text.length();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  Integer  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    Integer  _outputTail  +=  2;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  ';'  expected	74	None	add
420	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	74	None	add
421	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	72	None	add
422	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  Integer  _outputTail  =  text.indexOf('n',  room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    Integer  _outputTail  =  text.indexOf('n',  room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	72	None	add
423	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  int  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  int  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    int  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);	  	non-compiled	[CE]  ';'  expected	72	None	add
424	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  int  _outputTail  =  text.indexOf('n',  room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  int  _outputTail  =  text.indexOf('n',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    int  _outputTail  =  text.indexOf('n',  room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	72	None	add
425	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('r',  room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('r',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('r',  room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	72	None	add
426	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  room  +  2;	  _outputTail    +=    room    +    2;    int    _outputTail    =    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
427	[BUG]  [BUGGY]  _outputTail  =  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  room  +  2;	  _outputTail    +=    room    +    2;    int    _outputTail    =    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
428	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  room  +  2;	  _outputTail    +=    room    +    2;    int    _outputTail    =    room    +    2;    	compilable	  [FE]  AssertionFailedError  	69	1	replace
429	[BUG]  [BUGGY]  int  _outputTail  =  room  +  2;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  room  +  2;	  _outputTail    +=    room    +    2;    int    _outputTail    =    room    +    2;    	compilable	  [FE]  AssertionFailedError  	69	1	replace
430	[BUG]  [BUGGY]  _outputTail  +=  Room  *  SHORT_WRITE;  [CE]  cannot  find  symbol  Room  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  Room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  Room  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    Room    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Room	49	None	replace
431	[BUG]  [BUGGY]  _outputTail  +=  rooms  *  SHORT_WRITE;  [CE]  cannot  find  symbol  rooms  [FE]                IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  rooms  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  rooms  *  SHORT_WRITE;	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    Room    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  rooms	49	None	replace
432	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
433	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
434	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  [CE]  cannot  find  symbol  space  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  space	45	None	add
435	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [CE]  cannot  find  symbol  space  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  space  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;	  	non-compiled	[CE]  cannot  find  symbol  space	45	None	add
436	[BUG]  [BUGGY]  _outputTail  +=  3;  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	3	None	add
437	[BUG]  [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  +=  3;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  +=  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    Integer  _outputTail  +=  3;	  	non-compiled	[CE]  ';'  expected	3	None	add
438	[BUG]  [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  +=  4;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    Integer  _outputTail  +=  4;	  	non-compiled	[CE]  ';'  expected	1	None	add
439	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    4;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
440	[BUG]  [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  text.length();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    Integer  _outputTail  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
441	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    2;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
442	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
443	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    2;    int  _outputTail  =  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
444	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  room  *  2;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  int  _outputTail  =  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    int  _outputTail  =  room  *  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	9	1	add
445	[BUG]  [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('m',  room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    Integer  _outputTail  =  text.indexOf('n',  room);  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('m',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        Integer    _outputTail    =    text.indexOf('n',    room);    _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('m',  room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	72	None	add
446	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
447	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
448	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
449	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
450	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
451	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
452	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
453	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
454	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _reportUnsupportedOperation();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _reportUnsupportedOperation();	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
455	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _reportUnsupportedOperation();  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _reportUnsupportedOperation();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _reportUnsupportedOperation();	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
456	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  int  room  =  text.length();  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  int  room  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    int  room  =  text.length();	  	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	91	None	add
457	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _writer.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
458	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	85	1	add
459	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	85	1	add
460	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    _outputTail  +=  room  *  SHORT_WRITE;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	85	None	add
461	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
462	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.substring(0,  room  +  1):  text.substring(0,  room  +  1);  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.substring(0,    room    +    1):    text.substring(0,    room    +    1);    	non-compiled	[CE]  not  a  statement	99	None	replace
463	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
464	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  4;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    _outputTail  +=  1;  _outputTail  +=  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	18	1	add
465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('n',  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('n',  room  +  1);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
466	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('n',  room  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('n',  room  +  1);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('n',  room  +  1);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
467	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  [CE]  cannot  find  symbol  space  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    space    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  space	48	None	replace
468	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  [CE]  cannot  find  symbol  space  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    space    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  space	48	None	replace
469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('/')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('/')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
470	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('/')+  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('/')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('/')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(',')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf(',')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
472	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(',')+  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(',')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(',')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('-')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('-')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
474	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('-')+  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('-')+  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('-')+  1;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd')+    1;    	compilable	  [FE]  AssertionFailedError  	71	1	replace
475	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	24	1	replace
476	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	24	1	replace
477	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    2;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
478	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    3;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
479	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
480	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,  0,  room  -  _outputTail);	  _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	replace
481	[BUG]  [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room  -  _outputTail);	  _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	replace
482	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  -  _outputEnd);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_writer.write(text,  0,  room  -  _outputEnd);	  _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	replace
483	[BUG]  [BUGGY]  _writer.write(text,  0,  room  -  _outputEnd);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room  -  _outputEnd);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,  0,  room  -  _outputEnd);	  _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	replace
484	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  IndexOutOfBoundsException  	92	1	replace
485	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  IndexOutOfBoundsException  	92	1	replace
486	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
487	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
488	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room!=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room!=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	46	1	replace
489	[BUG]  [BUGGY]  if(room!=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room!=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room!=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  IndexOutOfBoundsException  	46	1	replace
490	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  space);  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  space);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  space);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  space	81	None	replace
491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(',',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf(',',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
492	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(',',  room);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(',',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(',',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('-',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail  =  text.indexOf('-',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
494	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('-',  room);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('-',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('-',  room);	  _outputTail    +=    1;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    	compilable	  [FE]  AssertionFailedError  	106	1	replace
495	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
496	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
497	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
498	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
499	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
500	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
501	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    SHORT_WRITE    +    1;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
502	[BUG]  [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  SHORT_WRITE  +  1;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    SHORT_WRITE    +    1;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	5	1	add
503	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    3;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
504	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
505	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text.substring(0,  room));  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text.substring(0,  room));  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  StackOverflowError  	90	1	replace
506	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text.substring(0,  room));  }  [FE]  StackOverflowError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text.substring(0,  room));  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text.substring(0,  room));  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  StackOverflowError  	90	1	replace
507	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  }	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	62	1	replace
508	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  =  room  +  1;  }	  _outputTail    +=    room    +    1;    int    _outputTail    =    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	62	1	replace
509	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
510	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
512	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  _flushBuffer();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
514	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  _flushBuffer();  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
515	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
516	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  1;  Integer  _outputBuffer  =  text.length();  [CE]  no  suitable  method  found  for  getChars(int,int,Integer,int)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  _outputTail  +=  1;  Integer  _outputBuffer  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    _outputTail  +=  1;  Integer  _outputBuffer  =  text.length();	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,Integer,int)	21	None	add
517	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
518	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
519	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >  room)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(_outputTail  >  room)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
520	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >  room)  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >  room)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(_outputTail  >  room)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
521	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  room)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  room)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
522	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  room)  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  room)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  room)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
523	[BUG]  [BUGGY]  _writer.writeRawLong(text,  space);  [CE]  cannot  find  symbol  space  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.writeRawLong(text,  space);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.writeRawLong(text,  space);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  space	53	None	replace
524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  int  _outputTail  =  room  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    1;    int  _outputTail  =  room  *  1;	  	compilable	  [FE]  AssertionFailedError  	59	1	add
525	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  int  _outputTail  =  room  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  int  _outputTail  =  room  *  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    int  _outputTail  =  room  *  1;	  	compilable	  [FE]  AssertionFailedError  	59	1	add
526	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  TextUtilities.writeRawLong(text);  _outputTail  +=  2;  int  _outputTail  =  text.length();  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  TextUtilities.writeRawLong(text);  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    TextUtilities.writeRawLong(text);  _outputTail  +=  2;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	74	None	add
527	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    4;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
528	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
529	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    4;    int  _outputTail  =  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
530	[BUG]  [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  room  +  4;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  4;  int  _outputTail  =  room  +  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    4;    int  _outputTail  =  room  +  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	13	1	add
531	[BUG]  [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  4;  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  4;	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	non-compiled	[CE]  unclosed  character  literal	97	None	replace
532	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
533	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
534	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _outputTail  +=  length;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    2;    	non-compiled	[CE]  cannot  find  symbol  length	44	None	replace
535	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
536	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
537	[BUG]  [BUGGY]  _outputTail  +=  text.length;  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  text.length;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  text.length;	  _outputTail    +=    space;    	non-compiled	[CE]  cannot  find  symbol  length	31	None	replace
538	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE	  	non-compiled	[CE]  ';'  expected	45	None	add
539	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }	  	non-compiled	[CE]  ';'  expected	51	None	add
540	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        2;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
541	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	33	1	add
542	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	76	None	replace
543	[BUG]  [BUGGY]  _outputTail  +=  4;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  4;  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	76	None	replace
544	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.length()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	101	None	replace
545	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.length()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	101	None	replace
546	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	17	None	replace
547	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  _flushBuffer();  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	17	None	replace
548	[BUG]  [BUGGY]  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],Integer)	95	None	replace
549	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	writeRaw(text);	          writeRawLong(text);    	compilable	  [FE]  StackOverflowError  	58	1	replace
550	[BUG]  [BUGGY]  writeRaw(text);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	writeRaw(text);	          writeRawLong(text);    	compilable	  [FE]  StackOverflowError  	58	1	replace
551	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_reportUnsupportedOperation();	          writeRawLong(text);    	compilable	  [FE]  UnsupportedOperationException  	58	1	replace
552	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_reportUnsupportedOperation();	          writeRawLong(text);    	compilable	  [FE]  UnsupportedOperationException  	58	1	replace
553	[BUG]  [BUGGY]          Integer  qlen  =  text.length();  Float  qlen  =  text.length();  [CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          Integer  qlen  =  text.length();  Float  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                Integer    qlen    =    text.length();    Float  qlen  =  text.length();	  	non-compiled	[CE]  variable  qlen  is  already  defined  in  method  writeRawLong(String)	87	None	add
554	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
555	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  =  room  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
556	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	93	None	add
557	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE	  	non-compiled	[CE]  ';'  expected	93	None	add
558	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
559	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
560	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT  [CE]  ';'  expected  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT	  	non-compiled	[CE]  ';'  expected	93	None	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
562	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
564	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  4;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  4;  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
566	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  4;  }  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  4;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  4;  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
567	[BUG]  [BUGGY]  _outputTail  +=  Room.SHORT_WRITE  +  1;  [CE]  cannot  find  symbol  Room  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  Room.SHORT_WRITE  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  Room.SHORT_WRITE  +  1;	  _outputTail    +=    Room.SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Room	105	None	replace
568	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
569	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
571	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
572	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
573	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  3;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
575	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  3;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  3;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	38	1	replace
576	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	63	1	add
577	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	63	1	add
578	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  text.indexOf(room);	  	compilable	  [FE]  IndexOutOfBoundsException  	63	1	add
579	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  text.indexOf(room);  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  _outputTail  +=  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    _outputTail  +=  text.indexOf(room);	  	compilable	  [FE]  IndexOutOfBoundsException  	63	1	add
580	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  2;  int  _outputTail  =  text.length();  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  2;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    _outputTail  +=  2;  int  _outputTail  =  text.length();	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	77	None	add
581	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    Integer  _outputTail  =  text.indexOf('ufffd',  room);	  	non-compiled	[CE]  unclosed  character  literal	77	None	add
582	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	98	None	replace
583	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	98	None	replace
584	[BUG]  [BUGGY]  _outputTail  =  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  TextUtilities.writeRawLong(text,  room);	  _outputTail    +=    1;    Integer    _outputTail    =    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	79	None	replace
585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  qlen  =  text.length()  +  room;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
586	[BUG]  [BUGGY]  Integer  qlen  =  text.length()  +  room;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  +  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  qlen  =  text.length()  +  room;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  -  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  qlen  =  text.length()  -  room;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
588	[BUG]  [BUGGY]  Integer  qlen  =  text.length()  -  room;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  qlen  =  text.length()  -  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  qlen  =  text.length()  -  room;	          Integer    qlen    =    text.length();    	compilable	  [FE]  AssertionFailedError  	88	1	replace
589	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
590	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
591	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
592	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
593	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	30	None	replace
594	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
595	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
596	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
597	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
598	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
599	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	36	None	replace
600	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	36	None	replace
601	[BUG]  [BUGGY]  if(room  <  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  _outputEnd)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	36	None	replace
602	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
603	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _verifyValueWrite( "write  text  value ");	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
604	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
605	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
606	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
607	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	89	1	add
608	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }	  _outputTail    +=    2;    int    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	35	None	replace
609	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	96	None	replace
610	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf(room,  _outputBuffer,  _outputTail);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    _outputTail);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	96	None	replace
611	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
612	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
613	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
614	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
615	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _outputTail  +=  length;  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	40	None	replace
616	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  +=  room  *  4;  [CE]  ';'  expected  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  +=  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    int  _outputTail  +=  room  *  4;	  	non-compiled	[CE]  ';'  expected	7	None	add
617	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
618	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  text.length();  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    int  _outputTail  =  text.length();	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
619	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
620	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    int  _outputTail  =  text.length();  _outputTail  +=  room  +  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
621	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  int  _outputTail  =  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	83	None	add
622	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	83	1	add
623	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    int  _outputTail  =  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        int    _outputTail    =    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;	  	compilable	  [FE]  IndexOutOfBoundsException  	83	1	add
624	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    int  _outputTail  =  room  +  1;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        int    _outputTail    =    room    +    1;    Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	61	None	add
625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
626	[BUG]  [BUGGY]  int  _outputTail  =  text.indexOf(room);  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  text.indexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  text.indexOf(room);	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  AssertionFailedError  	64	1	replace
627	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  2;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
628	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  2;  _outputTail  +=  1;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  2;  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  2;  _outputTail  +=  1;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
629	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
630	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  2;  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
632	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  [FE]  AssertionFailedError  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  int  _outputTail  =  text.length();  _outputTail  +=  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    int  _outputTail  =  text.length();  _outputTail  +=  1;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
633	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!_writer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _writer.write(text,  0,  room);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!_writer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _writer.write(text,  0,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!_writer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _writer.write(text,  0,  room);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
634	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
635	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(0,  room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  text.getChars(0,  room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  2;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
637	[BUG]  [BUGGY]  Integer  _outputTail  =  2;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  2;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	int  _outputTail  =  2;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
639	[BUG]  [BUGGY]  int  _outputTail  =  2;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  _outputTail  =  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  _outputTail  =  2;	  _outputTail    +=    2;    Integer    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
640	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    +    3;    int  _outputTail  =  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
641	[BUG]  [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  room  +  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  +  3;  int  _outputTail  =  room  +  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    +    3;    int  _outputTail  =  room  +  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	11	1	add
642	[BUG]  [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    Integer  _outputTail  =  TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	3	None	add
643	[BUG]  [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    Integer  _outputTail  =  text.indexOf('ufffd',  room);	  	non-compiled	[CE]  unclosed  character  literal	3	None	add
644	[BUG]  [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  3;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    3;    Integer  _outputTail  =  TextUtilities.writeRaw(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	3	None	add
645	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    int  _outputTail  =  room  +  2;  Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        int    _outputTail    =    room    +    2;    Integer  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	68	None	add
646	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [CE]  illegal  start  of  expression  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
647	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }  [CE]  illegal  start  of  expression  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
648	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  3;  }  [CE]  illegal  start  of  expression  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  3;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
649	[BUG]  [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  4;  }  [CE]  illegal  start  of  expression  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    _outputTail  +=  2;  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  4;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        _outputTail    +=    2;    if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  4;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
650	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong	  	non-compiled	[CE]  ';'  expected	89	None	add
651	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  >=  SHORT_WRITE)  {  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  >=  SHORT_WRITE)  {  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  >=  SHORT_WRITE)  {  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
652	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  >=  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  if(room  >=  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    if(room  >=  SHORT_WRITE)  {  if(room  >  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
653	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
654	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  }	  	compilable	  [FE]  IndexOutOfBoundsException  	93	1	add
655	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	93	None	add
656	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	non-compiled	[CE]  unclosed  character  literal	97	None	replace
657	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	non-compiled	[CE]  unclosed  character  literal	97	None	replace
658	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  int  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  int  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  2;  int  _outputTail  =  text.indexOf('ufffd',  room);  _outputTail  +=  2;  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('ufffd',    room);    _outputTail    +=    2;    	non-compiled	[CE]  unclosed  character  literal	97	None	replace
659	[BUG]  [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  indexOf(int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  =  text.indexOf(room,  _outputBuffer,  0);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  =  text.indexOf(room,  _outputBuffer,  0);	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf(room,    _outputBuffer,    0);    _outputTail    +=    2;    	non-compiled	[CE]  no  suitable  method  found  for  indexOf(int,char[],int)	98	None	replace
660	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
661	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	39	1	add
662	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  if(room  <  =  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [CE]  illegal  start  of  expression  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  1;  if(room  <  =  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    1;    if(room  <  =  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _flushBuffer();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_flushBuffer();	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	92	1	replace
664	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _flushBuffer();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_flushBuffer();	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	92	1	replace
665	[BUG]  [BUGGY]  if(room  <  SHORT_WITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  SHORT_WITE  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  SHORT_WITE	92	None	replace
666	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
667	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  1;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    1;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	29	1	add
668	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
669	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  Integer  _outputTail  =  text.indexOf('n',  room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    Integer    _outputTail    =    text.indexOf('n',    room);    	compilable	  [FE]  AssertionFailedError  	73	1	replace
670	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text;  [CE]  :  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text;	  	non-compiled	[CE]  :  expected	59	None	add
671	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  not  a  statement	59	None	add
672	[BUG]  [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text.substring(0,  room  *  2);  [CE]  :  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  1;  ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text.substring(0,  room  *  2);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    1;    ((  _outputTail  +  room  *  1)  >=  _outputEnd)?  text.substring(0,  room  *  2),  _outputBuffer,  _outputTail):  text.substring(0,  room  *  2);	  	non-compiled	[CE]  :  expected	59	None	add
673	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  IndexOutOfBoundsException  	90	1	replace
674	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  IndexOutOfBoundsException  	90	1	replace
675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
676	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    writeRawLong(text);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
677	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }  [CE]  cannot  find  symbol  Room  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    Room    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Room	49	None	replace
678	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }  [CE]  cannot  find  symbol  Room  [FE]                IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  Room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    Room    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  Room	49	None	replace
679	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [CE]  cannot  find  symbol  offset  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	51	None	add
680	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  offset  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	51	None	add
681	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  }  [CE]  cannot  find  symbol  offset  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol  offset	51	None	add
682	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  text.length();  }  [CE]  cannot  find  symbol  offset  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  text.length();  }	  	non-compiled	[CE]  cannot  find  symbol  offset	51	None	add
683	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    4;    int  _outputTail  =  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
684	[BUG]  [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  room  *  4;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  4;  int  _outputTail  =  room  *  4;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    4;    int  _outputTail  =  room  *  4;	  	compilable	  [FE]  IndexOutOfBoundsException  	7	1	add
685	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(_outputBuffer.length,  room  +  1):  text;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
686	[BUG]  [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(room,  _outputBuffer.length  +  1):  text;  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(room,  _outputBuffer.length  +  1):  text;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	((  _outputTail  +  room  +  1)  >=  _outputEnd)?  Math.min(room,  _outputBuffer.length  +  1):  text;	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    Math.min(_outputBuffer.length,    room    +    1):    text;    	non-compiled	[CE]  not  a  statement	100	None	replace
687	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeRawLong(_outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeRawLong(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    ((  IndexOutOfBounds)text).writeRawLong(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
688	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeLong(_outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeLong(_outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    ((  IndexOutOfBounds)text).writeLong(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
689	[BUG]  [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeRawLong(room);  _outputTail  +=  room  *  2;  [CE]  cannot  find  symbol  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  2;  ((  IndexOutOfBounds)text).writeRawLong(room);  _outputTail  +=  room  *  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    2;    ((  IndexOutOfBounds)text).writeRawLong(room);  _outputTail  +=  room  *  2;	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
690	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  space  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [CE]  cannot  find  symbol  space  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    Integer  _outputTail  =  text.length();  _outputTail  +=  space  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        Integer    _outputTail    =    text.length();    _outputTail  +=  space  *  SHORT_WRITE;  Integer  _outputTail  =  text.length();	  	non-compiled	[CE]  cannot  find  symbol  space	85	None	add
691	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
692	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
693	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room!=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    if(room!=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
694	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room!=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  2;  if(room!=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    2;    if(room!=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	23	1	add
695	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _writer.writeRawLong(text);  }	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
696	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeChars(0,  room,  _outputBuffer,  _outputTail);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeChars(0,  room,  _outputBuffer,  _outputTail);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeChars(0,  room,  _outputBuffer,  _outputTail);  }	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
697	[BUG]  [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    2;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        2;        int    _outputTail    =    text.length();    if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	74	None	add
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
699	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
700	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _outputHead  =  0;  }  [CE]  cannot  find  symbol  space  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  space  *  SHORT_WRITE;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail    +=    space    *    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  space	48	None	replace
701	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
702	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
703	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  int  _outputTail  +=  1;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    int    _outputTail    +=    1;    	non-compiled	[CE]  ';'  expected	17	None	replace
704	[BUG]  [BUGGY]  _outputTail  +=  length  +  1;  [CE]  cannot  find  symbol  length  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  length  +  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  length  +  1;	  _outputTail    +=    room    +    1;    _outputTail    +=    space    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
705	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    2;    int    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	35	None	replace
706	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  int  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    2;    int    _outputTail    +=    2;    	non-compiled	[CE]  ';'  expected	35	None	replace
707	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    int  qlen  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	21	1	add
708	[BUG]  [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  qlen  =  text.length();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    Integer  _outputTail  =  text.length();  int  qlen  =  text.length();  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        Integer    _outputTail    =    text.length();    int  qlen  =  text.length();	  	compilable	  [FE]  AssertionFailedError  	21	1	add
709	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  int  _outputTail  =  text.lastIndexOf(room);  [CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    Integer  _outputTail  =  text.indexOf(room);  int  _outputTail  =  text.lastIndexOf(room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        Integer    _outputTail    =    text.indexOf(room);    int  _outputTail  =  text.lastIndexOf(room);	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeRawLong(String)	63	None	add
710	[BUG]  [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  this.writer.writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    this.writer.writeRawLong(text);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
711	[BUG]  [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  =  0)  {  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
712	[BUG]  [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  =  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    }    else    {    _outputTail    +=    2;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
713	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
714	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(text!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
715	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
716	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
717	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(!text.isEmpty())  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(!text.isEmpty())  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
718	[BUG]  [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(!text.isEmpty())  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]          writeRawLong(text);  _verifyValueWrite( "write  text  value ");  if(!text.isEmpty())  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	                writeRawLong(text);    _verifyValueWrite( "write  text  value ");  if(!text.isEmpty())  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	57	1	add
719	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
720	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
721	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
722	[BUG]  [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    1;    _outputTail  +=  room  +  2;  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        1;        _outputTail    +=    room    +    2;    if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	43	1	add
723	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }  [CE]  cannot  find  symbol  offset  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  1;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
724	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  1;  }  [CE]  cannot  find  symbol  offset  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  1;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
725	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [CE]  cannot  find  symbol  offset  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  2;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
726	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  }  [CE]  cannot  find  symbol  offset  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  1;  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    1;    if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  }	  	non-compiled	[CE]  cannot  find  symbol  offset	15	None	add
727	[BUG]  [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  2;  TextUtilities.writeRawLong(text,  _outputBuffer);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
728	[BUG]  [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputHead);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail  +=  1;  TextUtilities.writeRawLong(text,  _outputHead);	  _outputTail    +=    1;    TextUtilities.writeRawLong(text,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	80	None	replace
729	[BUG]  [BUGGY]  int  len  =  text.length()  *  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  int  len  =  text.length()  *  room;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	int  len  =  text.length()  *  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	82	None	replace
730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
731	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  Integer  _outputTail  =  text.length();  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    Integer    _outputTail    =    text.length();    	compilable	  [FE]  AssertionFailedError  	22	1	replace
732	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  =  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  =  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
733	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  =  room  *  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  =  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  =  room  *  SHORT_WRITE;  }	  _outputTail    +=    room    *    SHORT_WRITE;    int    _outputTail    =    room    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	84	1	replace
734	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  1)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
735	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [CE]  not  a  statement  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputTail  +  1,  room);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputTail    +    1,    room);    	non-compiled	[CE]  not  a  statement	104	None	replace
736	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
737	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
738	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
739	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    _outputTail  +=  room  *  SHORT_WRITE;  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        _outputTail    +=    room    *    SHORT_WRITE;    if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	45	1	add
740	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [CE]  not  a  statement  [FE]        IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)  >=  _outputEnd)?  text.substring(0,  room):  text.substring(_outputBuffer,  _outputTail);  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >=    _outputEnd)?    text.substring(0,    room):    text.substring(_outputBuffer,    _outputTail);    	non-compiled	[CE]  not  a  statement	102	None	replace
741	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  IndexOutOfBoundsException  	64	1	replace
742	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  IndexOutOfBoundsException  	64	1	replace
743	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  IndexOutOfBoundsException  	64	1	replace
744	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  Integer  _outputTail  =  text.indexOf(room);  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    Integer    _outputTail    =    text.indexOf(room);    	compilable	  [FE]  IndexOutOfBoundsException  	64	1	replace
745	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    int    _outputTail    +=    room    +    1;    	non-compiled	[CE]  ';'  expected	42	None	replace
746	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }  [CE]  ';'  expected  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  int  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    1;    int    _outputTail    +=    room    +    1;    	non-compiled	[CE]  ';'  expected	42	None	replace
747	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
748	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    1;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
749	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text.getChars(0,  room,  _outputBuffer,  _outputTail));  }  [CE]  'void'  type  not  allowed  here  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text.getChars(0,  room,  _outputBuffer,  _outputTail));  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  1;  _outputTail  +=  2;  }  else  {  writeRawLong(text.getChars(0,  room,  _outputBuffer,  _outputTail));  }	  _outputTail    +=    1;    _outputTail    +=    2;    	non-compiled	[CE]  'void'  type  not  allowed  here	19	None	replace
750	[BUG]  [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  TextUtilities.writeRawLong(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    Integer  _outputTail  =  TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	1	None	add
751	[BUG]  [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  text.indexOf('ufffd',  room);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    Integer  _outputTail  =  text.indexOf('ufffd',  room);	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
752	[BUG]  [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  4;  Integer  _outputTail  =  TextUtilities.writeRaw(text);  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    4;    Integer  _outputTail  =  TextUtilities.writeRaw(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	1	None	add
753	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  1;  ((  _outputTail  +  room  +  1)  >=  _outputEnd)?  text.length()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    1;    ((    _outputTail    +    room    +    1)    >=    _outputEnd)?    text.length()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	101	None	replace
754	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  }  [CE]  ';'  expected  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  2;  }	  _outputTail    +=    room    +    2;    int    _outputTail    +=    room    +    2;    	non-compiled	[CE]  ';'  expected	26	None	replace
755	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  1;  }  [CE]  ';'  expected  [FE]              IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  1;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  int  _outputTail  +=  room  +  1;  }	  _outputTail    +=    room    +    2;    int    _outputTail    +=    room    +    2;    	non-compiled	[CE]  ';'  expected	26	None	replace
756	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
757	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  else  {  writeRawLong(text);  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
759	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  2;  _outputTail  +=  2;  }	  _outputTail    +=    2;    _outputTail    +=    2;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
760	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
761	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	40	1	replace
762	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]          IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
763	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            IndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  _outputEnd)  {  _outputTail  +=  room  +  2;  ((  _outputTail  +  room  +  2)>  _outputEnd)?  _outputBuffer.getLength()  :  SHORT_WRITE;  }	  _outputTail    +=    room    +    2;    ((    _outputTail    +    room    +    2)    >    _outputEnd)?    _outputBuffer.getLength()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	103	None	replace
764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
765	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]    StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  writeRawLong(text);  }	          writeRawLong(text);    	compilable	  [FE]  AssertionFailedError  	58	1	replace
766	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  >=  0)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_verifyValueWrite( "write  text  value ");  if(room  >=  0)  {  writeRawLong(text);  }	          writeRawLong(text);    	compilable	  [FE]  StackOverflowError  	58	1	replace
767	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  >=  0)  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(room  >=  0)  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_verifyValueWrite( "write  text  value ");  if(room  >=  0)  {  writeRawLong(text);  }	          writeRawLong(text);    	compilable	  [FE]  StackOverflowError  	58	1	replace
768	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
769	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
770	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
771	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
772	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer()  [CE]  ';'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer()  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer()	  	non-compiled	[CE]  ';'  expected	91	None	add
773	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
774	[BUG]  [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    *    SHORT_WRITE;    if(room  <  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  else  {  _flushBuffer();  }  _verifyValueWrite( "write  text  value ");  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        *        SHORT_WRITE;        if(room    <    SHORT_WRITE)    {    _outputTail    +=    room    *    SHORT_WRITE;    }    else    {    _flushBuffer();    }    _verifyValueWrite( "write  text  value ");  if(room  >=  SHORT_WRITE)  {  _outputTail  +=  room  *  SHORT_WRITE;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	91	1	add
775	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
776	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  1;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    1;    	compilable	  [FE]  IndexOutOfBoundsException  	30	1	replace
777	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
778	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    2;    _outputTail    +=    room    +    3;    	compilable	  [FE]  IndexOutOfBoundsException  	28	1	replace
779	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail    +=    room    *    3;    int  _outputTail  =  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
780	[BUG]  [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  room  *  3;  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail  +=  room  *  3;  int  _outputTail  =  room  *  3;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail    +=    room    *    3;    int  _outputTail  =  room  *  3;	  	compilable	  [FE]  IndexOutOfBoundsException  	65	1	add
781	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	Integer  _outputTail  =  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
782	[BUG]  [BUGGY]  Integer  _outputTail  =  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  Integer  _outputTail  =  1;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	Integer  _outputTail  =  1;	  _outputTail    +=    1;    Integer    _outputTail    +=    1;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
784	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  2;  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  1;  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
785	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        1;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
786	[BUG]  [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [FE]  AssertionFailedError  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    _outputTail  +=  2;  int  _outputTail  =  text.length();  _outputTail  +=  2;  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        _outputTail    +=    2;    int  _outputTail  =  text.length();  _outputTail  +=  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
787	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
788	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
789	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
790	[BUG]  [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    room    +    2;    _outputTail  +=  room  +  3;  if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        room        +        2;        _outputTail    +=    room    +    3;    if(room  >=  0)  {  _outputTail  +=  room  +  2;  _outputTail  +=  room  +  3;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	27	1	add
791	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
792	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text.substring(0,  room));  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text.substring(0,  room));  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_writer.write(text,    0,    room);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text.substring(0,  room));  }	  	non-compiled	[CE]  ';'  expected	54	None	add
793	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	add	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
794	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	if(room  >=  0)  {  _outputTail  +=  room  +  1;  _outputTail  +=  room  +  2;  }  else  {  _flushBuffer();  }	  _outputTail    +=    room    +    1;    _outputTail    +=    room    +    2;    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
795	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >  room)  {  _outputTail  +=  1;  int  _outputTail  =  text.length();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >  room)  {  _outputTail  +=  1;  int  _outputTail  =  text.length();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    if(text!=  null)  {  if(_outputTail  >  room)  {  _outputTail  +=  1;  int  _outputTail  =  text.length();  }	  	non-compiled	[CE]  ';'  expected	77	None	add
796	[BUG]  [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);      [BUGGY]  _outputTail    +=    1;    int  _outputTail  =  text.length();  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	479	479	1	replace	_outputTail        +=        1;        int    _outputTail    =    text.length();    if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	77	None	add
