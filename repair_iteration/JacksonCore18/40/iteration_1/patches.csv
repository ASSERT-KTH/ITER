bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
2	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i  +  1);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i  +  1);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  for(int  i  =  0;  i  <  raw.length();  i++)  {  writeRaw(i  +  1);  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
3	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
4	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
5	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
6	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	3	None	replace
7	[BUG]  [BUGGY]  _verifyValueWrite( "write  number ");  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _verifyValueWrite( "write  number ");  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_verifyValueWrite( "write  number ");	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	3	None	replace
8	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	3	None	replace
9	[BUG]  [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.n ");  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.n ");  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_reportError( "Current  token( "+raw+ ")not  an  integer  value.n ");	  _reportError(   "Current    token(   "+raw+   ")not    an    integer    value.   ");    	non-compiled	[CE]  ';'  expected	4	None	replace
10	[BUG]  [BUGGY]  _writer.write(raw,  0,  len);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  len);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  len);	  _writer.write(raw);    	non-compiled	[CE]  ';'  expected	7	None	replace
11	[BUG]  [BUGGY]  _writer.write(raw,  0,  raw.length);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  raw.length);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  raw.length);	  _writer.write(raw);    	non-compiled	[CE]  ';'  expected	7	None	replace
12	[BUG]  [BUGGY]  _writeQuotedRaw(raw,  _outputBuffer);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writeQuotedRaw(raw,  _outputBuffer);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writeQuotedRaw(raw,  _outputBuffer);	  _writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	1	None	replace
13	[BUG]  [BUGGY]  _reportError();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _reportError();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_reportError();	  _reportUnsupportedOperation();    	non-compiled	[CE]  ';'  expected	6	None	replace
14	[BUG]  [BUGGY]  _writer.write(raw,  0,  value.length()  -  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  value.length()  -  1);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  value.length()  -  1);	  _writer.write(raw,    0,    value.length());    	non-compiled	[CE]  ';'  expected	8	None	replace
15	[BUG]  [BUGGY]  _writer.write(raw,  0,  raw.length());  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  raw.length());  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  raw.length());	  _writer.write(raw,    0,    value.length());    	non-compiled	[CE]  ';'  expected	8	None	replace
16	[BUG]  [BUGGY]  _writer.write(raw,  0,  value.length()  -  2);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  value.length()  -  2);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  value.length()  -  2);	  _writer.write(raw,    0,    value.length());    	non-compiled	[CE]  ';'  expected	8	None	replace
17	[BUG]  [BUGGY]  _writer.write(raw,  0,  value.length()  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  value.length()  +  1);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  value.length()  +  1);	  _writer.write(raw,    0,    value.length());    	non-compiled	[CE]  ';'  expected	8	None	replace
18	[BUG]  [BUGGY]  _writer.writeQuotedRaw(value);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.writeQuotedRaw(value);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.writeQuotedRaw(value);	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
19	[BUG]  [BUGGY]  if(raw!=  null)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(raw!=  null)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(raw!=  null)  {  _writer.writeQuotedRaw(raw);  }  else  {  _writer.writeQuotedRaw(raw);  }	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  _writer.write(raw,  0,  value.length()  -  4);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  value.length()  -  4);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  value.length()  -  4);	  _writer.write(raw,    0,    value.length());    	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  if(raw  ==  null)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(raw  ==  null)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(raw  ==  null)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	3	None	replace
22	[BUG]  [BUGGY]  if(raw  ==  null)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(raw  ==  null)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(raw  ==  null)  {  _flushBuffer();  }  else  {  _writeQuotedRaw(raw);  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]  _throwInternal();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _throwInternal();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  ';'  expected	6	None	replace
24	[BUG]  [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.  If(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.  If(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_reportError( "Current  token( "+raw+ ")not  an  integer  value.  If(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  _reportError(   "Current    token(   "+raw+   ")not    an    integer    value.   ");    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
25	[BUG]  [BUGGY]  _writer.write(raw,  0,  value.length);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _writer.write(raw,  0,  value.length);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_writer.write(raw,  0,  value.length);	  _writer.write(raw);    	non-compiled	[CE]  ';'  expected	7	None	replace
26	[BUG]  [BUGGY]  _verifyValueWrite( "write  number ");  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _verifyValueWrite( "write  number ");  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_verifyValueWrite( "write  number ");  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }	  _writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	1	None	replace
27	[BUG]  [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.. ");  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  _reportError( "Current  token( "+raw+ ")not  an  integer  value.. ");  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	_reportError( "Current  token( "+raw+ ")not  an  integer  value.. ");	  _reportError(   "Current    token(   "+raw+   ")not    an    integer    value.   ");    	non-compiled	[CE]  ';'  expected	4	None	replace
28	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }    [BUGGY]  if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	694	694	1	replace	if(_cfgNumbersAsStrings)  {  _writer.writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  ';'  expected	2	None	replace
