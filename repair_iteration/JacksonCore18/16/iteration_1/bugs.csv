bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	}  	non-compiled	[CE]  ';'  expected	31	None	replace
2	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars	}  	non-compiled	[CE]  ';'  expected	31	None	replace
3	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	}  	non-compiled	[CE]  ';'  expected	31	None	replace
4	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars	}  	non-compiled	[CE]  ';'  expected	31	None	replace
5	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]    [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	  	}  	non-compiled	[CE]  ';'  expected	31	None	replace
6	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;	}  	non-compiled	[CE]  ';'  expected	31	None	replace
7	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	}  	non-compiled	[CE]  ';'  expected	31	None	replace
8	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);	}  	non-compiled	[CE]  ';'  expected	31	None	replace
9	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;	}  	non-compiled	[CE]  ';'  expected	31	None	replace
10	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }	}  	non-compiled	[CE]  ';'  expected	31	None	replace
11	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  _writer.write(text,  0,  len);  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len);	}  	non-compiled	[CE]  ';'  expected	31	None	replace
12	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }  [BUGGY]    text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }	}  	non-compiled	[CE]  ';'  expected	31	None	replace
