bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len  -  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len  -  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(len  -  1);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
2	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(offset);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(offset);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(offset);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
3	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(i  +  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(i  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(i  +  1);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
4	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(0,  len);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(0,  len);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
5	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
6	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
7	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
8	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
9	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	42	None	replace
10	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(_outputTail  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	42	None	replace
11	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
12	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
13	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
14	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
15	[BUG]  [BUGGY]  _outputBuffer[len]  =  text.charAt(i);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len]  =  text.charAt(i);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len]  =  text.charAt(i);	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
16	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  offset+len,  _outputTail);	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
17	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _outputTail  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _outputTail  =  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _outputTail  =	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    char    	non-compiled	[CE]  ';'  expected	18	None	replace
18	[BUG]  [BUGGY]  _writer.writeRaw(chars);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRaw(chars);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRaw(chars);	  _writer.writeRawLong(chars);    	non-compiled	[CE]  ';'  expected	39	None	replace
19	[BUG]  [BUGGY]  _writer.writeRawLong(len);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(len);	  _writer.writeRawLong(chars);    	non-compiled	[CE]  ';'  expected	39	None	replace
20	[BUG]  [BUGGY]  _writer.writeRaw(room);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRaw(room);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRaw(room);	  _writer.writeRawLong(chars);    	non-compiled	[CE]  ';'  expected	39	None	replace
21	[BUG]  [BUGGY]  _writer.writeRaw(';');  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRaw(';');  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRaw(';');	  _writer.writeRawLong(chars);    	non-compiled	[CE]  ';'  expected	39	None	replace
22	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
23	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
24	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
25	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  2);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len  +  2);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  +  2);	  _writer.write(text,    0,    len    +    1);    	non-compiled	[CE]  ';'  expected	31	None	replace
26	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer.length);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer.length);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  +  1,  _outputBuffer.length);	  _writer.write(text,    0,    len    +    1);    	non-compiled	[CE]  ';'  expected	31	None	replace
27	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  '.class'  expected	52	None	replace
28	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  ';'  expected	52	None	replace
29	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  '.class'  expected	52	None	replace
30	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;	  if(_outputTail    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
31	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0);	  if(_outputTail    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
33	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
34	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
35	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
36	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRaw(text,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRaw(text,  0,  len);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset+amount,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
37	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	25	None	replace
38	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	25	None	replace
39	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  ';'  expected	53	None	replace
40	[BUG]  [BUGGY]  _outputBuffer[i]  =  text.charAt(i  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[i]  =  text.charAt(i  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[i]  =  text.charAt(i  +  1);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i    +    1);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
41	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i    +    1);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
42	[BUG]  [BUGGY]  _outputBuffer[len]  =  text.charAt(i  +  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len]  =  text.charAt(i  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len]  =  text.charAt(i  +  1);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i    +    1);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
43	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
44	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
45	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  len);	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
46	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
47	[BUG]  [BUGGY]  _writer.writeFully(text,  0,  amount);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeFully(text,  0,  amount);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeFully(text,  0,  amount);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
48	[BUG]  [BUGGY]  _writer.writeFull(text,  0,  amount);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeFull(text,  0,  amount);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeFull(text,  0,  amount);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
49	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  len);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeLong(text,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeLong(text,  0,  len);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
50	[BUG]  [BUGGY]  _outputHead  =  len;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputHead  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  len;	  _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	27	None	replace
51	[BUG]  [BUGGY]  _outputHead  =  LAST_WRITE;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputHead  =  LAST_WRITE;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  LAST_WRITE;	  _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	27	None	replace
52	[BUG]  [BUGGY]  _outputHead  =  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputHead  =  1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  1;	  _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	27	None	replace
53	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
54	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
55	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	40	None	replace
56	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  _outputHead,  len);	  _writer.write(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    	non-compiled	[CE]  ';'  expected	26	None	replace
57	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  0);	  _writer.write(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    	non-compiled	[CE]  ';'  expected	26	None	replace
58	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  len);	  _writer.write(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    	non-compiled	[CE]  ';'  expected	26	None	replace
59	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  }	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	50	None	replace
60	[BUG]  [BUGGY]  _writer.write(chars,  offset+offset,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(chars,  offset+offset,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(chars,  offset+offset,  len);	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	48	None	replace
61	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
62	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }	  if(len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;	  System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	56	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);	  System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	56	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);  _outputTail  =  len;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);  _outputTail  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len,  _outputTail);  _outputTail  =  len;	  System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	56	None	replace
66	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
67	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
68	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
69	[BUG]  [BUGGY]  _writer.write(text,  len);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  len);	  _writer.write(text);    	non-compiled	[CE]  ';'  expected	66	None	replace
70	[BUG]  [BUGGY]  _writer.write(text,  offset+len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len);	  _writer.write(text);    	non-compiled	[CE]  ';'  expected	66	None	replace
71	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
72	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  offset,  _outputHead,  _outputTail,  len);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  offset,  _outputHead,  _outputTail,  len);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  offset,  _outputHead,  _outputTail,  len);  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
73	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail,  len);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail,  len);  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
74	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
75	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
76	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  len  +  1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  len  +  1;	  _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	4	None	replace
77	[BUG]  [BUGGY]  _outputTail  =  amount;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  amount;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  amount;	  _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	4	None	replace
78	[BUG]  [BUGGY]  _outputTail  =  len  -  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  len  -  1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  len  -  1;	  _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	4	None	replace
79	[BUG]  [BUGGY]  _writer.write(room,  0,  len  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  0,  len  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  0,  len  +  1);	  _writer.write(room,    0,    len);    	non-compiled	[CE]  ';'  expected	74	None	replace
80	[BUG]  [BUGGY]  _writer.write(room,  0,  len  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  0,  len  -  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  0,  len  -  1);	  _writer.write(room,    0,    len);    	non-compiled	[CE]  ';'  expected	74	None	replace
81	[BUG]  [BUGGY]  _outputBuffer[i]  =  text.charAt(len);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[i]  =  text.charAt(len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[i]  =  text.charAt(len);	  _outputBuffer[i]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	14	None	replace
82	[BUG]  [BUGGY]  _outputBuffer[i]  =  text.charAt(0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[i]  =  text.charAt(0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[i]  =  text.charAt(0);	  _outputBuffer[i]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	14	None	replace
83	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
84	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
85	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
86	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
87	[BUG]  [BUGGY]  _outputBuffer  =  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  0;	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
88	[BUG]  [BUGGY]  _outputBuffer  =  _outputTail  +  1;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  _outputTail  +  1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  _outputTail  +  1;	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
89	[BUG]  [BUGGY]  _outputBuffer  =  _outputHead;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  _outputHead;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  _outputHead;	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
90	[BUG]  [BUGGY]  _outputBuffer  =  new  StringBuffer();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  new  StringBuffer();  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  new  StringBuffer();	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
91	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
92	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer,  _outputTail);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
93	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
94	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
95	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
96	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
97	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
98	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
99	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
100	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
101	[BUG]  [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+1,  _outputBuffer,  0);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	24	None	replace
102	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  len  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(text,  0,  len  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text,  0,  len  +  1);	  _writer.writeRawLong(text,    0,    len);    	non-compiled	[CE]  ';'  expected	13	None	replace
103	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+qlen,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	41	None	replace
104	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+qlen,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	41	None	replace
105	[BUG]  [BUGGY]  Len  <  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  len)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  Len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	47	None	replace
106	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }	  Len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	47	None	replace
107	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i);  }	  Len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	47	None	replace
108	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0,  len);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	5	None	replace
109	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	2	None	replace
110	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	2	None	replace
111	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	2	None	replace
112	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	2	None	replace
113	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
114	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
115	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
116	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len,  _outputTail);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset,  len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  offset,  len,  _outputTail);	  _writer.write(_outputBuffer,    offset,    len);    	non-compiled	[CE]  ';'  expected	38	None	replace
117	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len  +  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset,  len  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  offset,  len  +  1);	  _writer.write(_outputBuffer,    offset,    len);    	non-compiled	[CE]  ';'  expected	38	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
121	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  1  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len  -  1  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  -  1  +  1);	  _writer.write(text,    0,    len    -    1);    	non-compiled	[CE]  ';'  expected	32	None	replace
122	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0,  _outputTail);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  0,  _outputTail);	  _writer.write(text,    0,    len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
123	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0,  _outputHead);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0,  _outputHead);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  0,  _outputHead);	  _writer.write(text,    0,    len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
124	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  1);	  _writer.write(text,    0,    len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
125	[BUG]  [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
126	[BUG]  [BUGGY]  _writer.writeRawLong(len,  offset+len,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(len,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(len,  offset+len,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
127	[BUG]  [BUGGY]  _writer.writeRawLong(len,  offset+len,  _outputBuffer);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(len,  offset+len,  _outputBuffer);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(len,  offset+len,  _outputBuffer);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
128	[BUG]  [BUGGY]  _writer.write(chars,  offset+len,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(chars,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(chars,  offset+len,  _outputBuffer,  0,  len);	  _writer.write(chars,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	37	None	replace
129	[BUG]  [BUGGY]  _writer.write(chars,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(chars,  offset+amount,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(chars,  offset+amount,  _outputBuffer,  0);	  _writer.write(chars,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	37	None	replace
130	[BUG]  [BUGGY]  _writer.writeRaw(text);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRaw(text);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRaw(text);	  _writer.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	11	None	replace
131	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text,  len);	  _writer.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	11	None	replace
132	[BUG]  [BUGGY]  _writer.writeLong(text);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeLong(text);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeLong(text);	  _writer.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	11	None	replace
133	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
134	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
135	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
136	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
137	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputTail  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
138	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  room,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  room,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  room,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
139	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  }	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  not  a  statement	69	None	replace
140	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  ';'  expected	69	None	replace
141	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _flushBuffer()  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _flushBuffer()  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _flushBuffer()	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  ';'  expected	69	None	replace
142	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    char    	non-compiled	[CE]  '.class'  expected	49	None	replace
143	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    char    	non-compiled	[CE]  ';'  expected	49	None	replace
144	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    char    	non-compiled	[CE]  '.class'  expected	49	None	replace
145	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  len  +  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  0,  len  +  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  0,  len  +  1);	  _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	1	None	replace
146	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  len  -  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  0,  len  -  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  0,  len  -  1);	  _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	1	None	replace
147	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  len,  _outputTail);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  0,  len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  0,  len,  _outputTail);	  _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	1	None	replace
148	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputHead);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputHead);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  _outputHead);	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
149	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  len);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	58	None	replace
150	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  len);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(_outputBuffer,  len);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	58	None	replace
151	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	58	None	replace
152	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
153	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  _outputTail);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
154	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
155	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
156	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
157	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
158	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
159	[BUG]  [BUGGY]  _outputTail  =  LAST_WRITE;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  LAST_WRITE;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  LAST_WRITE;	  _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	33	None	replace
160	[BUG]  [BUGGY]  _outputTail  =  length;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  length;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  length;	  _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	33	None	replace
161	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    _outputHead,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
162	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputTail  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    _outputHead,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
163	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
164	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
165	[BUG]  [BUGGY]  if(len  <  =  _outputMaxContiguous)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  _outputMaxContiguous)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  _outputMaxContiguous)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
166	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
169	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	57	None	replace
170	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
171	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
172	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
173	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
174	[BUG]  [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+alloc,  _outputBuffer,  0);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	24	None	replace
175	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
176	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
177	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  _outputTail  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
178	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
179	[BUG]  [BUGGY]  _outputBuffer  =  buffer;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  buffer;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  buffer;	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
180	[BUG]  [BUGGY]  _outputBuffer  =  text;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer  =  text;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  text;	  _outputBuffer    =    _outputTail;    	non-compiled	[CE]  ';'  expected	6	None	replace
181	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
182	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
183	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
184	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
185	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
186	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
187	[BUG]  [BUGGY]  _writer.write(text,  offset);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset);	  _writer.write(text);    	non-compiled	[CE]  ';'  expected	66	None	replace
188	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
189	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
190	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
191	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
192	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getCHARs(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	48	None	replace
193	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
194	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail  +  1);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
195	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputTail,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputTail,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputTail,  0);	  _writer.write(text,    0,    len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
196	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
197	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
198	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
199	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
200	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
201	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
202	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
203	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
204	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(_outputTail  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >  room)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
205	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >  safeOutputEnd)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
206	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
207	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
208	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
209	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
210	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
211	[BUG]  [BUGGY]  _outputHead  =  -1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputHead  =  -1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  -1;	  _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	27	None	replace
212	[BUG]  [BUGGY]  _outputHead  =  4;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputHead  =  4;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  4;	  _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	27	None	replace
213	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
214	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
215	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
216	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    _outputHead,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  _outputHead  =  0;	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    _outputHead,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
218	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
219	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
220	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
221	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
222	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
223	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
224	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
225	[BUG]  [BUGGY]  if(len  <  =  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  _outputEnd)  {  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
226	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
227	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
228	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	22	None	replace
229	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	58	None	replace
230	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
231	[BUG]  [BUGGY]  if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
232	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
233	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
234	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  amount);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(text,  0,  amount);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text,  0,  amount);	  _writer.writeRawLong(text,    0,    len);    	non-compiled	[CE]  ';'  expected	13	None	replace
235	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
236	[BUG]  [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
237	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
238	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
239	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
240	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
241	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    _outputHead,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	67	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;	  System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	56	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);	  System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	56	None	replace
244	[BUG]  [BUGGY]  _writer.write(text,  offset,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset,  len);	  _writer.write(_outputBuffer,    offset,    len);    	non-compiled	[CE]  ';'  expected	38	None	replace
245	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  len);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  _outputBuffer,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  _outputBuffer,  len);	  _writer.write(_outputBuffer,    offset,    len);    	non-compiled	[CE]  ';'  expected	38	None	replace
246	[BUG]  [BUGGY]  _writer.write(room,  _outputBuffer,  offset,  len);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  _outputBuffer,  offset,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  _outputBuffer,  offset,  len);	  _writer.write(_outputBuffer,    offset,    len);    	non-compiled	[CE]  ';'  expected	38	None	replace
247	[BUG]  [BUGGY]  _writer.write(text,  0,  room);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  room);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  room);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
248	[BUG]  [BUGGY]  _writer.write(text,  0,  amount  -  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  amount  -  1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  amount  -  1);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
249	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  amount);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeLong(text,  0,  amount);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeLong(text,  0,  amount);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
250	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset+amount,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset+amount,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
252	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset+amount,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
253	[BUG]  [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
254	[BUG]  [BUGGY]  _writer.writeRawLong(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(offset,  offset+len,  _outputBuffer,  0);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
255	[BUG]  [BUGGY]  _writer.writeRawLong(room,  offset+len,  _outputTail);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(room,  offset+len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(room,  offset+len,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
256	[BUG]  [BUGGY]  Len  <  0  ||  len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  0  ||  len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  0  ||  len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
257	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
258	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+room,  _outputBuffer,  0);	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
259	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
260	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
261	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
262	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
263	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qualen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qualen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qualen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
264	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  ';'  expected	69	None	replace
265	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail  +  1);  _out  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail  +  1);  _out  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail  +  1);  _out	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  ';'  expected	69	None	replace
266	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  qlen);	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
270	[BUG]  [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+len,  _outputBuffer,  _outputHead,  len);	  System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	65	None	replace
271	[BUG]  [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+room,  _outputBuffer,  0);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	5	None	replace
272	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
273	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
274	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
275	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
276	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);	  if(_outputTail    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
277	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  +  1,  _outputBuffer);	  _writer.write(text,    0,    len    +    1);    	non-compiled	[CE]  ';'  expected	31	None	replace
278	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
279	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
280	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputTail);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputTail);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
281	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+room,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+room,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset+room,  _outputBuffer,  _outputTail);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
282	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
283	[BUG]  [BUGGY]  _outputTail  =  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputTail  =  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	19	None	replace
284	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  room;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  room;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  room;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  Len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	47	None	replace
285	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  TextUtilities.charAt(i);  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  TextUtilities.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  TextUtilities.charAt(i);  }	  Len    <    SHORT_WRITE)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	47	None	replace
286	[BUG]  [BUGGY]  _outputBuffer[i]  =  text.charAt(i)+  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[i]  =  text.charAt(i)+  1;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[i]  =  text.charAt(i)+  1;	  _outputBuffer[i]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	14	None	replace
287	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
288	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
289	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
290	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
291	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len  -  2);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len  -  2);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(len  -  2);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
292	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(0);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(0);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
293	[BUG]  [BUGGY]  if(len  <  =  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
294	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  _flushBuffer();    	non-compiled	[CE]  ';'  expected	7	None	replace
295	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
296	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
297	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
298	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
299	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
300	[BUG]  [BUGGY]  _writer.writeRawLong(room,  offset+len,  _outputBuffer);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.writeRawLong(room,  offset+len,  _outputBuffer);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(room,  offset+len,  _outputBuffer);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	3	None	replace
301	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  '.class'  expected	53	None	replace
302	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
303	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
304	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
305	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
306	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+len,  _outputBuffer);	  TextUtilities.writeRawLong(text,    _outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  ';'  expected	59	None	replace
307	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
308	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
309	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	75	None	replace
310	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0);  _outputTail  =  chars  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0);  _outputTail  =  chars  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0);  _outputTail  =  chars  }	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    }    	non-compiled	[CE]  ';'  expected	20	None	replace
311	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
312	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    writeRawLong(text);    }    	non-compiled	[CE]  ';'  expected	76	None	replace
313	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
314	[BUG]  [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+alloc,  _outputBuffer,  _outputHead,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+alloc,  _outputBuffer,  _outputHead,  len);	  _writer.write(text,    offset+amount,    _outputBuffer,    _outputHead,    len);    	non-compiled	[CE]  ';'  expected	26	None	replace
315	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	40	None	replace
316	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    char    	non-compiled	[CE]  '.class'  expected	18	None	replace
317	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
318	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
319	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    	non-compiled	[CE]  ';'  expected	34	None	replace
320	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(_outputTail    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
321	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(_outputTail    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	9	None	replace
322	[BUG]  [BUGGY]  _writer.write(room,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  offset+len,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  offset+len,  _outputBuffer,  0);	  if(len    >    0)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	43	None	replace
323	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
324	[BUG]  [BUGGY]  _writer.write(chars,  offset+alloc,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(chars,  offset+alloc,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(chars,  offset+alloc,  _outputBuffer,  0);	  _writer.write(chars,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	37	None	replace
325	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
326	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(_outputTail    >=    len)    {    if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
327	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i  +  1);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i  +  1);  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  Text.charAt(i  +  1);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i    +    1);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
328	[BUG]  [BUGGY]  _writer.write(room,  0,  amount);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(room,  0,  amount);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  0,  amount);	  _writer.write(text,    0,    amount);    	non-compiled	[CE]  ';'  expected	54	None	replace
329	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputHead);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputHead);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  0,  _outputHead);	  _writer.write(_outputBuffer,    0,    len);    	non-compiled	[CE]  ';'  expected	1	None	replace
330	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    char    	non-compiled	[CE]  '.class'  expected	52	None	replace
331	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
332	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	23	None	replace
333	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
334	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
335	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
336	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	29	None	replace
337	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputHead);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputHead);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  offset  +  len,  _outputHead);	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	19	None	replace
338	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
339	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
340	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputEnd  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
341	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputEnd  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(_outputTail    >    safeOutputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
342	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
343	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
344	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
345	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	35	None	replace
346	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
347	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  room)  {  if(_outputTail  >>  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
348	[BUG]  [BUGGY]  _writer.write(text,  offset+qlen,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  offset+qlen,  _outputBuffer,  0);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+qlen,  _outputBuffer,  0);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	5	None	replace
349	[BUG]  [BUGGY]  TextUtilities.writeRawString(text);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  TextUtilities.writeRawString(text);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawString(text);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  ';'  expected	58	None	replace
350	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
351	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
352	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  =  0)  {  if(room  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
353	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
354	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  0;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
355	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
356	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(len);	  _outputBuffer[len    -    1]    =    text.charAt(i);    	non-compiled	[CE]  ';'  expected	73	None	replace
357	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _outputTail  =  0;  }	  _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	33	None	replace
358	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	33	None	replace
359	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
360	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
361	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	30	None	replace
362	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail,  amount);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail,  amount);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail,  amount);  _outputHead  =  0;  }	  if(len    >    0)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    _outputHead,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
363	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
364	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	36	None	replace
365	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  -1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  -1);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  -1);	  _writer.write(text,    0,    len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
366	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	48	None	replace
367	[BUG]  [BUGGY]  if(len  >  room)  {  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	25	None	replace
368	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
369	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
370	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
371	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  if(len    >    room)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    else    {    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
372	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  ++i)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars	  if(len    >    _outputEnd)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	51	None	replace
373	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0,  _outputTail);  _out  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0,  _outputTail);  _out  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+amount,  _outputBuffer,  0,  _outputTail);  _out	  if(len    >    0)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0,    _outputTail);    _out    	non-compiled	[CE]  ';'  expected	69	None	replace
374	[BUG]  [BUGGY]  _writer.write(text.substring(0,  len));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text.substring(0,  len));  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text.substring(0,  len));	  _writer.write(text);    	non-compiled	[CE]  ';'  expected	66	None	replace
375	[BUG]  [BUGGY]  _writer.write(text,  start,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;      [BUGGY]  _writer.write(text,  start,  len);  [BUGGY]        text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  start,  len);	  _writer.write(text);    	non-compiled	[CE]  ';'  expected	66	None	replace
