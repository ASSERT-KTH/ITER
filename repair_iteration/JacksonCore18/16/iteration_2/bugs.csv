bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  0,  len);	      	non-compiled	[CE]  ';'  expected	5	None	replace
2	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ';'  expected	5	None	replace
3	[BUG]  [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputTail);  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputTail);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(_outputBuffer,  offset+len,  _outputTail);	      	non-compiled	[CE]  ';'  expected	5	None	replace
4	[BUG]  [BUGGY]  _outputTail  =  len;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputTail  =  len;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  len;	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
5	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
6	[BUG]  [BUGGY]  _outputBuffer  =  _outputTail;  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputBuffer  =  _outputTail;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer  =  _outputTail;	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
7	[BUG]  [BUGGY]  _flushBuffer();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _flushBuffer();  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_flushBuffer();	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
8	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	6	None	replace
9	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	6	None	replace
10	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	6	None	replace
11	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.writeRawLong(text);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
12	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  0);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
13	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  len);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.writeRawLong(text,  0,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(text,  0,  len);	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
14	[BUG]  [BUGGY]  _outputBuffer[i]  =  text.charAt(i);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputBuffer[i]  =  text.charAt(i);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[i]  =  text.charAt(i);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
15	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
16	[BUG]  [BUGGY]  if(_outputTail  >=  len)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(_outputTail  >=  len)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(_outputTail  >=  len)  {  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
17	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	2	None	replace
18	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  '.class'  expected	2	None	replace
19	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	2	None	replace
20	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	2	None	replace
21	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
23	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
24	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
25	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
26	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputHead,  len);	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
27	[BUG]  [BUGGY]  _outputHead  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputHead  =  0;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputHead  =  0;	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
29	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
30	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
31	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  ';'  expected	11	None	replace
32	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  len  -  1);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  ';'  expected	11	None	replace
33	[BUG]  [BUGGY]  _outputTail  =  0;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputTail  =  0;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputTail  =  0;	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
34	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
35	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
36	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
37	[BUG]  [BUGGY]  _writer.write(chars,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(chars,  offset+len,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(chars,  offset+len,  _outputBuffer,  0);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
38	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(_outputBuffer,  offset,  len);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  _writer.writeRawLong(chars);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.writeRawLong(chars);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.writeRawLong(chars);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
40	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  0);	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
41	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
42	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	8	None	replace
43	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
44	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
45	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
46	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
47	[BUG]  [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	Len  <  SHORT_WRITE)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  >  expected	3	None	replace
48	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  chars	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	2	None	replace
49	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  =  char	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  '.class'  expected	2	None	replace
50	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
51	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  chars	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
52	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  _outputEnd)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  '.class'  expected	4	None	replace
53	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [CE]  '.class'  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  char	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  '.class'  expected	4	None	replace
54	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text,  0,  amount);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  ';'  expected	11	None	replace
55	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  0,  _outputBuffer,  offset,  len,  _outputTail);  _outputHead  =  0;	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
57	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
58	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text);  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  TextUtilities.writeRawLong(text);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text);	      	non-compiled	[CE]  ';'  expected	5	None	replace
59	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  offset+len,  _outputTail);  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  offset+len,  _outputTail);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  offset+len,  _outputTail);	      	non-compiled	[CE]  ';'  expected	5	None	replace
60	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  _flushBuffer();  return;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
61	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  =  len;  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
62	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
63	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
64	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputTail,  len);  _outputHead  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
66	[BUG]  [BUGGY]  _writer.write(text);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(text);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(text);	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	1	None	replace
67	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset,  _outputHead,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
68	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  offset+amount,  _outputTail);  _outputHead  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    offset,    len,    _outputTail);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
69	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0,  _outputTail);  _out	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    =    chars    	non-compiled	[CE]  ';'  expected	2	None	replace
70	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	7	None	replace
71	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	6	None	replace
72	[BUG]  [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  for(int  i  =  0;  i  <  len;  i++)  {  _outputBuffer[i]  =  text.charAt(i  +  1);  }	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
73	[BUG]  [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(i);  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _outputBuffer[len  -  1]  =  text.charAt(i);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_outputBuffer[len  -  1]  =  text.charAt(i);	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    _outputBuffer[i]    =    text.charAt(i);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
74	[BUG]  [BUGGY]  _writer.write(room,  0,  len);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  _writer.write(room,  0,  len);  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	_writer.write(room,  0,  len);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  ';'  expected	11	None	replace
75	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  len);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+amount,    _outputBuffer,    _outputTail,    len);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	12	None	replace
76	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  else  {  writeRawLong(text);  }	  text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    0;    	non-compiled	[CE]  ';'  expected	9	None	replace
77	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;    [BUGGY]  if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=  [BUGGY]      text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	492	492	1	replace	if(len  >  0)  {  for(int  i  =  0;  i  <  len;  i++)  {  char[]  chars  =  text.getChars(i,  offset+chars,  _outputBuffer,  0);  _outputTail  +=	  if(len    >    room)    {    for(int    i    =    0;    i    <    len;    i++)    {    char[]    chars    =    text.getChars(i,    offset+chars,    _outputBuffer,    0);    _outputTail    +=    chars    	non-compiled	[CE]  ';'  expected	4	None	replace
