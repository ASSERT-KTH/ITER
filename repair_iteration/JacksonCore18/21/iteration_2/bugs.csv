bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
2	[BUG]  [BUGGY]  _verifyValueWrite( "End  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array: ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
4	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array: ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: "  +  this);	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
6	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: "  +  this);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "End  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: "  +  this);	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
8	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( ",write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
10	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( ",write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
12	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	5	2	add
14	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	5	2	add
15	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite(, "Start  an  array   ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite(, "Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite(, "Start  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	5	2	add
17	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	5	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
19	[BUG]  [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( ",End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
21	[BUG]  [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( ",End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
22	[BUG]  [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite(, "End  an  array   ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite(, "End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite(, "End  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
24	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( ".write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
26	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( ".write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
28	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array   ");    _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	        _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	7	2	add
30	[BUG]  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	7	2	add
31	[BUG]  [BUGGY]      _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writer.writeStartArray(this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
32	[BUG]  [BUGGY]      _writeContext.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writeContext.writeStartArray(this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _writeContext.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
33	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	        _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	7	2	add
34	[BUG]  [BUGGY]      _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	7	2	add
35	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	        _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	7	2	add
36	[BUG]  [BUGGY]      _writeContext  =  _writeContext.createChildObjectContext();  [FE]  JsonGenerationException  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	7	2	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  array ");	  _verifyValueWrite(   "write    start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
38	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array ");	  _verifyValueWrite(   "write    start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  an  array: "  +  this);	  _verifyValueWrite(   "write    start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
40	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  this);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  an  array: "  +  this);	  _verifyValueWrite(   "write    start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Start  array ");	  _verifyValueWrite(   "Start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	6	1	replace
42	[BUG]  [BUGGY]  _verifyValueWrite( "Start  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Start  array ");	  _verifyValueWrite(   "Start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	6	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Write  start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Write  start  array ");	  _verifyValueWrite(   "Start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	6	1	replace
44	[BUG]  [BUGGY]  _verifyValueWrite( "Write  start  array ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Write  start  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Write  start  array ");	  _verifyValueWrite(   "Start    an    array   ");    	compilable	  [FE]  AssertionFailedError  	6	1	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array  value ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array  value ");	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
46	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array  value ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array  value ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array  value ");	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array. ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array. ");	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
48	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array. ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array. ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array. ");	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Started  an  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Started  an  array ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
50	[BUG]  [BUGGY]  _verifyValueWrite( "Started  an  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "Started  an  array ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  an  array ");	  _verifyValueWrite(   "End    an    array   ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array: "  +  this);	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
52	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite( "write  an  array: "  +  this);  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  this);	  _verifyValueWrite(   "write    an    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
53	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
54	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChild  [CE]  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChild  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChild	  	non-compiled	[CE]  	3	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
56	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
57	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+getMessage());	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
58	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite(. "Start  an  array   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "Start  an  array   ");  _verifyValueWrite(. "Start  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    an    array   ");    _verifyValueWrite(. "Start  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
59	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+getClass().getName());  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	        _reportError( "Current  context  not  an  ARRAY  but "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	7	2	add
60	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+getClass().getName());  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+getClass().getName());  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	        _reportError( "Current  context  not  an  ARRAY  but "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	7	2	add
61	[BUG]  [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite(. "End  an  array   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite(. "End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite(. "End  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( ".End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
63	[BUG]  [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {    [BUGGY]  _verifyValueWrite(   "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [BUGGY]    _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    an    array   ");    _verifyValueWrite( ".End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
