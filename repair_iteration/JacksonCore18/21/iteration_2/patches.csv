bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( "write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( "write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
2	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( "write  start  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( "write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( "write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ",write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( ",write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
4	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ",write  start  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ",write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( ",write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   "write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	23	2	add
6	[BUG]  [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   "write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	23	2	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ",Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   ",Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	17	1	replace
8	[BUG]  [BUGGY]  _verifyValueWrite( ",Start  an  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ",Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   ",Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	17	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ", ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ", ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   ",Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	17	1	replace
10	[BUG]  [BUGGY]  _verifyValueWrite( ", ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ", ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ", ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   ",Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	17	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array  value. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array  value. ");	  _verifyValueWrite(   "write    an    array    value   ");    	compilable	  [FE]  AssertionFailedError  	46	1	replace
12	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array  value. ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array  value. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array  value. ");	  _verifyValueWrite(   "write    an    array    value   ");    	compilable	  [FE]  AssertionFailedError  	46	1	replace
13	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
14	[BUG]  [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  UnsupportedOperationException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
15	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  	33	None	add
16	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
17	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [FE]  UnsupportedOperationException  [FE]        UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
18	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]          UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
19	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
20	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [FE]  UnsupportedOperationException  [FE]            UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	compilable	  [FE]  UnsupportedOperationException  	33	2	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ",End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   ",End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	20	2	add
22	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ",End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ",End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   ",End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ",End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	20	2	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ".write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	11	2	add
24	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ".write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	11	2	add
25	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChild();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext  =  _writeContext.createChild();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext  =  _writeContext.createChild();	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writeContext    =    _writeContext.createChild    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
26	[BUG]  [BUGGY]  _writeContext.writeEndArray();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext.writeEndArray();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext.writeEndArray();	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writeContext    =    _writeContext.createChild    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ",End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(,   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	22	1	replace
28	[BUG]  [BUGGY]  _verifyValueWrite( ",End  an  array ");  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ",End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(,   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	22	1	replace
29	[BUG]  [BUGGY]  _verifyValueWrite(, "End  an  array ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(, "End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(, "End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(,   "End    an    array       ");    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  an  array. ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(,   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	22	1	replace
31	[BUG]  [BUGGY]  _verifyValueWrite( "End  an  array. ");  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  an  array. ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(,   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	22	1	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Write  start  array: "  +  this);	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
33	[BUG]  [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Write  start  array: "  +  this);	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
34	[BUG]  [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  getMessage());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  getMessage());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Write  start  array: "  +  getMessage());	  _verifyValueWrite(   "Write    start    array   ");    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Write  start  array: ");	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
36	[BUG]  [BUGGY]  _verifyValueWrite( "Write  start  array: ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Write  start  array: ");	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ".End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   ".End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	62	2	add
38	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ".End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ".End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   ".End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( ".End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	62	2	add
39	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ".End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite(. ".End  an  array   ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   ".End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite(. ".End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   ".End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite(. ".End  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
40	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this);	          _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	30	None	replace
41	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext  =  _writeContext.createChildArrayContext(true);	          _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	30	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( "Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite( "Start  array   ");	  	compilable	  [FE]  AssertionFailedError  	41	2	add
43	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( "Start  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( "Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite( "Start  array   ");	  	compilable	  [FE]  AssertionFailedError  	41	2	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( ",Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite( ",Start  array   ");	  	compilable	  [FE]  AssertionFailedError  	41	2	add
45	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( ",Start  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite( ",Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite( ",Start  array   ");	  	compilable	  [FE]  AssertionFailedError  	41	2	add
46	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite(, "Start  array   ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite(, "Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite(, "Start  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  AssertionFailedError  	36	2	replace
48	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [FE]  AssertionFailedError  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  AssertionFailedError  	36	2	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  AssertionFailedError  	36	2	replace
50	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  AssertionFailedError  	36	2	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Start  array: "  +  this);	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
52	[BUG]  [BUGGY]  _verifyValueWrite( "Start  array: "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Start  array: "  +  this);	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  System.getProperty( "line.separator "));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: "  +  System.getProperty( "line.separator "));	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
54	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: "  +  System.getProperty( "line.separator "));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  System.getProperty( "line.separator "));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: "  +  System.getProperty( "line.separator "));	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: "  +  getClass());	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
56	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: "  +  getClass());	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
57	[BUG]  [BUGGY]  _verifyValueWrite(. "Start  an  array ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(. "Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(. "Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.StartArray ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".s.StartArray ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	58	1	replace
59	[BUG]  [BUGGY]  _verifyValueWrite( ".s.StartArray ");  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.StartArray ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".s.StartArray ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	58	1	replace
60	[BUG]  [BUGGY]  _verifyValueWrite( ".s.StartArray());  [CE]  unclosed  string  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.StartArray());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".s.StartArray());	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	non-compiled	[CE]  unclosed  string  literal	58	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	2	replace
62	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	2	replace
63	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   "write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	7	2	add
65	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   "write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	7	2	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   ",Start    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	16	2	add
67	[BUG]  [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   ",Start    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	16	2	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   ",Start    an    array       ");    _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	16	2	add
69	[BUG]  [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   ",Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   ",Start    an    array       ");    _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( ",Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	16	2	add
70	[BUG]  [BUGGY]  _verifyValueWrite(, "Start  an  array ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(, "Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(, "Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(,   "Start    an    array       ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",  Writer  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ",  Writer  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(,   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	15	1	replace
72	[BUG]  [BUGGY]  _verifyValueWrite( ",  Writer  an  array ");  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",  Writer  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ",  Writer  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(,   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	15	1	replace
73	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getClass().getSimpleName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_reportError( "Current  context  not  an  ARRAY  but "+getClass().getSimpleName());	          _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    	compilable	  [FE]  JsonGenerationException  	60	2	replace
74	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getClass().getSimpleName());  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getClass().getSimpleName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+getClass().getSimpleName());	          _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    	compilable	  [FE]  JsonGenerationException  	60	2	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( "Write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Write    start    array   ");    _verifyValueWrite( "Write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	43	2	add
76	[BUG]  [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( "Write  start  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( "Write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Write    start    array   ");    _verifyValueWrite( "Write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	43	2	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( ",Write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Write    start    array   ");    _verifyValueWrite( ",Write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	43	2	add
78	[BUG]  [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( ",Write  start  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite( ",Write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Write    start    array   ");    _verifyValueWrite( ",Write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	43	2	add
79	[BUG]  [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite(, "Write  start  array   ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Write  start  array   ");  _verifyValueWrite(, "Write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Write    start    array   ");    _verifyValueWrite(, "Write  start  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
80	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
81	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
82	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   "Start    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	13	2	add
84	[BUG]  [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   "Start    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	13	2	add
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( "write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( "write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
86	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( "write  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( "write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( "write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ",write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( ",write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
88	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ",write  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ",write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( ",write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ".write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( ".write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
90	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ".write  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array:   "  +  this);  _verifyValueWrite( ".write  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array:   "    +    this);    _verifyValueWrite( ".write  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	51	2	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	24	2	replace
92	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	24	2	replace
93	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
94	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( "End  array:   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array:   ");    _verifyValueWrite( "End  array:   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
96	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( "End  array:   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( "End  array:   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   ");    _verifyValueWrite( "End  array:   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( ",End  array:   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array:   ");    _verifyValueWrite( ",End  array:   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
98	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( ",End  array:   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite( ",End  array:   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   ");    _verifyValueWrite( ",End  array:   ");	  	compilable	  [FE]  AssertionFailedError  	3	2	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	8	2	replace
100	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	8	2	replace
101	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
102	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.n ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array.n ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
104	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array.n ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.n ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array.n ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.  Expected: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array.  Expected: ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
106	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array.  Expected: ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.  Expected: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array.  Expected: ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ".write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ".write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	25	2	add
108	[BUG]  [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ".write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ".write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ".write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ".write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	25	2	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( "End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( "End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
110	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( "End  array:   "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( "End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( "End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ",End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( ",End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
112	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ",End  array:   "  +  this);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ",End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( ",End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
113	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite(, "End  array:   "  +  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite(, "End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite(, "End  array:   "  +  this);	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
114	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY,  but "+getMessage());	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	2	replace
116	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	2	replace
117	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
118	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	26	2	replace
120	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	26	2	replace
121	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
122	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writeContext  =  createChildArrayContext();  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
123	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but   "+getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    _reportError( "Current  context  not  an  ARRAY  but   "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	59	2	add
124	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but   "+getClass().getName());  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but   "+getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    _reportError( "Current  context  not  an  ARRAY  but   "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	59	2	add
125	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but... "+getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    _reportError( "Current  context  not  an  ARRAY  but... "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	59	2	add
126	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but... "+getClass().getName());  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError( "Current  context  not  an  ARRAY  but... "+getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    _reportError( "Current  context  not  an  ARRAY  but... "+getClass().getName());	  	compilable	  [FE]  JsonGenerationException  	59	2	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	2	replace
128	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	2	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ",write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
130	[BUG]  [BUGGY]  _verifyValueWrite( ",write  start  an  array ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ",write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
131	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writeContext  =  new  JsonArrayContext();  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ",write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	27	2	add
133	[BUG]  [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ",write    an    array       ");    _verifyValueWrite( "write  an  array   ");  _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	27	2	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ",write    an    array       ");    _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	27	2	add
135	[BUG]  [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   ",write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( ",write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   ",write    an    array       ");    _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( ",write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	27	2	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	29	2	add
137	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	29	2	add
138	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	29	2	add
139	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  [FE]  JsonGenerationException  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	29	2	add
140	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.getChildArrayContext();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.getChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.getChildArrayContext();	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
141	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	35	2	add
142	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	35	2	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	35	2	add
144	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	35	2	add
145	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildobjectContext();  [CE]  cannot  find  symbol  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildobjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildobjectContext();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".s.End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
147	[BUG]  [BUGGY]  _verifyValueWrite( ".s.End  an  array ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".s.End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
148	[BUG]  [BUGGY]  _verifyValueWrite(. "End  an  array ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(. "End  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(. "End  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.End  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".s.End  an  array. ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
150	[BUG]  [BUGGY]  _verifyValueWrite( ".s.End  an  array. ");  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.End  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".s.End  an  array. ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  array: "  +  this);	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
152	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array: "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array: "  +  this);	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  array: ");	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
154	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array: ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array: ");	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
155	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array: "  +  getMessage());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: "  +  getMessage());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array: "  +  getMessage());	  _verifyValueWrite(   "write    start    array   ");    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ",write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ",write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
157	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ",write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ",write  start  an  array     ");  _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ",write    start    an    array       ");    _verifyValueWrite( "write  start  an  array   ");  _verifyValueWrite( ",write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	9	2	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( "write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( "write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
159	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( "write  start  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( "write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( "write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ",write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( ",write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
161	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ",write  start  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ",write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( ",write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ".write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( ".write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
163	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ".write  start  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  _verifyValueWrite( ".write  start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    array   ");    _verifyValueWrite( ".write  start  array   ");	  	compilable	  [FE]  AssertionFailedError  	37	2	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( "End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( "End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
165	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( "End  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( "End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( "End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ",End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( ",End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
167	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ",End  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ",End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( ",End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
168	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite(. "End  array   ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite(. "End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array   ");    _verifyValueWrite(. "End  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
170	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( "End  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( ",End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( ",End  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
172	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( ",End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( ",End  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( ",End  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
173	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
175	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
176	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writer.writeStartArray(this,  _outputBuffer);	          _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
177	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _cfgPrettyPrinter);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writer.writeStartArray(this,  _cfgPrettyPrinter);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writer.writeStartArray(this,  _cfgPrettyPrinter);	          _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
178	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writer.writeStartArray(this,  _outputTail);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writer.writeStartArray(this,  _outputTail);	          _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( "write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( "write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
180	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( "write  an  array.   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( "write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( "write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ".write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( ".write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
182	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ".write  an  array.   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ".write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( ".write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ",write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( ",write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
184	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ",write  an  array.   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array.   ");  _verifyValueWrite( ",write  an  array.   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array.   ");    _verifyValueWrite( ",write  an  array.   ");	  	compilable	  [FE]  AssertionFailedError  	47	2	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( "Started  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
186	[BUG]  [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Started  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( "Started  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
187	[BUG]  [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite(, "Started  an  array   ");  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite(, "Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite(, "Started  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( ",Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( ",Started  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
189	[BUG]  [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( ",Started  an  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( ",Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( ",Started  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Start  array: ");	  _verifyValueWrite(   "End    array:   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
191	[BUG]  [BUGGY]  _verifyValueWrite( "Start  array: ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Start  array: ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Start  array: ");	  _verifyValueWrite(   "End    array:   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: "  +  getClass().getName());	  _verifyValueWrite(   "End    array:   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
193	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass().getName());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: "  +  getClass().getName());	  _verifyValueWrite(   "End    array:   ");    	compilable	  [FE]  AssertionFailedError  	4	1	replace
194	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flush  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flush  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flush	  	non-compiled	[CE]  	55	None	add
195	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	55	None	add
196	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flu  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flu  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  _flu	  	non-compiled	[CE]  	55	None	add
197	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext.writeStartArray(this,  _outputBuffer);	          _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
198	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext.writeStartArray(this,  _outputTail);	          _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
199	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  this,  status);  [CE]  cannot  find  symbol  status  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  this,  status);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  this,  status);	  _verifyValueWrite(   "write    an    array:   "    +    this);    	non-compiled	[CE]  cannot  find  symbol  status	52	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array: "  +  getClass());	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
201	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  getClass());	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
202	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  getMessage());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  getMessage());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  getMessage());	  _verifyValueWrite(   "write    an    array:   "    +    this);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( "write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( "write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
204	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( "write  an  array  value   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( "write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( "write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ",write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( ",write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
206	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ",write  an  array  value   ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ",write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( ",write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ".write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( ".write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
208	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ".write  an  array  value   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  _verifyValueWrite( ".write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array    value   ");    _verifyValueWrite( ".write  an  array  value   ");	  	compilable	  [FE]  AssertionFailedError  	45	2	add
209	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  this,  status);  [CE]  cannot  find  symbol  status  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  this,  status);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  an  array: "  +  this,  status);	  _verifyValueWrite(   "write    start    an    array:   "    +    this);    	non-compiled	[CE]  cannot  find  symbol  status	40	None	replace
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  an  array: "  +  getClass());	  _verifyValueWrite(   "write    start    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	40	1	replace
211	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  getClass());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  an  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  an  array: "  +  getClass());	  _verifyValueWrite(   "write    start    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	40	1	replace
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Started  an  array: "  +  this);	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
213	[BUG]  [BUGGY]  _verifyValueWrite( "Started  an  array: "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array: "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  an  array: "  +  this);	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Started  an  array. ");	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
215	[BUG]  [BUGGY]  _verifyValueWrite( "Started  an  array. ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  an  array. ");	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  start  array: "  +  getClass());	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
217	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array: "  +  getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array: "  +  getClass());	  _verifyValueWrite(   "write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	38	1	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array  value "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array  value "  +  this);	  _verifyValueWrite(   "write    an    array    value   ");    	compilable	  [FE]  AssertionFailedError  	46	1	replace
219	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array  value "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array  value "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array  value "  +  this);	  _verifyValueWrite(   "write    an    array    value   ");    	compilable	  [FE]  AssertionFailedError  	46	1	replace
220	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array  value ",  status);  [CE]  cannot  find  symbol  status  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array  value ",  status);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array  value ",  status);	  _verifyValueWrite(   "write    an    array    value   ");    	non-compiled	[CE]  cannot  find  symbol  status	46	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Started  an  array "  +  this);	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
222	[BUG]  [BUGGY]  _verifyValueWrite( "Started  an  array "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  an  array "  +  this);	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "STARTED  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "STARTED  an  array ");	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
224	[BUG]  [BUGGY]  _verifyValueWrite( "STARTED  an  array ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "STARTED  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "STARTED  an  array ");	  _verifyValueWrite(   "Started    an    array   ");    	compilable	  [FE]  AssertionFailedError  	50	1	replace
225	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }  [CE]  constructor  WriterBasedJsonGenerator  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	non-compiled	[CE]  constructor  WriterBasedJsonGenerator  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	36	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Started  array ");	  _verifyValueWrite(   "End    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
227	[BUG]  [BUGGY]  _verifyValueWrite( "Started  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  array ");	  _verifyValueWrite(   "End    array   ");    	compilable	  [FE]  AssertionFailedError  	2	1	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Starting  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( "Starting  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
229	[BUG]  [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Starting  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite( "Starting  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite( "Starting  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	49	2	add
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	1	replace
231	[BUG]  [BUGGY]  _verifyValueWrite( ".write  start  an  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	1	replace
232	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  _  [CE]  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  _  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildObjectContext();  _	  	non-compiled	[CE]  	33	None	add
233	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _reportUnsupportedOperation();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  	33	None	add
234	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError(, "Current  context  not  an  ARRAY  but   "+getClass().getName());  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+getClass().getName());  _reportError(, "Current  context  not  an  ARRAY  but   "+getClass().getName());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+getClass().getName());    _reportError(, "Current  context  not  an  ARRAY  but   "+getClass().getName());	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
235	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _writeBuffer);  [CE]  cannot  find  symbol  _writeBuffer  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _writeContext.writeStartArray(this,  _writeBuffer);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_writeContext.writeStartArray(this,  _writeBuffer);	          _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol  _writeBuffer	32	None	replace
236	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  this.writeStartArray  =  _writeContext.createChildArrayContext();  [CE]  cannot  find  symbol  writeStartArray  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  this.writeStartArray  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();  this.writeStartArray  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  cannot  find  symbol  writeStartArray	29	None	add
237	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  this.writeEnd  =  _writeContext.createChildArrayContext();  [CE]  cannot  find  symbol  writeEnd  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  this.writeEnd  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();  this.writeEnd  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  cannot  find  symbol  writeEnd	29	None	add
238	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
239	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped());	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
240	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped);  [CE]  cannot  find  symbol  _currentEscaped  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currentEscaped);	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol  _currentEscaped	57	None	replace
241	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscape());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscape());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currentEscape());	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ".End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( ".End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
243	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ".End  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array   ");  _verifyValueWrite( ".End  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array   ");    _verifyValueWrite( ".End  array   ");	  	compilable	  [FE]  AssertionFailedError  	1	2	add
244	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createCh  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createCh  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createCh	  	non-compiled	[CE]  	55	None	add
245	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChild  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChild  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChild	  	non-compiled	[CE]  	55	None	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "[write  start  an  array] ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "[write  start  an  array] ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
247	[BUG]  [BUGGY]  _verifyValueWrite( "[write  start  an  array] ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "[write  start  an  array] ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "[write  start  an  array] ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "nwrite  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "nwrite  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
249	[BUG]  [BUGGY]  _verifyValueWrite( "nwrite  start  an  array ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "nwrite  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "nwrite  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	1	replace
250	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	non-compiled	[CE]  ';'  expected	53	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	compilable	  [FE]  AssertionFailedError  	53	1	replace
252	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	compilable	  [FE]  AssertionFailedError  	53	1	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ".write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( ".write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
254	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ".write  start  an  array:   "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  _verifyValueWrite( ".write  start  an  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    _verifyValueWrite( ".write  start  an  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
255	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _throwInternal();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	34	2	replace
256	[BUG]  [BUGGY]  _throwInternal();  [FE]  RuntimeException  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _throwInternal();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  RuntimeException  	34	2	replace
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.getProperty( "line.separator "));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array: "  +  System.getProperty( "line.separator "));	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
258	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.getProperty( "line.separator "));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.getProperty( "line.separator "));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  System.getProperty( "line.separator "));	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.identityHashCode(this));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array: "  +  System.identityHashCode(this));	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
260	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.identityHashCode(this));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array: "  +  System.identityHashCode(this));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array: "  +  System.identityHashCode(this));	  _verifyValueWrite(   "write    an    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	52	1	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",write  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ",write  an  array ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
262	[BUG]  [BUGGY]  _verifyValueWrite( ",write  an  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ",write  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ",write  an  array ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "nwrite  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "nwrite  an  array ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
264	[BUG]  [BUGGY]  _verifyValueWrite( "nwrite  an  array ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "nwrite  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "nwrite  an  array ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "[write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "[write  an  array   ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
266	[BUG]  [BUGGY]  _verifyValueWrite( "[write  an  array   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "[write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "[write  an  array   ");	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	1	replace
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "end  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "end  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   ".End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	63	1	replace
268	[BUG]  [BUGGY]  _verifyValueWrite( "end  an  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "end  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "end  an  array ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   ".End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	63	1	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	24	2	replace
270	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( "write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   "write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	24	2	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	8	2	replace
272	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	8	2	replace
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  System.identityHashCode(this));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "End  array: "  +  System.identityHashCode(this));	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
274	[BUG]  [BUGGY]  _verifyValueWrite( "End  array: "  +  System.identityHashCode(this));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "End  array: "  +  System.identityHashCode(this));  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "End  array: "  +  System.identityHashCode(this));	  _verifyValueWrite(   "End    array:   "    +    this);    	compilable	  [FE]  AssertionFailedError  	6	1	replace
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.  Expected  to  write  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "write  an  array.  Expected  to  write  an  array. ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
276	[BUG]  [BUGGY]  _verifyValueWrite( "write  an  array.  Expected  to  write  an  array. ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  an  array.  Expected  to  write  an  array. ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  an  array.  Expected  to  write  an  array. ");	  _verifyValueWrite(   "write    an    array.   ");    	compilable	  [FE]  AssertionFailedError  	48	1	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "START  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "START  array ");	  _verifyValueWrite(   "Start    array   ");    	compilable	  [FE]  AssertionFailedError  	42	1	replace
278	[BUG]  [BUGGY]  _verifyValueWrite( "START  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "START  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "START  array ");	  _verifyValueWrite(   "Start    array   ");    	compilable	  [FE]  AssertionFailedError  	42	1	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "Write  start  array: "  +  getClass());	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
280	[BUG]  [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Write  start  array: "  +  getClass());  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Write  start  array: "  +  getClass());	  _verifyValueWrite(   "Write    start    array   ");    	compilable	  [FE]  AssertionFailedError  	44	1	replace
281	[BUG]  [BUGGY]  &&(_writeContext!=  null  ||  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  &&(_writeContext!=  null  ||  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	&&(_writeContext!=  null  ||  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writeContext    =    _writeContext.createChild    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
282	[BUG]  [BUGGY]  &&(_writeContext!=  null  ||!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  &&(_writeContext!=  null  ||!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	&&(_writeContext!=  null  ||!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _verifyValueWrite( "write  start  an  array ");	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writeContext    =    _writeContext.createChild    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
283	[BUG]  [BUGGY]  &&(_writeContext!=  null))  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  &&(_writeContext!=  null))  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	&&(_writeContext!=  null))  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writeContext    =    _writeContext.createChild    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	14	2	replace
285	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	14	2	replace
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  else  {  _writeContext  =  null;  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  else  {  _writeContext  =  null;  }	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	14	2	replace
287	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  else  {  _writeContext  =  null;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  else  {  _writeContext  =  null;  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "Start  an  array ");  _verifyValueWrite( "Start  an  array ");  }  else  {  _writeContext  =  null;  }	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	14	2	replace
288	[BUG]  [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite(. "Start  array   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Start  array   ");  _verifyValueWrite(. "Start  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Start    array   ");    _verifyValueWrite(. "Start  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
289	[BUG]  [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  if(_verifyValueWrite( "write  an  array  value   ");  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  an  array  value   ");  if(_verifyValueWrite( "write  an  array  value   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    an    array    value   ");    if(_verifyValueWrite( "write  an  array  value   ");	  	non-compiled	[CE]  	45	None	add
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	          _writeContext    =    _writeContext.createChildArrayContext();    	compilable	  [FE]  AssertionFailedError  	30	2	replace
291	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	          _writeContext    =    _writeContext.createChildArrayContext();    	compilable	  [FE]  AssertionFailedError  	30	2	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   "Start    an    array       ");    _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	13	2	add
293	[BUG]  [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   "Start    an    array       ");    _verifyValueWrite( ",Start  an  array   ");  _verifyValueWrite( "Start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	13	2	add
294	[BUG]  [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "Start    an    array     ");    _verifyValueWrite(   "Start  an  array     ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "Start        an        array       ");        _verifyValueWrite(   "Start    an    array       ");    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	13	None	add
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	26	2	replace
296	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	26	2	replace
297	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ".write  an  array ");  }  else  {  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ".write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	2	replace
299	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	12	2	replace
300	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ".write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ".write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
301	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	56	None	replace
302	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }	          _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
303	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }	          _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
304	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	33	None	add
305	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writer!=  null)  {  _writeContext  =  _writer.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      UnsupportedOperationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _reportUnsupportedOperation();  if(_writer!=  null)  {  _writeContext  =  _writer.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _reportUnsupportedOperation();    if(_writer!=  null)  {  _writeContext  =  _writer.createChildArrayContext();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	33	None	add
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( ",write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   "write    start    an    array       ");    _verifyValueWrite( ",write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	7	2	add
307	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( ",write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   "write  start  an  array     ");  _verifyValueWrite( ",write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   "write    start    an    array       ");    _verifyValueWrite( ",write  start  an  array   ");  _verifyValueWrite( "write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	7	2	add
308	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChil  [CE]  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    if(_writeContext!=  null)  {  _verifyValueWrite(   "write  start  an  array     ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _flushBuffer();  }  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChil  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _flushBuffer();    }    _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array   ");  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChil	  	non-compiled	[CE]  	55	None	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	2	replace
310	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	10	2	replace
311	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( ",write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   ",write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( ".write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ".write    start    an    array       ");    _verifyValueWrite( ".write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	11	2	add
313	[BUG]  [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( ".write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    start    an    array     ");    _verifyValueWrite(   ".write  start  an  array     ");  _verifyValueWrite( ".write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        start        an        array       ");        _verifyValueWrite(   ".write    start    an    array       ");    _verifyValueWrite( ".write  start  an  array   ");  _verifyValueWrite( ".write  start  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	11	2	add
314	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  ';'  expected	37	None	add
315	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  array   ");  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    array   ");    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  array   ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  	37	None	add
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ".End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( ".End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
317	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ".End  array:   "  +  this);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   "  +  this);  _verifyValueWrite( ".End  array:   "  +  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   "    +    this);    _verifyValueWrite( ".End  array:   "  +  this);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
318	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();	  	non-compiled	[CE]  ';'  expected	35	None	add
319	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
320	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
321	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext()  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext()  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext()	  	non-compiled	[CE]  ';'  expected	35	None	add
322	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectCon  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectCon  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectCon	  	non-compiled	[CE]  ';'  expected	35	None	add
323	[BUG]  [BUGGY]  _verifyValueWrite( "write  start  array ",  status);  [CE]  cannot  find  symbol  status  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "write  start  array ",  status);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "write  start  array ",  status);	  _verifyValueWrite(   "write    start    array   ");    	non-compiled	[CE]  cannot  find  symbol  status	38	None	replace
324	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    start    an    array       ");    _verifyValueWrite(   "write    start    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	2	replace
326	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	compilable	  [FE]  AssertionFailedError  	28	2	replace
327	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  an  array ");  _verifyValueWrite( ",write  an  array ");  }  else  {  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    an    array       ");    _verifyValueWrite(   ",write    an    array       ");    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
329	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  writeStartArray();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  writeStartArray();  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
331	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  writeStartArray();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  writeStartArray();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  writeStartArray();  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  _writeContext  =  null;  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  _writeContext  =  null;  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
333	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  _writeContext  =  null;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  _writeContext  =  null;  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _verifyValueWrite( "End  an  array ");  _verifyValueWrite( "End  an  array ");  }  else  {  _writeContext  =  null;  }	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	19	2	replace
334	[BUG]  [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite(. "Started  an  array   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "Started  an  array   ");  _verifyValueWrite(. "Started  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "Started    an    array   ");    _verifyValueWrite(. "Started  an  array   ");	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
335	[BUG]  [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite(. "End  array:   ");  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "End  array:   ");  _verifyValueWrite(. "End  array:   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "End    array:   ");    _verifyValueWrite(. "End  array:   ");	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".s.Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	58	1	replace
337	[BUG]  [BUGGY]  _verifyValueWrite( ".s.Start  an  array ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".s.Start  an  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".s.Start  an  array ");	  _verifyValueWrite(       "Start    an    array       ");    _verifyValueWrite(.   "Start    an    array       ");    	compilable	  [FE]  AssertionFailedError  	58	1	replace
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "start  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( "start  array ");	  _verifyValueWrite(   "Start    array   ");    	compilable	  [FE]  AssertionFailedError  	42	1	replace
339	[BUG]  [BUGGY]  _verifyValueWrite( "start  array ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "start  array ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "start  array ");	  _verifyValueWrite(   "Start    array   ");    	compilable	  [FE]  AssertionFailedError  	42	1	replace
340	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
341	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChil  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChil  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChil	  	non-compiled	[CE]  	39	None	add
342	[BUG]  [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createCh  [CE]  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(   "write  start  an  array:   "  +  this);  if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createCh  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(   "write    start    an    array:   "    +    this);    if(_writeContext!=  null)  {  _verifyValueWrite( "write  start  an  array:   "  +  this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createCh	  	non-compiled	[CE]  	39	None	add
343	[BUG]  [BUGGY]  _verifyValueWrite( "Started  an  array ",  this);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,WriterBasedJsonGenerator)  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( "Started  an  array ",  this);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( "Started  an  array ",  this);	  _verifyValueWrite(   "Started    an    array   ");    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,WriterBasedJsonGenerator)	50	None	replace
344	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }  [CE]  constructor  WriterBasedJsonGenerator  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  new  WriterBasedJsonGenerator();  }	          _writeContext    =    _writeContext.createChildObjectContext();    	non-compiled	[CE]  constructor  WriterBasedJsonGenerator  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	36	None	replace
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
346	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
348	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
349	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  ';'  expected	29	None	add
350	[BUG]  [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext()  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]          _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext()  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	                _writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext()	  	non-compiled	[CE]  ';'  expected	29	None	add
351	[BUG]  [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	if(_writer!=  null)  {  _verifyValueWrite( "write  start  an  array ");  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  _verifyValueWrite(       "write    start    an    array       ");    if(_writeContext!=    null)    {    _verifyValueWrite(   "write    start    an    array       ");    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _writer.writeStartArray(this);    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
352	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscape);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_currentEscape);	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	compilable	  [FE]  JsonGenerationException  	57	2	replace
353	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscape);  [FE]  JsonGenerationException  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currentEscape);  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currentEscape);	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	compilable	  [FE]  JsonGenerationException  	57	2	replace
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   "write    an    array       ");    _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	23	2	add
355	[BUG]  [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "write    an    array     ");    _verifyValueWrite(   "write  an  array     ");  _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( "write  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "write        an        array       ");        _verifyValueWrite(   "write    an    array       ");    _verifyValueWrite( ",write  an  array   ");  _verifyValueWrite( "write  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	23	2	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite( ".   ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
357	[BUG]  [BUGGY]  _verifyValueWrite( ".   ");  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite( ".   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite( ".   ");	  _verifyValueWrite(       "End    an    array       ");    _verifyValueWrite(.   "End    an    array       ");    	compilable	  [FE]  AssertionFailedError  	61	1	replace
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	add	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
359	[BUG]  [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "End  an  array   ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {      [BUGGY]  _verifyValueWrite(     "End    an    array     ");    _verifyValueWrite(   "End  an  array     ");  _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "End  an  array   ");  [BUGGY]      _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	200	200	1	replace	_verifyValueWrite(       "End        an        array       ");        _verifyValueWrite(   "End    an    array       ");    _verifyValueWrite( "Start  an  array   ");  _verifyValueWrite( "End  an  array   ");	  	compilable	  [FE]  AssertionFailedError  	18	2	add
