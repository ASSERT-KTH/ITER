bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	        _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	5	2	add
2	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	5	2	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
4	[BUG]  [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
5	[BUG]  [BUGGY]      _writer.writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _writer.writeEndArray(this,  _writeContext.getEntryCount());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
6	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_outputTail);  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	        _reportError( "Current  context  not  an  ARRAY  but "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	5	2	add
7	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_outputTail);  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_outputTail);  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _reportError( "Current  context  not  an  ARRAY  but "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	5	2	add
8	[BUG]  [BUGGY]      _writer.writeEndArray(this);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.writeEndArray(this);  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _writer.writeEndArray(this);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';	  	compilable	  [FE]  AssertionFailedError  	3	2	add
10	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';	  	compilable	  [FE]  AssertionFailedError  	3	2	add
11	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
12	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
13	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
15	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
16	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
17	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
18	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
20	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
22	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	2	2	replace
24	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	2	2	replace
25	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  line  end  in  character  literal	2	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	1	2	add
27	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	1	2	add
28	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
29	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
30	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  'n';	  _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
32	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  'n';	  _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
34	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
35	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ');';	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
36	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    int  _outputBuffer[_outputTail++]  =  ';';	  	non-compiled	[CE]  ']'  expected	7	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
38	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  ','  +  1;	  _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
40	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ','  +  1;	  _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	2	2	replace
42	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	2	2	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	      	compilable	  [FE]  AssertionFailedError  	6	2	replace
44	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	      	compilable	  [FE]  AssertionFailedError  	6	2	replace
45	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';	  	non-compiled	[CE]  not  a  statement	3	None	add
46	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	3	None	add
47	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
48	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  ')'  expected	1	None	add
49	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
50	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
52	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
53	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
54	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
55	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
56	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
57	[BUG]  [BUGGY]      _writer.writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _writer.writeEndArray(this,  _writeContext.getTypeDesc());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
58	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount());  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writer.write(this,  _writeContext.getEntryCount());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount());	      	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)	6	None	replace
59	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail);	      	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)	6	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  '>';	  _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
61	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '>';	  _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
63	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
65	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
66	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	1	2	add
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	1	2	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
69	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
71	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
72	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	9	2	add
73	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	9	2	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
75	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
76	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
77	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '/';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
78	[BUG]  [BUGGY]      _writer.write(this,  _writeContext.getTypeDesc());  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String)  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(this,  _writeContext.getTypeDesc());  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	        _writer.write(this,  _writeContext.getTypeDesc());	  	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String)	5	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
80	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
81	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';';  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	add
82	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';	  	non-compiled	[CE]  unclosed  character  literal	7	None	add
83	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]    }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  ';'	  	non-compiled	[CE]  ';'  expected	7	None	add
