bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	68	None	add
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	68	2	add
3	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	68	2	add
4	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  ';'  expected	68	None	add
5	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',	  	non-compiled	[CE]  unclosed  character  literal	68	None	add
6	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','	  	non-compiled	[CE]  ';'  expected	68	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
8	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
9	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	43	None	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
11	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
13	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	43	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	33	2	add
15	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	33	2	add
16	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';	  	non-compiled	[CE]  unclosed  character  literal	33	None	add
17	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';	  	non-compiled	[CE]  unclosed  character  literal	33	None	add
18	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'	  	non-compiled	[CE]  ';'  expected	33	None	add
19	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '/';	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_flushBuffer()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  _writeContext.writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writeContext.writeEndArray(this,  _writeContext.getTypeDesc());	          _writer.writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
21	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getNameDesc());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _writeContext.getNameDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeEndArray(this,  _writeContext.getNameDesc());	          _writer.writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
22	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ';');    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
23	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':');  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':');	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ';');    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
24	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
25	[BUG]  [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_flushBuffer();	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
27	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_flushBuffer();	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
28	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  illegal  line  end  in  character  literal	16	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	16	2	replace
33	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	16	2	replace
34	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,char[])  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer);	  _writer.write(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,char[])	58	None	replace
35	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,int)  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount(),  _outputTail);	  _writer.write(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,int)	58	None	replace
36	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount()  -  1);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getEntryCount()  -  1);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount()  -  1);	  _writer.write(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)	58	None	replace
37	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount()  +  1);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getEntryCount()  +  1);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount()  +  1);	  _writer.write(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int)	58	None	replace
38	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  status);  [CE]  cannot  find  symbol  status  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  status);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail,  status);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  status	59	None	replace
39	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _cfgPrettyPrinter);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,PrettyPrinter)  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _cfgPrettyPrinter);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail,  _cfgPrettyPrinter);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,PrettyPrinter)	59	None	replace
40	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _currentEscape);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,SerializableString)  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _currentEscape);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail,  _currentEscape);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,SerializableString)	59	None	replace
41	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputEnd,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputEnd,  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputEnd,  _outputTail);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)	59	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
43	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
44	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	non-compiled	[CE]  incompatible  types	23	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
46	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
48	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
49	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc()    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
50	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
51	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_writeContext  =  _writeContext.getParent();	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    	compilable	  [FE]  NullPointerException  	67	2	replace
54	[BUG]  [BUGGY]  _writeContext  =  _writeContext.getParent();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writeContext  =  _writeContext.getParent();	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    	compilable	  [FE]  NullPointerException  	67	2	replace
55	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	66	2	add
56	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	66	2	add
57	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write	  	non-compiled	[CE]  ']'  expected	66	None	add
58	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
59	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();	  	non-compiled	[CE]  ';'  expected	66	None	add
60	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
62	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  ='}  ';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  ='}  ';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  ='}  ';	  _outputBuffer[_outputTail++]    =    '>';    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
63	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');	  _outputBuffer[_outputTail++]    =    '/';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    '/');    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
64	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  illegal  line  end  in  character  literal	36	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
66	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','	  	non-compiled	[CE]  ';'  expected	14	None	add
68	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
69	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  ';'  expected	14	None	add
70	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
71	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
72	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
73	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
74	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >>  _outputEnd))  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
75	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _outputBuffer);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeEndArray(this,  _outputBuffer);	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
76	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeEndArray(this,  _outputTail);	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
78	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
79	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	non-compiled	[CE]  incompatible  types	19	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
81	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	2	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
83	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
85	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
86	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	70	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
88	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
90	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
91	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ';';	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
92	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
94	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
95	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	64	None	add
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
97	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
99	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
100	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeStartArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeStartArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';'    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
101	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,int)  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getTypeDesc(),  _outputTail);	          _writer.write(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,int)	78	None	replace
102	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,char[])  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer);	          _writer.write(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,char[])	78	None	replace
103	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer,  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getTypeDesc(),  _outputBuffer,  _outputTail);	          _writer.write(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,char[],int)	78	None	replace
104	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '/';    	non-compiled	[CE]  not  a  statement	45	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '/';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
106	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '/';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
107	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '/';    	non-compiled	[CE]  illegal  line  end  in  character  literal	45	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
109	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	69	2	replace
110	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
111	[BUG]  [BUGGY]  _writeContext.writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writeContext.writeEndArray(this,  _writeContext.getEntryCount());	          _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
112	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);	          _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
113	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	74	None	add
114	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	74	None	add
115	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/	  	non-compiled	[CE]  unclosed  character  literal	74	None	add
116	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';	  	non-compiled	[CE]  ';'  expected	74	None	add
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.clearAndGetParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_writeContext  =  _writeContext.clearAndGetParent();	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  NullPointerException  	81	2	replace
118	[BUG]  [BUGGY]  _writeContext  =  _writeContext.clearAndGetParent();  [FE]  NullPointerException  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.clearAndGetParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writeContext  =  _writeContext.clearAndGetParent();	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  NullPointerException  	81	2	replace
119	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ');';	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
120	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
121	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
122	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.toString());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.toString());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
123	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.toString());  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.toString());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.toString());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
124	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.length);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.length);	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
125	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.length);  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.length);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer.length);	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
126	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer,  _outputTail);  [CE]  method  _reportError  in  class  JsonGenerator  cannot  be  applied  to  given  types;  [FE]        JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer,  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer,  _outputTail);	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	non-compiled	[CE]  method  _reportError  in  class  JsonGenerator  cannot  be  applied  to  given  types;	7	None	replace
127	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer);	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
128	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer);  [FE]  JsonGenerationException  [FE]          JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_outputBuffer);	          _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    	compilable	  [FE]  JsonGenerationException  	7	2	replace
129	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
130	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  SHORT_WRITE)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  SHORT_WRITE)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  1)  <  SHORT_WRITE)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
131	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
132	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
134	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
135	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/'  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/'	  	non-compiled	[CE]  ';'  expected	9	None	add
136	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/');  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/');	  	non-compiled	[CE]  ';'  expected	9	None	add
137	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++].  =  '/';  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++].  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++].  =  '/';	  	non-compiled	[CE]  <identifier>  expected	9	None	add
138	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
139	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	1	2	add
140	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	1	2	add
141	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getName());  [CE]  cannot  find  symbol  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getName());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getName());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
143	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
144	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
145	[BUG]  [BUGGY]  ||(AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
147	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
148	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  unclosed  character  literal	37	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
150	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
151	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'	  	non-compiled	[CE]  ';'  expected	37	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    '>';    _outputBuffer[_outputTail++]  =  '>';	  	compilable	  [FE]  AssertionFailedError  	60	2	add
153	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  _outputBuffer[_outputTail++]  =  '>';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    _outputBuffer[_outputTail++]  =  '>';	  	compilable	  [FE]  AssertionFailedError  	60	2	add
154	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>';	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
155	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '>';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '>';	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
156	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '>';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '>';	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
157	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	79	None	add
158	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	79	None	add
159	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';	  	non-compiled	[CE]  unclosed  character  literal	79	None	add
160	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');	  	non-compiled	[CE]  unclosed  character  literal	79	None	add
161	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&    _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
162	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  ':	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&    _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
163	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&    _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
165	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
167	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
168	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _reportError( "  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _reportError( "  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _reportError( "	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
169	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
170	[BUG]  [BUGGY]  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
171	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  int  cannot  be  dereferenced	52	None	replace
172	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd.writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd.writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd.writeEndArray(this,  _writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  int  cannot  be  dereferenced	52	None	replace
173	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
174	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  ':	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
176	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    	compilable	  [FE]  AssertionFailedError  	63	2	replace
178	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    	compilable	  [FE]  AssertionFailedError  	63	2	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
180	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
181	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	21	None	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
183	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	2	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
185	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
186	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	27	2	replace
188	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	27	2	replace
189	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
190	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
191	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	31	2	add
193	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	31	2	add
194	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  'n';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  'n';	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
195	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  'n';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  'n';	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
196	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	26	2	add
198	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	26	2	add
199	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':'  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':'	  	non-compiled	[CE]  ';'  expected	26	None	add
200	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':',  _outputBuffer[_outputTail++]  =  ':';  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':',  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':',  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  ';'  expected	26	None	add
201	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '/';	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inObject()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
202	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
203	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	6	2	add
204	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	6	2	add
205	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but... "+_outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    _reportError( "Current  context  not  an  ARRAY  but... "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	6	2	add
206	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but... "+_outputTail);  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  _reportError( "Current  context  not  an  ARRAY  but... "+_outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    _reportError( "Current  context  not  an  ARRAY  but... "+_outputTail);	  	compilable	  [FE]  JsonGenerationException  	6	2	add
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
208	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
209	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
210	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputBuffer[_outputTail++]  =  ','  +  1;  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    int  _outputBuffer[_outputTail++]  =  ','  +  1;	  	non-compiled	[CE]  ']'  expected	39	None	add
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  2;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
212	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  2;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
214	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
215	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	3	None	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
217	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
219	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	72	2	add
221	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	72	2	add
222	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _write	  	non-compiled	[CE]  ']'  expected	72	None	add
223	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	add
224	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd;  [FE]  ArrayIndexOutOfBoundsException  [FE]        NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputTail  =  _outputEnd;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	72	2	add
225	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.get  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.get  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.get	  	non-compiled	[CE]  ';'  expected	72	None	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	17	2	replace
227	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	17	2	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
229	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
230	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  ')'  expected	48	None	replace
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  ','  +  2;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
232	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ','  +  2;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  ','  +  4;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
234	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ','  +  4;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	1	add
236	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	1	add
237	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	41	None	add
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	2	add
239	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	2	add
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	1	add
241	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	41	1	add
242	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output).writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
243	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getEntryCount());  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail.writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  int  cannot  be  dereferenced	51	None	replace
244	[BUG]  [BUGGY]  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_outputTail).writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
245	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputHead.writeEndArray(this,  _writeContext.getEntryCount());  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputHead.writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputHead.writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  int  cannot  be  dereferenced	51	None	replace
246	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());  [CE]  cannot  find  symbol  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
247	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  ';'  expected	62	None	add
248	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	62	None	add
249	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':	  	non-compiled	[CE]  unclosed  character  literal	62	None	add
250	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	62	None	add
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  '0';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	32	2	replace
252	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '0';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	32	2	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
254	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
256	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
257	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/';	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
258	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '/	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
259	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
260	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	25	None	replace
261	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
262	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    	non-compiled	[CE]  ';'  expected	75	None	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
264	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    	compilable	  [FE]  AssertionFailedError  	75	2	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
266	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	70	2	add
267	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  ']'  expected  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  	non-compiled	[CE]  ']'  expected	72	None	add
268	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();	  	non-compiled	[CE]  ';'  expected	72	None	add
269	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	72	2	add
270	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	72	2	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
272	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
273	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
274	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getLocalName());  [CE]  cannot  find  symbol  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getLocalName());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getLocalName());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
275	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
276	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ':';  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ':';	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  not  a  statement	24	None	replace
277	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';');  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ';');	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ';');    	non-compiled	[CE]  ';'  expected	54	None	replace
278	[BUG]  [BUGGY]  ;  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ;  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	;  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ';');	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ';');    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
279	[BUG]  [BUGGY]  ||(AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  '/');	  _outputBuffer[_outputTail++]    =    '/';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    '/');    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
280	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/');  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/');	  _outputBuffer[_outputTail++]    =    '/';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    '/');    	non-compiled	[CE]  ';'  expected	47	None	replace
281	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
282	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  endpointsToUpdate)  {  _flushBuffer();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  endpointsToUpdate)  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  endpointsToUpdate)  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  ';'  expected	55	None	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
284	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	64	2	add
285	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  return  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  return  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  return  else  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
286	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'ufffd';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'ufffd';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  'ufffd';	  _outputBuffer[_outputTail++]    =    'n';    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]  =  'r';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	32	2	replace
288	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  'r';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	32	2	replace
289	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _writeContext);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeEndArray(this,  _writeContext);	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	56	2	replace
291	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	56	2	replace
292	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
293	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ';';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  illegal  line  end  in  character  literal	56	None	replace
294	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
295	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
296	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  (_outputTail++]  =  ','  +  1;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  (_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    (_outputTail++]  =  ','  +  1;	  	non-compiled	[CE]  ')'  expected	39	None	add
297	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  AssertionFailedError)_output).printStackTrace();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  AssertionFailedError)_output).printStackTrace();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  AssertionFailedError)_output).printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
298	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent();	  	non-compiled	[CE]  ';'  expected	74	None	add
299	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent()  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent()  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.clearAndGetParent()	  	non-compiled	[CE]  ';'  expected	74	None	add
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
301	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
302	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputTail  +=  '>')  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputTail  +=  '>')  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ':';  _outputTail  +=  '>')  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	27	2	replace
304	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	27	2	replace
305	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  ';'  expected	27	None	replace
306	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    ||(_outputTail    >=    _outputEnd))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
307	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail,  _outputEnd);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)	59	None	replace
308	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail,  _outputHead);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)	59	None	replace
309	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail  +  1);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)	59	None	replace
310	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  ';'  expected	38	None	replace
311	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  not  a  statement	20	None	replace
312	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputHead);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,int)  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getTypeDesc(),  _outputHead);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getTypeDesc(),  _outputHead);	          _writer.write(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,String,int)	78	None	replace
313	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
314	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
315	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  <  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  <  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead  <  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
316	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  	non-compiled	[CE]  not  a  statement	31	None	add
317	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());	  	non-compiled	[CE]  not  a  statement	31	None	add
318	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();	  	non-compiled	[CE]  not  a  statement	31	None	add
319	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>'  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '>'	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
321	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
322	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  ';'  expected	15	None	replace
323	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext  =  new  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext  =  new  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext  =  new	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
324	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  ='{  ';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  ='{  ';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  ='{  ';	  _outputBuffer[_outputTail++]    =    '>';    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
325	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  ='<  ';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  ='<  ';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  ='<  ';	  _outputBuffer[_outputTail++]    =    '>';    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
326	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
327	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(this);  _outputBuffer[_outputTail++]  =  ':	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(this);    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
328	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';	  	non-compiled	[CE]  <identifier>  expected	14	None	add
329	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writer!=  null)  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    if(_writer!=  null)  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }	  	compilable	  [FE]  JsonGenerationException  	1	2	add
330	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writer!=  null)  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writer!=  null)  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    if(_writer!=  null)  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }	  	compilable	  [FE]  JsonGenerationException  	1	2	add
331	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but... "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    _reportError( "Current  context  not  an  ARRAY  but... "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	1	2	add
332	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but... "+_writeContext.getTypeDesc());  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  _reportError( "Current  context  not  an  ARRAY  but... "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    _reportError( "Current  context  not  an  ARRAY  but... "+_writeContext.getTypeDesc());	  	compilable	  [FE]  JsonGenerationException  	1	2	add
333	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ']'  expected	36	None	replace
334	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  null;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	46	None	replace
335	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	46	None	replace
336	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
337	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
338	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	68	None	add
339	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
340	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARR  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARR  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARR	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
341	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
342	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';'	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';'    	non-compiled	[CE]  ';'  expected	83	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	34	2	replace
344	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	34	2	replace
345	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ';'  expected	34	None	replace
346	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	66	2	add
347	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  	compilable	  [FE]  NullPointerException  	66	2	add
348	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  	non-compiled	[CE]  ']'  expected	66	None	add
349	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  ')'  expected	48	None	replace
350	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ':';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
351	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'	  	non-compiled	[CE]  ';'  expected	79	None	add
352	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
353	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
354	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
355	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
356	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++].  =  ':';  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++].  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++].  =  ':';	  	non-compiled	[CE]  <identifier>  expected	26	None	add
357	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';    	non-compiled	[CE]  unclosed  character  literal	82	None	replace
358	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':'  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':'	  	non-compiled	[CE]  ';'  expected	62	None	add
359	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  '>')  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  '>')  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  '>')  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	71	None	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	62	2	add
361	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ':';    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	62	2	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
363	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
364	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
365	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output2).writeEndArray(this,  _writeContext.getEntryCount());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output2).writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_output2).writeEndArray(this,  _writeContext.getEntryCount());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
366	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _writeContext.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _writeContext.  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _writeContext.	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  <identifier>  expected	38	None	replace
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
368	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	80	2	replace
369	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  	non-compiled	[CE]  <identifier>  expected	14	None	add
370	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].append(',');  [CE]  char  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].append(',');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].append(',');	  	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	add
371	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }	          _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
372	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeStartArray(this,  _writeContext.getEntryCount());  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeStartArray(this,  _writeContext.getEntryCount());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeStartArray(this,  _writeContext.getEntryCount());  }	          _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
373	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeString(_outputBuffer,  _outputTail);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeString(_outputBuffer,  _outputTail);  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_writer!=  null)  {  _writer.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  _writer.writeString(_outputBuffer,  _outputTail);  }	          _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
374	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ':';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	39	2	add
376	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	39	2	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    int  _outputTail  =  _writeContext.getEntryCount();  _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
378	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  _outputBuffer[_outputTail++]  =  ','  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    int  _outputTail  =  _writeContext.getEntryCount();  _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    int  _outputTail  =  _writeContext.getEntryCount();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	39	2	add
380	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  int  _outputTail  =  _writeContext.getEntryCount();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    int  _outputTail  =  _writeContext.getEntryCount();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	39	2	add
381	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
382	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
384	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	26	2	add
385	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  }	  	non-compiled	[CE]  <identifier>  expected	26	None	add
386	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  ';'  expected	26	None	add
387	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inObject()))  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inObject()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
388	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _writeContext  =  _writeContext.getParent();	  	compilable	  [FE]  NullPointerException  	66	2	add
389	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ':';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _writeContext  =  _writeContext.getParent();	  	compilable	  [FE]  NullPointerException  	66	2	add
390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '>';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
391	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '>';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '>';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
392	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '>';  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '>';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '>';	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
394	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
395	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _writeContext  =  _writeContext.getParent();	  	compilable	  [FE]  NullPointerException  	72	2	add
396	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _writeContext  =  _writeContext.getParent();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _writeContext  =  _writeContext.getParent();	  	compilable	  [FE]  NullPointerException  	72	2	add
397	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getNext();  }	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
398	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.getParent();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  NullPointerException  	34	2	replace
399	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.getParent();  }  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.getParent();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  NullPointerException  	34	2	replace
400	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeName());  [CE]  cannot  find  symbol  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeName());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeName());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
401	[BUG]  [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++],  '/');  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++],  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	((  AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++],  '/');	  _outputBuffer[_outputTail++]    =    '/';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    '/');    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
402	[BUG]  [BUGGY]  ||(_outputTail++refers  _outputEnd)&&  _outputBuffer[_outputTail++]  =  '/');  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail++refers  _outputEnd)&&  _outputBuffer[_outputTail++]  =  '/');  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail++refers  _outputEnd)&&  _outputBuffer[_outputTail++]  =  '/');	  _outputBuffer[_outputTail++]    =    '/';    ((    AssertionFailedError)_output).printStackTrace(_outputBuffer[_outputTail++]    =    '/');    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
403	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_outputEnd))  {  _outputBuffer[_outputTail++]  =  '	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
404	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  '	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    else    {    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
405	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
406	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd)&&  _writeContext.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
407	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.AUTO_CLOSE_SOURCE)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.AUTO_CLOSE_SOURCE)))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _writeContext.isEnabled(Feature.AUTO_CLOSE_SOURCE)))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
408	[BUG]  [BUGGY]  ||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
409	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '/';	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '/';    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
410	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_writeContext.inArray()))  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
411	[BUG]  [BUGGY]  ||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _writeContext.inArray()))  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc()    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
412	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [CE]  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc()	  _outputBuffer[_outputTail++]    =    '/';    ||(_outputTail    >=    _outputEnd    &&!_writeContext.inArray()))    {    _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc()    	non-compiled	[CE]  	77	None	replace
413	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  _writer.write(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int,int)	59	None	replace
414	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }	  	compilable	  [FE]  JsonGenerationException  	6	2	add
415	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }	  	compilable	  [FE]  JsonGenerationException  	6	2	add
416	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  JsonGenerationException  	6	2	add
417	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  else  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_outputTail);  if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  else  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_outputTail);    if(_outputTail  >=  _outputEnd)  {  _reportError( "Current  context  not  an  ARRAY  but   "+_outputTail);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  JsonGenerationException  	6	2	add
418	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
419	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputBuffer[	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    _outputBuffer[_outputTail++]    =    ';    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
420	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ':';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
421	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ':';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ':';    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
422	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/	  	non-compiled	[CE]  unclosed  character  literal	9	None	add
423	[BUG]  [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer,  _outputTail);  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.write(this,  _writeContext.getEntryCount(),  _outputBuffer,  _outputTail);	  _writer.write(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,char[],int)	58	None	replace
424	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _writeContext.  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _writeContext.  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _writeContext.	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
425	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  	non-compiled	[CE]  <identifier>  expected	37	None	add
426	[BUG]  [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||  _outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
428	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }	  	compilable	  [FE]  AssertionFailedError  	74	2	add
429	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/'  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '/';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/';  }  _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/'  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        '/';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '/';    }    _outputBuffer[_outputTail++]  =  '/';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '/'	  	non-compiled	[CE]  ';'  expected	74	None	add
430	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writeContext.inArray())  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    if(_writeContext.inArray())  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }	  	compilable	  [FE]  JsonGenerationException  	1	2	add
431	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writeContext.inArray())  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_writeContext.getTypeDesc());  if(_writeContext.inArray())  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    if(_writeContext.inArray())  {  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  }	  	compilable	  [FE]  JsonGenerationException  	1	2	add
432	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
433	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
434	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  23)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  23)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  23)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
435	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  21)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  21)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  '/';  ((  _outputTail  +  21)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    '/';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	46	None	replace
436	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    	non-compiled	[CE]  ';'  expected	73	None	replace
437	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.getParent();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    	non-compiled	[CE]  ';'  expected	73	None	replace
438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
439	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	79	2	add
440	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]  =  ',';  ((  AssertionFailedError)_outputbuffer).writeEndArray(this,  _writeContext.getTypeDesc());	  _outputBuffer[_outputTail++]    =    ',';    ((    AssertionFailedError)_outputTail).writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
441	[BUG]  [BUGGY]  int  _outputBuffer[_outputTail++]  =  ';';  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  int  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	int  _outputBuffer[_outputTail++]  =  ';';	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ']'  expected	36	None	replace
442	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =	  _outputBuffer[_outputTail++]    =    ':';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.getParent();    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
444	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	31	2	add
445	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount());	  	non-compiled	[CE]  not  a  statement	31	None	add
446	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	31	None	add
447	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _writeContext.getEntryCount();	  	non-compiled	[CE]  not  a  statement	31	None	add
448	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _writeContext.getTypeDesc());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeStartArray(this,  _writeContext.getTypeDesc());  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	_writer.writeStartArray(this,  _writeContext.getTypeDesc());	          _writer.writeEndArray(this,    _writeContext.getTypeDesc());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
449	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext.  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '/';  _outputBuffer[_outputTail++]  =  '/';  }  else  {  _writeContext.	  _outputBuffer[_outputTail++]    =    '/';    _outputBuffer[_outputTail++]    =    '/';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
450	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  <  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
451	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  <  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	224	224	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  if(_outputEnd  <  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    }    else    if(_outputEnd    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	18	2	replace
