bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputHead  -  _outputTail;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	add	int  room  =  _outputHead  -  _outputTail;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  StringIndexOutOfBoundsException  	83	4	replace
2	[BUG]  [BUGGY]  int  room  =  _outputHead  -  _outputTail;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputHead  -  _outputTail;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	replace	int  room  =  _outputHead  -  _outputTail;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  StringIndexOutOfBoundsException  	83	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  1;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	add	int  room  =  _outputEnd  -  _outputTail  +  1;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  AssertionFailedError  	83	1	replace
4	[BUG]  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  1;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	replace	int  room  =  _outputEnd  -  _outputTail  +  1;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  AssertionFailedError  	83	1	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  len;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	add	int  room  =  _outputEnd  -  _outputTail  +  len;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	1	replace
6	[BUG]  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  len;  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputTail  +  len;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	replace	int  room  =  _outputEnd  -  _outputTail  +  len;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputBuffer.length;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	add	int  room  =  _outputEnd  -  _outputBuffer.length;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  AssertionFailedError  	83	1	replace
8	[BUG]  [BUGGY]  int  room  =  _outputEnd  -  _outputBuffer.length;  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]  int  room  =  _outputEnd  -  _outputBuffer.length;  [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	replace	int  room  =  _outputEnd  -  _outputBuffer.length;	int  room  =  _outputEnd  -  _outputTail;  	compilable	  [FE]  AssertionFailedError  	83	1	replace
9	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  room  [FE]            AssertionFailedError  [CONTEXT]  public  void  writeRaw(String  text)  throws  IOException  {  int  len  =  text.length();  [BUGGY]    [BUGGY]    if  (room  ==  0)  {  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	407	407	1	replace	  	int  room  =  _outputEnd  -  _outputTail;  	non-compiled	[CE]  cannot  find  symbol  room	83	None	replace
