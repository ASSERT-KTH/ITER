bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  illegal  line  end  in  character  literal	47	None	replace
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	91	None	replace
3	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ','  +  2;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
5	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ','  +  2;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ','  +  4;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
7	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ','  +  4;	  _outputBuffer[_outputTail++]    =    ','    +    1;    	compilable	  [FE]  AssertionFailedError  	26	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	44	2	add
9	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	44	2	add
10	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';	  	non-compiled	[CE]  unclosed  character  literal	44	None	add
11	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ';';	  	non-compiled	[CE]  unclosed  character  literal	44	None	add
12	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';'	  	non-compiled	[CE]  ';'  expected	44	None	add
13	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',');  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ',');	  _outputBuffer[_outputTail++]    =    ',';    (_outputBuffer[_outputTail++]    =    ',');    	non-compiled	[CE]  ';'  expected	22	None	replace
14	[BUG]  [BUGGY]  (_outputBuffer[_outputTail++]  =  ',');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  (_outputBuffer[_outputTail++]  =  ',');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	(_outputBuffer[_outputTail++]  =  ',');	  _outputBuffer[_outputTail++]    =    ',';    (_outputBuffer[_outputTail++]    =    ',');    	non-compiled	[CE]  not  a  statement	22	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
16	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
18	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
19	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	90	None	add
20	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();	  	non-compiled	[CE]  ';'  expected	90	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    2;    _outputBuffer[_outputTail++]  =  '['  +  2;	  	compilable	  [FE]  AssertionFailedError  	27	2	add
22	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    _outputBuffer[_outputTail++]  =  '['  +  2;	  	compilable	  [FE]  AssertionFailedError  	27	2	add
23	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2);	  	non-compiled	[CE]  not  a  statement	27	None	add
24	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;	  	non-compiled	[CE]  not  a  statement	27	None	add
25	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  2;  [CE]  :  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  2;	  	non-compiled	[CE]  :  expected	27	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
27	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
29	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
30	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ']';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ']';	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
31	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ']';  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ']';	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
32	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  null;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  null;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	75	None	replace
33	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  nu  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  nu  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  nu	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  ';'  expected	75	None	replace
34	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
35	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
37	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputTail  =  _outputEnd;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  _outputTail  =  _outputEnd;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	add
39	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputTail  =  _outputEnd;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputTail  =  _outputEnd;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  _outputTail  =  _outputEnd;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
41	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	78	2	add
43	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	78	2	add
44	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();	  	non-compiled	[CE]  ';'  expected	78	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
46	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
47	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ':';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  unclosed  character  literal	14	None	add
48	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':'  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':'	  	non-compiled	[CE]  ';'  expected	14	None	add
49	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ':';  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  unclosed  character  literal	14	None	add
50	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext.writeStartArray(this,  _outputBuffer);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
51	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext.writeStartArray(this,  _outputTail);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
52	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputMaxContiguous);  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeStartArray(this,  _outputMaxContiguous);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext.writeStartArray(this,  _outputMaxContiguous);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	34	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
54	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  _outputHead,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
56	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputHead,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
57	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _status);  [CE]  cannot  find  symbol  _status  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _status);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputTail,  _status);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  _status	102	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputEnd,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  _outputEnd,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
59	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputEnd,  _outputTail);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputEnd,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputEnd,  _outputTail);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
60	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _currentEscape);  [CE]  no  suitable  method  found  for  write(char[],int,SerializableString)  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _currentEscape);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputTail,  _currentEscape);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int,SerializableString)	102	None	replace
61	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	65	None	replace
62	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	65	None	replace
63	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	65	None	replace
64	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  ';'  expected	56	None	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	56	2	add
66	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	56	2	add
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	56	None	add
68	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	56	None	add
69	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','	  	non-compiled	[CE]  ';'  expected	56	None	add
70	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	96	None	replace
71	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  ='}  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  ='}  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  ='}	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  unclosed  character  literal	96	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	49	2	replace
73	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	49	2	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	49	2	replace
75	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	49	2	replace
76	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  JsonGenerationException  	49	2	replace
77	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  JsonGenerationException  	49	2	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	compilable	  [FE]  AssertionFailedError  	95	2	replace
79	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	compilable	  [FE]  AssertionFailedError  	95	2	replace
80	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  ';'  expected	95	None	replace
81	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '0';    _outputBuffer[_outputTail++]  =  '0';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
83	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  _outputBuffer[_outputTail++]  =  '0';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    _outputBuffer[_outputTail++]  =  '0';	  	compilable	  [FE]  AssertionFailedError  	37	2	add
84	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]  =  '0';  [CE]  unexpected  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]  =  '0';	  	non-compiled	[CE]  unexpected  type	37	None	add
85	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++];  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++];  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++];	  	non-compiled	[CE]  not  a  statement	37	None	add
86	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '0'  :  _outputBuffer[_outputTail++]);	  	non-compiled	[CE]  not  a  statement	37	None	add
87	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ');';	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
88	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
89	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
91	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
93	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
94	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  JsonGenerationException  	19	2	replace
95	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  JsonGenerationException  	19	2	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
97	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
98	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	99	None	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
100	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
102	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
103	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  _outputBuffer[_outputTail++]  =  ';';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
104	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  SHORT_WRITE))  {  _outputBuffer[_outputTail++]  =  ';';  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	97	2	add
106	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	97	2	add
107	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  ']'  expected	97	None	add
108	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out	  	non-compiled	[CE]  ']'  expected	97	None	add
109	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild	  	non-compiled	[CE]  ';'  expected	97	None	add
110	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _	  	non-compiled	[CE]  ']'  expected	97	None	add
111	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	7	None	replace
112	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  ';'  expected	7	None	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	48	2	add
114	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	48	2	add
115	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ');';  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  unclosed  character  literal	48	None	add
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	48	2	add
117	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	48	2	add
118	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':'	  	non-compiled	[CE]  ';'  expected	48	None	add
119	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ',';    	non-compiled	[CE]  not  a  statement	58	None	replace
120	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ',';    	non-compiled	[CE]  illegal  line  end  in  character  literal	58	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ',';    	compilable	  [FE]  AssertionFailedError  	58	2	replace
122	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ',';    	compilable	  [FE]  AssertionFailedError  	58	2	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
124	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
125	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	non-compiled	[CE]  incompatible  types	1	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
127	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
129	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
131	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
132	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	83	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
134	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
136	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ')';	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
138	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ')';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ')';	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
140	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
142	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  AssertionFailedError  	17	2	replace
143	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  JsonGenerationException  	17	2	replace
144	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  throw  new  JsonGenerationException( " ");  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	compilable	  [FE]  JsonGenerationException  	17	2	replace
145	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	92	None	add
146	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';	  	non-compiled	[CE]  ';'  expected	92	None	add
147	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	92	None	add
148	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']	  	non-compiled	[CE]  unclosed  character  literal	92	None	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	23	2	add
150	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	23	2	add
151	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';	  	non-compiled	[CE]  not  a  statement	23	None	add
152	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ':';  [CE]  :  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ':';	  	non-compiled	[CE]  :  expected	23	None	add
153	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	23	None	add
154	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    int    _outputBuffer[_outputTail++]    =    ']';    	non-compiled	[CE]  ']'  expected	13	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    int    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	13	2	replace
156	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    int    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	13	2	replace
157	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	35	2	add
158	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();	  	compilable	  [FE]  JsonGenerationException  	35	2	add
159	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  'else'  without  'if'  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  'else'  without  'if'	35	None	add
160	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ||(_writeContext!=  null  &&  _writeContext.hasChildren()))  {  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ||(_writeContext!=  null  &&  _writeContext.hasChildren()))  {  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    ||(_writeContext!=  null  &&  _writeContext.hasChildren()))  {  _writeContext  =  _writeContext.createChildObjectContext();	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
161	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  'else'  without  'if'  [FE]          JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();	  	non-compiled	[CE]  'else'  without  'if'	35	None	add
162	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'n';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	71	None	replace
163	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    'n';    	non-compiled	[CE]  illegal  line  end  in  character  literal	10	None	replace
164	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    'n';    	non-compiled	[CE]  not  a  statement	10	None	replace
165	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    'n';    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
167	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
168	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	3	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
170	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
172	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
173	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
174	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	59	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
176	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
178	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  2;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
179	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	69	None	add
180	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	69	None	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
182	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	69	2	add
183	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	69	None	add
184	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	69	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
186	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '(';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '(';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
188	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '(';  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '(';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  '(';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
189	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ')';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  '].';  _outputBuffer[_outputTail++]  =  ')';	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
190	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ')';  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  '],';  _outputBuffer[_outputTail++]  =  ')';	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
191	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
192	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'ufffd')  {  _flushBuffer();  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'ufffd')  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'ufffd')  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _flushBuffer();    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
193	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'n')  {  _flushBuffer();  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'n')  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  'n')  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _flushBuffer();    	non-compiled	[CE]  ';'  expected	20	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
195	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
196	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	66	None	add
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
198	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
200	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
201	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]);    	non-compiled	[CE]  ';'  expected	9	None	replace
202	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]);    	non-compiled	[CE]  illegal  line  end  in  character  literal	9	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	41	2	replace
204	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	41	2	replace
205	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
206	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	non-compiled	[CE]  illegal  line  end  in  character  literal	41	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writer.write('n');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	105	2	add
208	[BUG]  [BUGGY]          _writer.write('n');  _writer.write('n');  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writer.write('n');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	105	2	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write('n');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    _writeContext  =  _writeContext.createChildArrayContext();  _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	105	2	add
210	[BUG]  [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write('n');  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write('n');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    _writeContext  =  _writeContext.createChildArrayContext();  _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	105	2	add
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('n');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('n');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
212	[BUG]  [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('n');  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('n');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('n');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('-');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('-');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
214	[BUG]  [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('-');  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('-');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('-');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	105	2	add
216	[BUG]  [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	105	2	add
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	6	2	replace
218	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	6	2	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	6	2	replace
220	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	6	2	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
222	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
224	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
226	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	40	2	replace
227	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	79	None	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
229	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
231	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
232	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext(this);  [CE]  method  createChildObjectContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildObjectContext(this);	  _writeContext    =    _writeContext.createChildObjectContext();    	non-compiled	[CE]  method  createChildObjectContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	36	None	replace
233	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ' ",';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ' ",';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ' ",';	  _outputBuffer[_outputTail++]    =    '   "';    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
234	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildObjectContext();  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	85	None	replace
235	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
236	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ']';    	non-compiled	[CE]  not  a  statement	64	None	replace
237	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ']';    	non-compiled	[CE]  illegal  line  end  in  character  literal	64	None	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ']';    	compilable	  [FE]  AssertionFailedError  	64	2	replace
239	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ']';    	compilable	  [FE]  AssertionFailedError  	64	2	replace
240	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	60	None	add
241	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	60	None	add
242	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';	  	non-compiled	[CE]  unclosed  character  literal	60	None	add
243	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ');	  	non-compiled	[CE]  unclosed  character  literal	60	None	add
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
245	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
246	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	24	2	replace
248	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	24	2	replace
249	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  illegal  line  end  in  character  literal	24	None	replace
250	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	non-compiled	[CE]  ';'  expected	88	None	add
251	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()	88	None	add
252	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[	  	non-compiled	[CE]  unclosed  character  literal	88	None	add
253	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  [CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()	88	None	add
254	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1	  	non-compiled	[CE]  ';'  expected	88	None	add
255	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  end)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  end)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  end)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	74	None	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	82	2	replace
257	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	82	2	replace
258	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
259	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  =  0))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  =  0))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputEnd  <  =  0))  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
260	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '(';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '(';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '(';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	77	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	5	2	add
262	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	5	2	add
263	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'	  	non-compiled	[CE]  ';'  expected	5	None	add
264	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  ='m';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  ='m';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	5	2	add
266	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  ='m';  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  ='m';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  ='m';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	5	2	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
268	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
269	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	76	None	add
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
271	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
273	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
275	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
277	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
278	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  writeStartArray();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  writeStartArray();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  StackOverflowError  	15	2	replace
279	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  writeStartArray();  }  [FE]  StackOverflowError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  writeStartArray();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  writeStartArray();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  StackOverflowError  	15	2	replace
280	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _outputBuffer);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeEndArray(this,  _outputBuffer);	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
281	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeEndArray(this,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeEndArray(this,  _outputTail);	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
282	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(this,  _outputBuffer,  _outputTail);	          _writer.write(this);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)	53	None	replace
283	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  this);  [CE]  no  suitable  method  found  for  write(char[],WriterBasedJsonGenerator)  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  this);	          _writer.write(this);    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],WriterBasedJsonGenerator)	53	None	replace
284	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[])  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(this,  _outputBuffer);	          _writer.write(this);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[])	53	None	replace
285	[BUG]  [BUGGY]  _writer.write(this,  name);  [CE]  cannot  find  symbol  name  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  name);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(this,  name);	          _writer.write(this);    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	2	add
287	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    _outputBuffer[_outputTail++]  =  ','  +  1;	  	compilable	  [FE]  AssertionFailedError  	25	2	add
288	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;	  	non-compiled	[CE]  not  a  statement	25	None	add
289	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++]);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++]);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++]);	  	non-compiled	[CE]  not  a  statement	25	None	add
290	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++];  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++];  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  ','  +  1  :  _outputBuffer[_outputTail++];	  	non-compiled	[CE]  not  a  statement	25	None	add
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    _outputBuffer[_outputTail++]  =  '['  +  4;	  	compilable	  [FE]  AssertionFailedError  	29	2	add
292	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  _outputBuffer[_outputTail++]  =  '['  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    _outputBuffer[_outputTail++]  =  '['  +  4;	  	compilable	  [FE]  AssertionFailedError  	29	2	add
293	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4;	  	non-compiled	[CE]  not  a  statement	29	None	add
294	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  4;  [CE]  :  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  4;	  	non-compiled	[CE]  :  expected	29	None	add
295	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  4);	  	non-compiled	[CE]  not  a  statement	29	None	add
296	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ';';    	non-compiled	[CE]  not  a  statement	63	None	replace
297	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	non-compiled	[CE]  not  a  statement	72	None	replace
298	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  ' "';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  ' "';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '   "';    _outputBuffer[_outputTail++]  =  ' "';	  	non-compiled	[CE]  unclosed  character  literal	54	None	add
299	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  '. "';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  '. "';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '   "';    _outputBuffer[_outputTail++]  =  '. "';	  	non-compiled	[CE]  unclosed  character  literal	54	None	add
300	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	33	None	replace
301	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext(true);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	33	None	replace
302	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	62	None	replace
303	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	62	None	replace
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
305	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
306	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  ']'  expected	81	None	add
307	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out	  	non-compiled	[CE]  ']'  expected	81	None	add
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
309	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
310	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _output  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _output  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _output	  	non-compiled	[CE]  ']'  expected	81	None	add
311	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    'n';    	non-compiled	[CE]  not  a  statement	68	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	94	2	add
313	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	94	2	add
314	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _	  	non-compiled	[CE]  ']'  expected	94	None	add
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	94	2	add
316	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	94	2	add
317	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _out	  	non-compiled	[CE]  ']'  expected	94	None	add
318	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChild	  	non-compiled	[CE]  ';'  expected	94	None	add
319	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  1);	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1);    	non-compiled	[CE]  ';'  expected	43	None	replace
320	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1);    	non-compiled	[CE]  not  a  statement	43	None	replace
321	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1);    	non-compiled	[CE]  ';'  expected	43	None	replace
322	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1);    	non-compiled	[CE]  ';'  expected	43	None	replace
323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
324	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	103	1	add
326	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writer.write(_outputBuffer,  0,  _outputTail);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	103	1	add
327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	103	2	add
328	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	103	2	add
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	2	add
330	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	2	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
332	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
334	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
335	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	84	None	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'r';    _outputBuffer[_outputTail++]  =  'r';	  	compilable	  [FE]  AssertionFailedError  	51	2	add
337	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  _outputBuffer[_outputTail++]  =  'r';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    _outputBuffer[_outputTail++]  =  'r';	  	compilable	  [FE]  AssertionFailedError  	51	2	add
338	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';	  	non-compiled	[CE]  not  a  statement	51	None	add
339	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  _outputBuffer[_outputTail++]  =  'r';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  _outputBuffer[_outputTail++]  =  'r';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    _outputBuffer[_outputTail++]  =  'r';  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  'else'  without  'if'	51	None	add
340	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'r'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'r'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'r'  :  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	51	None	add
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	18	2	add
342	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	18	2	add
343	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ','	  	non-compiled	[CE]  ';'  expected	18	None	add
344	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',');  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  ';'  expected	18	None	add
345	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =,';  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  0,  _outputHead);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
347	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputHead);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  0,  _outputHead);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputEnd);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  0,  _outputEnd);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
349	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputEnd);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  0,  _outputEnd);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  0,  _outputTail  +  1);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
351	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  0,  _outputTail  +  1);	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
352	[BUG]  [BUGGY]  _writer.write(this,  0,  _outputTail);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,int)  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  0,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(this,  0,  _outputTail);	          _writer.write(_outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,int,int)	104	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
354	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
355	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	73	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
357	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
359	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
360	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeStartArray(this,  _outputBuffer);	  _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
361	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeStartArray(this);  }	  _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
362	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputTail);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeStartArray(this,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeStartArray(this,  _outputTail);	  _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	32	2	add
364	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	32	2	add
365	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
366	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext  ==  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext  ==  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    ||  _writeContext  ==  null)  {  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
367	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
368	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    '0';    	non-compiled	[CE]  illegal  line  end  in  character  literal	38	None	replace
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }	  _outputBuffer[_outputTail++]    =    '0';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
370	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }	  _outputBuffer[_outputTail++]    =    '0';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
371	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n':  _outputBuffer[_outputTail++];  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'n':  _outputBuffer[_outputTail++];  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'n':  _outputBuffer[_outputTail++];	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++];    	non-compiled	[CE]  ';'  expected	8	None	replace
372	[BUG]  [BUGGY]  ||(_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	||(_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    '['    +    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
373	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '[  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '[  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '[	  	non-compiled	[CE]  unclosed  character  literal	86	None	add
374	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	86	None	add
375	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	86	None	add
376	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +	  	non-compiled	[CE]  ';'  expected	86	None	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
378	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
379	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	71	None	replace
380	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  '>')  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  '>')  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ';';  _outputTail  +=  '>')  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	100	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	56	2	add
382	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	56	2	add
383	[BUG]  [BUGGY]  _writeContext  =  _writer.createChildArrayContext();  [CE]  cannot  find  symbol  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writer.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writer.createChildArrayContext();	  _writeContext    =    _writeContext.createChildObjectContext();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
384	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	non-compiled	[CE]  ';'  expected	40	None	replace
385	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  :  '['  +  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  :  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  :  '['  +  1;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1;    	non-compiled	[CE]  not  a  statement	41	None	replace
386	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  JsonGenerationException  	103	2	add
387	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  JsonGenerationException  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  JsonGenerationException  	103	2	add
388	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }	  _outputBuffer[_outputTail++]    =    ',';    (_outputBuffer[_outputTail++]    =    ',');    	non-compiled	[CE]  not  a  statement	22	None	replace
389	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }  else  {  _flushBuffer();  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    (_outputBuffer[_outputTail++]    =    ',');    	non-compiled	[CE]  not  a  statement	22	None	replace
390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	66	2	add
391	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	66	2	add
392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
393	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
394	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
396	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
397	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  ']')  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  ']')  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  +=  ']')  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	74	None	replace
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	42	2	replace
399	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	42	2	replace
400	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  ';'  expected	95	None	replace
401	[BUG]  [BUGGY]  if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  ';'  expected	95	None	replace
402	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    int    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  ']'  expected	21	None	replace
403	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    int    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  ']'  expected	21	None	replace
404	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '0';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '0';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '0';	  	non-compiled	[CE]  not  a  statement	37	None	add
405	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	37	None	add
406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
407	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
408	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  ';'  expected	98	None	replace
409	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createCh  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createCh  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createCh	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  ';'  expected	98	None	replace
410	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	non-compiled	[CE]  variable  _outputTail  is  already  defined  in  method  writeStartArray()	88	None	add
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
412	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
414	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	81	2	add
415	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  not  a  statement	93	None	replace
416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	94	2	add
417	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	94	2	add
418	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	94	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	94	2	add
420	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	94	2	add
421	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _output  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _output  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _output	  	non-compiled	[CE]  ')'  expected	94	None	add
422	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';'	  	non-compiled	[CE]  ';'  expected	60	None	add
423	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ']'  expected	47	None	replace
424	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ']'  expected	47	None	replace
425	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    int    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ']'  expected	47	None	replace
426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
427	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ')';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	16	2	add
428	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ')';  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ')';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ')';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ')';	  	non-compiled	[CE]  <identifier>  expected	16	None	add
429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
430	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	83	2	add
432	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	83	2	add
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
434	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
436	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	83	2	add
437	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]);    	non-compiled	[CE]  not  a  statement	9	None	replace
438	[BUG]  [BUGGY]  (_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  (_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	(_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]);    	non-compiled	[CE]  not  a  statement	9	None	replace
439	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']'  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']'	  	non-compiled	[CE]  ';'  expected	11	None	add
440	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'ufffd';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'ufffd';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'ufffd';	  _outputBuffer[_outputTail++]    =    'r';    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
441	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ')';    	non-compiled	[CE]  ';'  expected	17	None	replace
442	[BUG]  [BUGGY]  _writer.write('n',  'n');  [CE]  no  suitable  method  found  for  write(char,char)  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write('n',  'n');  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write('n',  'n');	          _writer.write('n');    	non-compiled	[CE]  no  suitable  method  found  for  write(char,char)	106	None	replace
443	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ','  +  1;	  	non-compiled	[CE]  not  a  statement	25	None	add
444	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	25	None	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
446	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
448	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	5	2	add
449	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  System.arraycopy(_outputBuffer,  0,  _outputTail,  _outputBuffer,  _outputTail  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  System.arraycopy(_outputBuffer,  0,  _outputTail,  _outputBuffer,  _outputTail  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  System.arraycopy(_outputBuffer,  0,  _outputTail,  _outputBuffer,  _outputTail	  	non-compiled	[CE]  ')'  expected	5	None	add
450	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n'	  	non-compiled	[CE]  ';'  expected	5	None	add
451	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	78	2	add
453	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	78	2	add
454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
455	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
457	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	78	2	add
458	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++].  =  ',';	  	non-compiled	[CE]  <identifier>  expected	18	None	add
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '0';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
460	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '0';    	compilable	  [FE]  AssertionFailedError  	38	2	replace
461	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	65	None	replace
462	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	65	None	replace
463	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    ||  _writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
464	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  JsonGenerationException  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  cannot  find  symbol  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  JsonGenerationException  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    JsonGenerationException  _writeContext  =  _writeContext.createChildObjectContext();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
465	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ((  _writeContext  =  _writeContext.createChildObjectContext());  [CE]  ')'  expected  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  ((  _writeContext  =  _writeContext.createChildObjectContext());  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    ((  _writeContext  =  _writeContext.createChildObjectContext());	  	non-compiled	[CE]  ')'  expected	35	None	add
466	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]    =    'n';    	non-compiled	[CE]  ';'  expected	6	None	replace
467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	76	2	add
468	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	76	2	add
469	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	76	None	add
470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
471	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
472	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
473	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	92	2	add
475	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	92	2	add
476	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
477	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']'  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']'  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']'	  	non-compiled	[CE]  ';'  expected	92	None	add
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	99	2	add
479	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	99	2	add
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
481	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
483	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputEnd  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
484	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  end)  {  _flushBuffer();  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  end)  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ',';  _outputTail  +=  end)  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    ||    _outputTail    >=    _outputEnd)    {    _flushBuffer();    	non-compiled	[CE]  ';'  expected	20	None	replace
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
486	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
487	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	62	None	replace
488	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }  else  {  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }  else  {  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }  else  {  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	62	None	replace
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  '/';	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	24	2	replace
490	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '/';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '/';	  _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	24	2	replace
491	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	non-compiled	[CE]  ';'  expected	12	None	replace
492	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	non-compiled	[CE]  ';'  expected	19	None	replace
493	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext(-1);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	33	None	replace
494	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '   "';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  unclosed  character  literal	54	None	add
495	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    ((  _outputTail  +  2)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  2;	  	non-compiled	[CE]  not  a  statement	27	None	add
496	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  _flushBuffer()  :  _outputBuffer[_outputTail++]  =  '['  +  2;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  ((  _outputTail  +  2)  >=  _outputEnd)?  _flushBuffer()  :  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    ((  _outputTail  +  2)  >=  _outputEnd)?  _flushBuffer()  :  _outputBuffer[_outputTail++]  =  '['  +  2;	  	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	27	None	add
497	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
498	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
499	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	73	2	add
500	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	73	2	add
501	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	73	None	add
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
503	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
504	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >	  	non-compiled	[CE]  ')'  expected	73	None	add
505	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  [CE]  unclosed  character  literal  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ');';    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
507	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	14	2	add
508	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ':';  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++].  =  ':';	  	non-compiled	[CE]  <identifier>  expected	14	None	add
509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
510	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
512	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	45	2	replace
513	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]    =    ';';    	non-compiled	[CE]  ';'  expected	45	None	replace
514	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputHead);  [CE]  no  suitable  method  found  for  write(char[],int)  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputHead);	          _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int)	102	None	replace
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  _outputTail,  _outputEnd);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
516	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputEnd);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputTail,  _outputEnd);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
517	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
518	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >>  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >>  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  (_outputTail  +  1)  >>  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
519	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
520	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  (_outputTail  +  1  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  nu	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	59	None	replace
521	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	non-compiled	[CE]  ';'  expected	82	None	replace
522	[BUG]  [BUGGY]  if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	non-compiled	[CE]  ';'  expected	82	None	replace
523	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	non-compiled	[CE]  ';'  expected	15	None	replace
524	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  'else'  without  'if'	32	None	add
525	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	90	2	add
526	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	90	2	add
527	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	90	None	add
528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
529	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
531	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	90	2	add
532	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _writeContext.writeStartArray(this);  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEn  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _writeContext.writeStartArray(this);  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEn  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _writeContext.writeStartArray(this);  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEn	  	non-compiled	[CE]  ')'  expected	90	None	add
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
534	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
536	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
537	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
538	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
539	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  return  else  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
540	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ':';	  	non-compiled	[CE]  not  a  statement	23	None	add
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
542	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
543	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	23	None	add
544	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'r';	  	non-compiled	[CE]  not  a  statement	51	None	add
545	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail  +  1)  >=  _outputEnd)?  'r'  :  _outputBuffer[_outputTail++]  =  'r';  [CE]  unexpected  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  ((  _outputTail  +  1)  >=  _outputEnd)?  'r'  :  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    ((  _outputTail  +  1)  >=  _outputEnd)?  'r'  :  _outputBuffer[_outputTail++]  =  'r';	  	non-compiled	[CE]  unexpected  type	51	None	add
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	69	2	add
547	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	69	2	add
548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	69	2	add
549	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	69	2	add
550	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	69	None	add
551	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++];    	non-compiled	[CE]  not  a  statement	8	None	replace
552	[BUG]  [BUGGY]  (_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  (_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	(_outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++];    	non-compiled	[CE]  not  a  statement	8	None	replace
553	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
554	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();	  	non-compiled	[CE]  ';'  expected	97	None	add
555	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	97	None	add
556	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  ';';	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  not  a  statement	2	None	replace
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	86	2	add
558	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	86	2	add
559	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _writer.writeStartArray(this);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _writer.writeStartArray(this);	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
560	[BUG]  [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write('n');  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write('n');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write('n');  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	105	None	add
561	[BUG]  [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer  =  new  JsonWriter();  _writer.write('n');  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer  =  new  JsonWriter();  _writer.write('n');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    if(_writer!=  null)  {  _writer  =  new  JsonWriter();  _writer.write('n');  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	105	None	add
562	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    int    _outputBuffer[_outputTail++]    =    ']';    	non-compiled	[CE]  ']'  expected	13	None	replace
563	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputHead);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(this,  _outputBuffer,  _outputHead);	          _writer.write(this);    	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator,char[],int)	53	None	replace
564	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	81	None	add
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
566	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	81	2	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	18	2	add
568	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	18	2	add
569	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	add
570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	18	2	add
571	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	18	2	add
572	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';	  _outputBuffer[_outputTail++]    =    ',';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ',';    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	32	2	add
574	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	32	2	add
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	32	2	add
576	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildArrayContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  }	  	compilable	  [FE]  AssertionFailedError  	32	2	add
577	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
578	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
579	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
580	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext    =    _writeContext.createChildObjectContext();    if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  	compilable	  [FE]  JsonGenerationException  	35	2	add
581	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
582	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	65	None	replace
583	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  	non-compiled	[CE]  ']'  expected	78	None	add
584	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  	  	non-compiled	[CE]  ';'  expected	78	None	add
585	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';	  _outputBuffer[_outputTail++]    =    ']';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    ']';    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
586	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  line  end  in  character  literal	7	None	replace
587	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeStartArray(this,  _outputBuffer,  _outputTail);	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
588	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
589	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
591	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ';';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	60	2	add
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('S');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('S');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
593	[BUG]  [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('S');  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write('n');  if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('S');  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write('n');    if(_writer!=  null)  {  _writer.write('n');  }  else  {  _writer.write('S');  }	  	compilable	  [FE]  AssertionFailedError  	105	2	add
594	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	100	None	replace
595	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	94	None	add
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'r';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'r';  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
597	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'r';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'r';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'r';  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
599	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
601	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'r';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	2	add
602	[BUG]  [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  null);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  null);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  null);	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  not  a  statement	2	None	replace
603	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
604	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	2	add
605	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
606	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	14	2	add
607	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
608	[BUG]  [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _writer.write(_outputBuffer,  0,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	                _writer.write(_outputBuffer,    0,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	103	1	add
609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
610	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd));    _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	80	2	replace
611	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
613	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
614	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
615	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    	compilable	  [FE]  AssertionFailedError  	98	2	replace
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
617	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    '['    +    1;    }    _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
618	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
619	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	82	2	replace
620	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ',';  }	  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ',';    }    	compilable	  [FE]  AssertionFailedError  	82	2	replace
621	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this);  }  else  {  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeEndArray(this);  }  else  {  _writer.writeStartArray(this);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _writer.writeEndArray(this);  }  else  {  _writer.writeStartArray(this);  }	          _writer.writeEndArray(this);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
622	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	add
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
624	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
626	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ':';  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
628	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	2	add
629	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
630	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
632	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	66	2	add
633	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _output  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _output  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    'n';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _output	  	non-compiled	[CE]  ']'  expected	69	None	add
634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
635	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ',';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	19	2	replace
636	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1);  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    :    '['    +    1);    	non-compiled	[CE]  ';'  expected	43	None	replace
637	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  null;  }	  _outputBuffer[_outputTail++]    =    ';';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  incompatible  types	62	None	replace
638	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	add
639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	48	2	add
640	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        _outputBuffer[_outputTail++]    =    ':';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	48	2	add
641	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _writeContext.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _writeContext.writeStartArray(this);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '0';  }  else  {  _writeContext.writeStartArray(this);  }	  _outputBuffer[_outputTail++]    =    '0';    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
642	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
643	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
644	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  :  null;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  :  null;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _outputBuffer[_outputTail++]  :  null;  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    null;    	non-compiled	[CE]  not  a  statement	75	None	replace
645	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	74	None	replace
646	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ');';  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  unclosed  character  literal	3	None	add
647	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  this;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  this;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  this;	  _outputBuffer[_outputTail++]    =    '['    +    4;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	30	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
649	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _writer.write(_outputBuffer,  0,  _outputTail);  }	          _writer.write(_outputBuffer,    0,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	104	2	replace
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_flushBuffer();	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
651	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _flushBuffer();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_flushBuffer();	  if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail++]    =    ';';    }    else    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
653	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ':';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ':';    	compilable	  [FE]  AssertionFailedError  	15	2	replace
654	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	5	None	add
655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writer.write(_outputBuffer,  _outputTail,  _outputHead);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
656	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputHead);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.write(_outputBuffer,  _outputTail,  _outputHead);	          _writer.write(_outputBuffer,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	102	2	replace
657	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[	  	non-compiled	[CE]  ';'  expected	88	None	add
658	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '[	  	non-compiled	[CE]  ';'  expected	88	None	add
659	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        int    _outputTail    =    _outputEnd    -    _outputBuffer.length;    _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1	  	non-compiled	[CE]  ';'  expected	88	None	add
660	[BUG]  [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  :  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;	  _outputBuffer[_outputTail++]    =    '['    +    1;    ((    _outputTail++)    <    _outputEnd)?    _outputBuffer[_outputTail++]    =    '['    +    1;    	non-compiled	[CE]  :  expected	42	None	replace
661	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    =    'n'    :    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    2;    	compilable	  [FE]  AssertionFailedError  	28	2	replace
663	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    '['    +    2;    	compilable	  [FE]  AssertionFailedError  	28	2	replace
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }	  _outputBuffer[_outputTail++]    =    '['    +    2;    	compilable	  [FE]  AssertionFailedError  	28	2	replace
665	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }	  _outputBuffer[_outputTail++]    =    '['    +    2;    	compilable	  [FE]  AssertionFailedError  	28	2	replace
666	[BUG]  [BUGGY]  _writeContext.writeEndArray();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext.writeEndArray();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext.writeEndArray();	  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    '    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
667	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
668	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        'n';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	76	2	add
669	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
670	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  2;  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
671	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    2;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  2;	  	compilable	  [FE]  AssertionFailedError  	27	2	add
672	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  2;	  	compilable	  [FE]  AssertionFailedError  	27	2	add
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
674	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    2;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	27	2	add
675	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writer!=  null)  {  _writer.writeStartArray(this);  }  else  {  _writer.writeEndArray();  }	  _writer.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
676	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  '(';  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '   "';  _outputBuffer[_outputTail++]  =  '(';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '   "';    _outputBuffer[_outputTail++]  =  '(';	  	non-compiled	[CE]  unclosed  character  literal	54	None	add
677	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	56	2	add
678	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _writeContext  =  _writeContext.createChildArrayContext();	  	compilable	  [FE]  AssertionFailedError  	56	2	add
679	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ',';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ',';    }    _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',	  	non-compiled	[CE]  unclosed  character  literal	56	None	add
680	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _outputBuffer);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _outputBuffer);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this,  _outputBuffer);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	33	None	replace
681	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(null);  [CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(null);  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext(null);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  method  createChildArrayContext  in  class  JsonWriteContext  cannot  be  applied  to  given  types;	33	None	replace
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	97	2	add
683	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	97	2	add
684	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  	non-compiled	[CE]  ';'  expected	97	None	add
685	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ';';    }    _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[	  	non-compiled	[CE]  ']'  expected	97	None	add
686	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  JsonGenerationException  	36	2	replace
687	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }	  _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  JsonGenerationException  	36	2	replace
688	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]      JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext.writeStartArray(this);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _writeContext.writeStartArray(this);  }	  _writeContext    =    _writeContext.createChildObjectContext();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
689	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _flushBuffer();  }	  _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  JsonGenerationException  	36	2	replace
690	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _writeContext  =  _writeContext.createChildObjectContext();  }  else  {  _flushBuffer();  }	  _writeContext    =    _writeContext.createChildObjectContext();    	compilable	  [FE]  JsonGenerationException  	36	2	replace
691	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _writeContext    =    _writeContext.createChildArrayContext();    _outputBuffer[_outputTail++]    =    ']';    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
692	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
693	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
695	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	99	2	add
696	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ');';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ');';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ';';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail++]  =  ');';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  unclosed  character  literal	99	None	add
697	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus	  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '0';  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
699	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '0';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '0';  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '0';  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
701	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '0';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '0';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '0';  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
702	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '0';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	37	None	add
703	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  _outputBuffer[_outputTail++]    =    'n';    ((    _outputTail    +    1)    >=    _outputEnd)?    _outputBuffer[_outputTail++]    :    'n';    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
704	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  	  	non-compiled	[CE]  ';'  expected	90	None	add
705	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _	  	non-compiled	[CE]  ']'  expected	90	None	add
706	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _writeContext.  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _writeContext.  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  else  {  _writeContext.	  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]    =    '['    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
707	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
708	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ','  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
710	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ','    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
711	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writer.writeStartArray(this);  }	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
712	[BUG]  [BUGGY]  if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_writeContext!=  null)  {  _writeContext.writeStartArray(this);  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _writeContext  =  _writeContext.createChildArrayContext();  }	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
714	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  4;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '['  +  4;  }	  	compilable	  [FE]  AssertionFailedError  	29	2	add
715	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    4;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  4;	  	compilable	  [FE]  AssertionFailedError  	29	2	add
716	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    4;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  4;	  	compilable	  [FE]  AssertionFailedError  	29	2	add
717	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flus	  _outputBuffer[_outputTail++]    =    'n';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	79	None	replace
718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	92	2	add
719	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	92	2	add
720	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flush  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flush  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        ']';        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail++]    =    ']';    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flush	  	non-compiled	[CE]  ']'  expected	92	None	add
721	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputTail  +=  endIndex(1);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputTail  +=  endIndex(1);  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ']';  _outputTail  +=  endIndex(1);  }	  _outputBuffer[_outputTail++]    =    ']';    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
722	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]      }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]        =        '['        +        1;        _outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	add
