bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
4	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail++]  =  ';';  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail++]    =    ';';    	compilable	  [FE]  AssertionFailedError  	12	2	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	3	2	add
6	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    _outputBuffer[_outputTail++]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	3	2	add
7	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	3	None	add
8	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++];	  	non-compiled	[CE]  not  a  statement	3	None	add
9	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]);	  	non-compiled	[CE]  not  a  statement	3	None	add
10	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  	non-compiled	[CE]  not  a  statement	3	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
12	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ']';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
13	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  int  _outputBuffer[_outputTail++]  =  ']';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    int  _outputBuffer[_outputTail++]  =  ']';	  	non-compiled	[CE]  ']'  expected	7	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
15	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
17	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  _outputBuffer[_outputTail++]  =  ')';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    _outputBuffer[_outputTail++]  =  ')';	  	compilable	  [FE]  AssertionFailedError  	7	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
19	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    _outputBuffer[_outputTail++]  =  ',';	  	compilable	  [FE]  AssertionFailedError  	9	2	add
20	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    ||  _outputTail  >=  _outputEnd)  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
21	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  int  _outputBuffer[_outputTail++]  =  ',';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    int  _outputBuffer[_outputTail++]  =  ',';	  	non-compiled	[CE]  ']'  expected	9	None	add
22	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  (_outputBuffer[_outputTail++]  =  ',');  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    (_outputBuffer[_outputTail++]  =  ',');	  	non-compiled	[CE]  not  a  statement	9	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
24	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ':';	  _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ','  +  1;	  _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
26	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ','  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ','  +  1;	  _outputBuffer[_outputTail++]    =    ',';    	compilable	  [FE]  AssertionFailedError  	10	2	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  '['  +  2;	  _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
28	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  2;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  2;	  _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  '['  +  4;	  _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
30	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  4;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '['  +  4;	  _outputBuffer[_outputTail++]    =    '['    +    1;    	compilable	  [FE]  AssertionFailedError  	2	2	replace
31	[BUG]  [BUGGY]  _writer.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writer.writeStartArray(this);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writer.writeStartArray(this);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext  =  _writeContext.createChildArrayContext();	      	compilable	  [FE]  AssertionFailedError  	6	2	replace
33	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildArrayContext();	      	compilable	  [FE]  AssertionFailedError  	6	2	replace
34	[BUG]  [BUGGY]  _writeContext.writeStartArray(this);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writeContext.writeStartArray(this);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext.writeStartArray(this);	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_writeContext  =  _writeContext.createChildObjectContext();	      	compilable	  [FE]  JsonGenerationException  	6	2	replace
36	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [FE]  JsonGenerationException  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_writeContext  =  _writeContext.createChildObjectContext();	      	compilable	  [FE]  JsonGenerationException  	6	2	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  '0';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
38	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '0';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  '0';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
40	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
41	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;	  	non-compiled	[CE]  not  a  statement	1	None	add
42	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [CE]  :  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  =  '['  +  1;	  	non-compiled	[CE]  :  expected	1	None	add
43	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    ((  _outputTail++)  <  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1);	  	non-compiled	[CE]  not  a  statement	1	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
45	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ';';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
46	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ');';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ');';	  	non-compiled	[CE]  unclosed  character  literal	11	None	add
47	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  int  _outputBuffer[_outputTail++]  =  ';';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    int  _outputBuffer[_outputTail++]  =  ';';	  	non-compiled	[CE]  ']'  expected	11	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
49	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  _outputBuffer[_outputTail++]  =  ':';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    _outputBuffer[_outputTail++]  =  ':';	  	compilable	  [FE]  AssertionFailedError  	11	2	add
50	[BUG]  [BUGGY]      _writer.writeEndArray(this);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.writeEndArray(this);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	        _writer.writeEndArray(this);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  'r';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
52	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'r';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  'r';	  _outputBuffer[_outputTail++]    =    'n';    	compilable	  [FE]  AssertionFailedError  	4	2	replace
53	[BUG]  [BUGGY]      _writer.write(this);  [CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator)  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(this);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	        _writer.write(this);	  	non-compiled	[CE]  no  suitable  method  found  for  write(WriterBasedJsonGenerator)	5	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ' "';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]  =  ' "';	  _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
55	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ' "';  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ' "';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]  =  ' "';	  _outputBuffer[_outputTail++]    =    ']';    	compilable	  [FE]  AssertionFailedError  	8	2	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
57	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
58	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ',';	  	non-compiled	[CE]  not  a  statement	9	None	add
59	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	9	None	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
61	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
62	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	11	None	add
63	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ';';	  	non-compiled	[CE]  not  a  statement	11	None	add
64	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  ']';	  	non-compiled	[CE]  not  a  statement	7	None	add
65	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	7	None	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
68	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  'n';	  	non-compiled	[CE]  not  a  statement	3	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
70	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
71	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  =  'n'  :  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	3	None	add
72	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  '['  +  1;	  	non-compiled	[CE]  not  a  statement	1	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
74	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
75	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    ((  _outputTail  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail++]  :  null;	  	non-compiled	[CE]  not  a  statement	1	None	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
77	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
79	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	3	2	add
80	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd));  _outputBuffer[_outputTail++]  =  'n';  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  'n';  ((  _outputTail  +  1)  >=  _outputEnd));  _outputBuffer[_outputTail++]  =  'n';  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    'n';    ((  _outputTail  +  1)  >=  _outputEnd));  _outputBuffer[_outputTail++]  =  'n';	  	non-compiled	[CE]  not  a  statement	3	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
82	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ',';  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
84	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	9	2	add
85	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ',';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ',';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	9	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
87	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  '['  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
89	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    int  _outputTail  =  _outputEnd  -  _outputBuffer.length;  _outputBuffer[_outputTail++]  =  '['  +  1;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
91	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  '['  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    '['    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
93	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
95	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ']';  }	  	compilable	  [FE]  AssertionFailedError  	7	2	add
96	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ']';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ']';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	7	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
98	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  ';';  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
100	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	11	2	add
101	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail++]  =  ';';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	_outputBuffer[_outputTail++]    =    ';';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _writeContext  =  _writeContext.createChildArrayContext();  _outputBuffer[_outputTail++]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	11	None	add
102	[BUG]  [BUGGY]      _writer.write(_outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char[],int)  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(_outputBuffer,  _outputTail);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	        _writer.write(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int)	5	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	        _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
104	[BUG]  [BUGGY]      _writer.write(_outputBuffer,  0,  _outputTail);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	        _writer.write(_outputBuffer,  0,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write('n');  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	add	        _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	5	2	add
106	[BUG]  [BUGGY]      _writer.write('n');  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(   "start  an  array   ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write('n');  [BUGGY]    }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	208	208	1	replace	        _writer.write('n');	  	compilable	  [FE]  AssertionFailedError  	5	2	add
