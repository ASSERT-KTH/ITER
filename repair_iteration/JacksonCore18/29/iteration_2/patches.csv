bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawTypeDesc());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawTypeDesc());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawTypeDesc());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawClass());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawClass());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getRawClass());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
4	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
5	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
6	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildObjectContext();	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
7	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext.getEntryCount());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext.getEntryCount());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext.getEntryCount());	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
9	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
11	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
13	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
14	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  ']'))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  ']'))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  ']'))  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]  ==  ']'))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]  ==  ']'))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]  ==  ']'))  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  If(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  If(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	If(_outputTail  >=  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
17	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
18	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail!=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
19	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
20	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
21	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  [Delete]  _outputEnd)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  [Delete]  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail  [Delete]  _outputEnd)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
23	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    	compilable	  [FE]  AssertionFailedError  	12	1	replace
24	[BUG]  [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	12	None	replace
25	[BUG]  [BUGGY]  _writeContext  =  _writeContext.getEnd();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.getEnd();  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.getEnd();	  _writeContext    =    _writeContext.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  _writeContext  =  _writeContext.getRawParent();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.getRawParent();  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.getRawParent();	  _writeContext    =    _writeContext.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  _writeContext  =  _writeContext.getEntryCount();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.getEntryCount();  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.getEntryCount();	  _writeContext    =    _writeContext.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getTypeDesc());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writer.writeEndArray(this,  _writeContext.getTypeDesc());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeEndArray(this,  _writeContext.getTypeDesc());	  _writer.writeEndArray(this);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  _writer.writeStartArray(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writer.writeStartArray(this);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeStartArray(this);	  _writer.writeEndArray(this);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  if(_outputTail  >>  _outputEnd.length)  {  [CE]  int  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >>  _outputEnd.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >>  _outputEnd.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
31	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd.length)  {  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=  _outputEnd.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
32	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd.length)  {  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  ==  _outputEnd.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	19	None	replace
33	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
34	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
35	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
36	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
37	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	9	None	add
38	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
39	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
40	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
41	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
42	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
43	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    <    _outputEnd)    {    if(_outputTail  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
44	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    <    _outputEnd)    {    if(_outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
45	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  If(_outputTail  <  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  If(_outputTail  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    <    _outputEnd)    {    If(_outputTail  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
46	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeEndArray(this,  _writeContext.getEntryCount()  +  1);	  _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount()  -  1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeEndArray(this,  _writeContext.getEntryCount()  -  1);	  _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd,  _outputEnd.length)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd,  _outputEnd.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd,  _outputEnd.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
49	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd,  _writeContext.length)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd,  _writeContext.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd,  _writeContext.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||(_outputTail  >=  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  ||(_outputTail  >=  _outputEnd))  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
51	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||(_outputTail  >=  _outputEnd))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||(_outputTail  >=  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  ||(_outputTail  >=  _outputEnd))  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
52	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _writeContext.getEntryCount());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writer.writeStartArray(this,  _writeContext.getEntryCount());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeStartArray(this,  _writeContext.getEntryCount());	  _writer.writeEndArray(this,    _writeContext.getEntryCount());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead  ==  _outputEnd))  {	  if(_outputTail    ==    _outputEnd)    {    if(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	10	None	replace
55	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	||(_outputTail  >=  _outputEnd))  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildArrayContext(true);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  _outputEnd))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputBuffer[_outputTail++]!=  _outputEnd))  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getMessage());	  _reportError(   "Current    context    not    an    ARRAY    but   "+_writeContext.getTypeDesc());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  [BUGGY]  _outputEnd)  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(_outputTail  [BUGGY]  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=    _outputEnd)    {    if(_outputTail  [BUGGY]  _outputEnd)  {	  	non-compiled	[CE]  ')'  expected	13	None	add
60	[BUG]  [BUGGY]  _writeContext  =  _writeContext.readContext(this,  _writeContext.getEntryCount());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.readContext(this,  _writeContext.getEntryCount());  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.readContext(this,  _writeContext.getEntryCount());	  _writeContext    =    _writeContext.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  >>  ']')  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  >>  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  >>  ']')  {	  	non-compiled	[CE]  ';'  expected	11	None	add
62	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this,  _writeContext);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd&&  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd&&  _outputBuffer[_outputTail++]!=  _outputEnd)  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
64	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd&&  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd&&  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd&&  _outputBuffer[_outputTail++]!=  _outputEnd)  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
66	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(_outputTail!=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
68	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    ']')    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
69	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd,  _outputBuffer.length)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd,  _outputBuffer.length)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd,  _outputBuffer.length)  {	  if(_outputTail    >=    _outputEnd.length)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	2	replace
71	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(     "Current  context  not  an  ARRAY  but       "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    ']')    {    	compilable	  [FE]  AssertionFailedError  	10	2	replace
