bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getTypeDesc());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  _writeContext  =  _writeContext.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _writeContext  =  _writeContext.getParent();  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.getParent();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _writer.writeEndArray(this,  _writeContext.getEntryCount());  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeEndArray(this,  _writeContext.getEntryCount());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  _writer.writeEndArray(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _writer.writeEndArray(this);  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writer.writeEndArray(this);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    ==    _outputEnd)    {    if(_outputTail  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
6	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    ==    _outputEnd)    {    if(_outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
7	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    ==    _outputEnd)    {    if(_outputTail!=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
8	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  ==  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    ==    _outputEnd)    {    if(_outputTail  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
10	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
12	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail!=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail!=  _outputEnd)  {	  if(_outputTail    >>    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
14	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail!=  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail!=  _outputEnd)  {	  if(_outputTail    >>    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
15	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd)  {  If(_outputTail  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  ==  _outputEnd)  {  If(_outputTail  ==  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail    ==    _outputEnd)    {    If(_outputTail  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
16	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getEntryCount());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getEntryCount());  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_writeContext.getEntryCount());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  <  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	add	if(_outputTail  <  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
18	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  <  _outputEnd)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  <  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
19	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd.length)  {  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  if(_outputTail  >=  _outputEnd.length)  {  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	if(_outputTail  >=  _outputEnd.length)  {	  if(_outputTail    >>    _outputEnd)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
20	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeEndArray()  throws  IOException,  JsonGenerationException  {  if  (!_writeContext.inArray())  {  _reportError(   "Current  context  not  an  ARRAY  but     "+_writeContext.getTypeDesc());  }  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeEndArray(this,  _writeContext.getEntryCount());  }  else  {    [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext();  [BUGGY]    _flushBuffer();  }  _outputBuffer[_outputTail++]  =  ']';  }  _writeContext  =  _writeContext.clearAndGetParent();  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeEndArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	221	221	1	replace	_writeContext  =  _writeContext.createChildArrayContext();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
